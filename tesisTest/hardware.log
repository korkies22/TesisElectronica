
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+36 (git sha1 4a7bc8c7, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `hardware.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: hardware.v
Parsing Verilog input from `hardware.v' to AST representation.
Generating RTLIL representation for module `\hardware'.
Successfully finished Verilog frontend.

-- Parsing `spimemio.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: spimemio.v
Parsing Verilog input from `spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

-- Parsing `simpleuart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: simpleuart.v
Parsing Verilog input from `simpleuart.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Successfully finished Verilog frontend.

-- Parsing `picosoc.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: picosoc.v
Parsing Verilog input from `picosoc.v' to AST representation.
Generating RTLIL representation for module `\picosoc'.
Generating RTLIL representation for module `\picosoc_regs'.
Generating RTLIL representation for module `\picosoc_mem'.
Successfully finished Verilog frontend.

-- Parsing `picorv32.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: picorv32.v
Parsing Verilog input from `picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

-- Parsing `clock.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: clock.v
Parsing Verilog input from `clock.v' to AST representation.
Generating RTLIL representation for module `\clock'.
Successfully finished Verilog frontend.

-- Parsing `pwm.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: pwm.v
Parsing Verilog input from `pwm.v' to AST representation.
Generating RTLIL representation for module `\pwm'.
Successfully finished Verilog frontend.

-- Parsing `encoder.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: encoder.v
Parsing Verilog input from `encoder.v' to AST representation.
Generating RTLIL representation for module `\encoder'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top hardware -blif hardware.blif' --

9. Executing SYNTH_ICE40 pass.

9.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

9.2. Executing HIERARCHY pass (managing design hierarchy).

9.2.1. Analyzing design hierarchy..
Top module:  \hardware
Used module:     \picosoc
Used module:         \picosoc_mem
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \encoder
Used module:     \pwm
Used module:     \clock

9.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc'.
Parameter \MEM_WORDS = 2048
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Generating RTLIL representation for module `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696'.

9.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_mem'.
Parameter \WORDS = 256
Generating RTLIL representation for module `$paramod\picosoc_mem\WORDS=256'.

9.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1
Parameter \ENABLE_DIV = 1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Parameter \STACKADDR = 1024
Generating RTLIL representation for module `$paramod$ec5c1c222cb66c54ad2fd64df033c03563be8a28\picorv32'.

9.2.5. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         \picosoc_mem
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \encoder
Used module:     \pwm
Used module:     \clock

9.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_mem'.
Parameter \WORDS = 2048
Generating RTLIL representation for module `$paramod\picosoc_mem\WORDS=2048'.

9.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1
Parameter \ENABLE_DIV = 1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Parameter \STACKADDR = 8192
Generating RTLIL representation for module `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32'.

9.2.8. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         $paramod\picosoc_mem\WORDS=2048
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs
Used module:     \encoder
Used module:     \pwm
Used module:     \clock

9.2.9. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         $paramod\picosoc_mem\WORDS=2048
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs
Used module:     \encoder
Used module:     \pwm
Used module:     \clock
Removing unused module `$paramod$ec5c1c222cb66c54ad2fd64df033c03563be8a28\picorv32'.
Removing unused module `$paramod\picosoc_mem\WORDS=256'.
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removing unused module `\picosoc_mem'.
Removing unused module `\picosoc'.
Removed 10 unused modules.

9.3. Executing PROC pass (convert processes to netlists).

9.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
Found and cleaned up 1 empty switch in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2450'.
Found and cleaned up 6 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:529$2092'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:529$2092'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
Cleaned up 24 empty switches.

9.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$encoder.v:20$1158 in module encoder.
Marked 3 switch rules as full_case in process $proc$pwm.v:23$1141 in module pwm.
Marked 41 switch rules as full_case in process $proc$picorv32.v:1374$2464 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1287$2433 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1273$2428 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1164$2393 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:839$2132 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:790$2130 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:759$2126 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 47 switch rules as full_case in process $proc$picorv32.v:683$2125 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:548$2101 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:413$2061 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:384$2058 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:384$2058 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:373$2053 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:308$1979 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:2392$1073 in module picorv32_pcpi_div.
Marked 4 switch rules as full_case in process $proc$picorv32.v:2201$1017 in module picorv32_pcpi_mul.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$172 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$163 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$161 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$spimemio.v:535$141 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$spimemio.v:447$117 in module spimemio_xfer.
Marked 3 switch rules as full_case in process $proc$spimemio.v:207$87 in module spimemio.
Marked 1 switch rules as full_case in process $proc$spimemio.v:99$65 in module spimemio.
Marked 1 switch rules as full_case in process $proc$hardware.v:129$5 in module hardware.
Removed a total of 2 dead cases.

9.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 133 assignments to connections.

9.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\encoder.$proc$encoder.v:18$1175'.
  Set init value: \pinEncoderFPrev = 1'0
Found init rule in `\encoder.$proc$encoder.v:15$1174'.
  Set init value: \encoderCounter = 4'0000
Found init rule in `\encoder.$proc$encoder.v:14$1173'.
  Set init value: \encoderCount = 0
Found init rule in `\pwm.$proc$pwm.v:19$1157'.
  Set init value: \state = 1'0
Found init rule in `\pwm.$proc$pwm.v:17$1156'.
  Set init value: \count_temp = 10'0000000000
Found init rule in `\pwm.$proc$pwm.v:15$1155'.
  Set init value: \pwm_counter = 1'0
Found init rule in `\pwm.$proc$pwm.v:13$1154'.
  Set init value: \counterI = 0
Found init rule in `\clock.$proc$clock.v:12$1140'.
  Set init value: \counterO = 0
Found init rule in `\clock.$proc$clock.v:10$1139'.
  Set init value: \counterI = 0
Found init rule in `\hardware.$proc$hardware.v:122$55'.
  Set init value: \encoderDataD = 0
Found init rule in `\hardware.$proc$hardware.v:121$54'.
  Set init value: \encoderDataI = 0
Found init rule in `\hardware.$proc$hardware.v:118$53'.
  Set init value: \writeEncoderD = 1'0
Found init rule in `\hardware.$proc$hardware.v:117$52'.
  Set init value: \writeEncoderI = 1'0
Found init rule in `\hardware.$proc$hardware.v:114$51'.
  Set init value: \pinTest = 0
Found init rule in `\hardware.$proc$hardware.v:112$50'.
  Set init value: \pwm_connectorDB = 0
Found init rule in `\hardware.$proc$hardware.v:111$49'.
  Set init value: \pwm_connectorDF = 0
Found init rule in `\hardware.$proc$hardware.v:110$48'.
  Set init value: \pwm_connectorIB = 0
Found init rule in `\hardware.$proc$hardware.v:109$47'.
  Set init value: \pwm_connectorIF = 0
Found init rule in `\hardware.$proc$hardware.v:104$46'.
  Set init value: \clockO = 0
Found init rule in `\hardware.$proc$hardware.v:65$45'.
  Set init value: \reset_cnt = 6'000000

9.3.5. Executing PROC_ARST pass (detect async resets in processes).

9.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\encoder.$proc$encoder.v:18$1175'.
Creating decoders for process `\encoder.$proc$encoder.v:15$1174'.
Creating decoders for process `\encoder.$proc$encoder.v:14$1173'.
Creating decoders for process `\encoder.$proc$encoder.v:20$1158'.
     1/3: $0\pinEncoderFPrev[0:0]
     2/3: $0\encoderCounter[3:0]
     3/3: $0\encoderCount[31:0]
Creating decoders for process `\pwm.$proc$pwm.v:19$1157'.
Creating decoders for process `\pwm.$proc$pwm.v:17$1156'.
Creating decoders for process `\pwm.$proc$pwm.v:15$1155'.
Creating decoders for process `\pwm.$proc$pwm.v:13$1154'.
Creating decoders for process `\pwm.$proc$pwm.v:23$1141'.
     1/6: $3\state[0:0]
     2/6: $2\state[0:0]
     3/6: $1\state[0:0]
     4/6: $0\counterI[31:0]
     5/6: $0\count_temp[9:0]
     6/6: $0\pwm_counter[0:0]
Creating decoders for process `\clock.$proc$clock.v:12$1140'.
Creating decoders for process `\clock.$proc$clock.v:10$1139'.
Creating decoders for process `\clock.$proc$clock.v:16$1135'.
     1/2: $0\counterI[31:0]
     2/2: $0\counterO[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
     1/85: $23\next_irq_pending[2:2]
     2/85: $22\next_irq_pending[2:2]
     3/85: $21\next_irq_pending[2:2]
     4/85: $20\next_irq_pending[2:2]
     5/85: $19\next_irq_pending[2:2]
     6/85: $18\next_irq_pending[2:2]
     7/85: $17\next_irq_pending[2:2]
     8/85: $5\next_irq_pending[31:0] [31:2]
     9/85: $3\set_mem_do_rdata[0:0]
    10/85: $5\next_irq_pending[31:0] [1]
    11/85: $3\set_mem_do_wdata[0:0]
    12/85: $5\next_irq_pending[31:0] [0]
    13/85: $4\set_mem_do_rinst[0:0]
    14/85: $3\set_mem_do_rinst[0:0]
    15/85: $4\set_mem_do_wdata[0:0]
    16/85: $15\next_irq_pending[1:1]
    17/85: $14\next_irq_pending[1:1]
    18/85: $13\next_irq_pending[1:1]
    19/85: $4\set_mem_do_rdata[0:0]
    20/85: $11\next_irq_pending[1:1]
    21/85: $10\next_irq_pending[1:1]
    22/85: $9\next_irq_pending[1:1]
    23/85: $8\next_irq_pending[1:1]
    24/85: $7\next_irq_pending[1:1]
    25/85: $16\next_irq_pending[1:1]
    26/85: $5\set_mem_do_rinst[0:0]
    27/85: $12\next_irq_pending[1:1]
    28/85: $6\next_irq_pending[31:0]
    29/85: $3\current_pc[31:0]
    30/85: $2\current_pc[31:0]
    31/85: $2\set_mem_do_wdata[0:0]
    32/85: $2\set_mem_do_rdata[0:0]
    33/85: $2\set_mem_do_rinst[0:0]
    34/85: $4\next_irq_pending[31:0]
    35/85: $1\current_pc[31:0]
    36/85: $1\set_mem_do_wdata[0:0]
    37/85: $1\set_mem_do_rdata[0:0]
    38/85: $1\set_mem_do_rinst[0:0]
    39/85: $0\trace_data[35:0]
    40/85: $3\next_irq_pending[31:0]
    41/85: $2\next_irq_pending[0:0]
    42/85: $1\next_irq_pending[0:0]
    43/85: $0\count_cycle[63:0]
    44/85: $0\pcpi_timeout[0:0]
    45/85: $0\trace_valid[0:0]
    46/85: $0\do_waitirq[0:0]
    47/85: $0\decoder_pseudo_trigger[0:0]
    48/85: $0\decoder_trigger[0:0]
    49/85: $0\alu_wait_2[0:0]
    50/85: $0\alu_wait[0:0]
    51/85: $0\reg_out[31:0]
    52/85: $0\reg_sh[4:0]
    53/85: $0\trap[0:0]
    54/85: $0\pcpi_timeout_counter[3:0]
    55/85: $0\latched_rd[5:0]
    56/85: $0\latched_is_lb[0:0]
    57/85: $0\latched_is_lh[0:0]
    58/85: $0\latched_is_lu[0:0]
    59/85: $0\latched_trace[0:0]
    60/85: $0\latched_compr[0:0]
    61/85: $0\latched_branch[0:0]
    62/85: $0\latched_stalu[0:0]
    63/85: $0\latched_store[0:0]
    64/85: $0\irq_state[1:0]
    65/85: $0\cpu_state[7:0]
    66/85: $0\dbg_rs2val_valid[0:0]
    67/85: $0\dbg_rs1val_valid[0:0]
    68/85: $0\dbg_rs2val[31:0]
    69/85: $0\dbg_rs1val[31:0]
    70/85: $0\mem_do_wdata[0:0]
    71/85: $0\mem_do_rdata[0:0]
    72/85: $0\mem_do_rinst[0:0]
    73/85: $0\mem_do_prefetch[0:0]
    74/85: $0\mem_wordsize[1:0]
    75/85: $0\timer[31:0]
    76/85: $0\irq_mask[31:0]
    77/85: $0\irq_active[0:0]
    78/85: $0\irq_delay[0:0]
    79/85: $0\reg_op2[31:0]
    80/85: $0\reg_op1[31:0]
    81/85: $0\reg_next_pc[31:0]
    82/85: $0\reg_pc[31:0]
    83/85: $0\count_instr[63:0]
    84/85: $0\eoi[31:0]
    85/85: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2450'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2433'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2428'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2427'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2405'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2393'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
     1/76: $0\decoded_rs1[5:0] [5]
     2/76: $0\decoded_imm_uj[31:0] [10]
     3/76: $0\decoded_imm_uj[31:0] [7]
     4/76: $0\decoded_imm_uj[31:0] [6]
     5/76: $0\decoded_imm_uj[31:0] [3:1]
     6/76: $0\decoded_imm_uj[31:0] [5]
     7/76: $0\decoded_imm_uj[31:0] [9:8]
     8/76: $0\decoded_imm_uj[31:0] [31:20]
     9/76: $0\decoded_imm_uj[31:0] [4]
    10/76: $0\decoded_imm_uj[31:0] [11]
    11/76: $0\decoded_imm_uj[31:0] [0]
    12/76: $0\decoded_rs1[5:0] [4:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[5:0]
    26/76: $0\decoded_imm_uj[31:0] [19:12]
    27/76: $0\decoded_rd[5:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2125'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2061'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2058'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2053'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1979'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
     1/12: $0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951
     2/12: $0$memwr$\mem$picosoc.v:234$1944_DATA[31:0]$1950
     3/12: $0$memwr$\mem$picosoc.v:234$1944_ADDR[21:0]$1949
     4/12: $0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954
     5/12: $0$memwr$\mem$picosoc.v:235$1945_DATA[31:0]$1953
     6/12: $0$memwr$\mem$picosoc.v:235$1945_ADDR[21:0]$1952
     7/12: $0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957
     8/12: $0$memwr$\mem$picosoc.v:236$1946_DATA[31:0]$1956
     9/12: $0$memwr$\mem$picosoc.v:236$1946_ADDR[21:0]$1955
    10/12: $0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960
    11/12: $0$memwr$\mem$picosoc.v:237$1947_DATA[31:0]$1959
    12/12: $0$memwr$\mem$picosoc.v:237$1947_ADDR[21:0]$1958
Creating decoders for process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1217'.
Creating decoders for process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1184'.
Creating decoders for process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
     1/9: $0\pcpi_rd[31:0]
     2/9: $0\pcpi_wr[0:0]
     3/9: $0\pcpi_ready[0:0]
     4/9: $0\outsign[0:0]
     5/9: $0\running[0:0]
     6/9: $0\quotient_msk[31:0]
     7/9: $0\quotient[31:0]
     8/9: $0\divisor[62:0]
     9/9: $0\dividend[31:0]
Creating decoders for process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
     1/4: $0\instr_remu[0:0]
     2/4: $0\instr_rem[0:0]
     3/4: $0\instr_divu[0:0]
     4/4: $0\instr_div[0:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1022'.
     1/3: $0\pcpi_ready[0:0]
     2/3: $0\pcpi_wr[0:0]
     3/3: $0\pcpi_rd[31:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
     1/7: $0\mul_finish[0:0]
     2/7: $0\mul_waiting[0:0]
     3/7: $0\mul_counter[6:0]
     4/7: $0\rdx[63:0]
     5/7: $0\rd[63:0]
     6/7: $0\rs2[63:0]
     7/7: $0\rs1[63:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
     1/4: $0\instr_mulhu[0:0]
     2/4: $0\instr_mulhsu[0:0]
     3/4: $0\instr_mulh[0:0]
     4/4: $0\instr_mul[0:0]
Creating decoders for process `\picosoc_regs.$proc$picosoc.v:214$227'.
     1/3: $0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230
     2/3: $0$memwr$\regs$picosoc.v:215$226_DATA[31:0]$229
     3/3: $0$memwr$\regs$picosoc.v:215$226_ADDR[4:0]$228
Creating decoders for process `\simpleuart.$proc$simpleuart.v:109$172'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:66$163'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:55$161'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:535$141'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:447$117'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io3_oe[0:0]
    18/33: $2\flash_io2_do[0:0]
    19/33: $2\flash_io2_oe[0:0]
    20/33: $2\flash_io1_do[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io3_oe[0:0]
    28/33: $1\flash_io2_do[0:0]
    29/33: $1\flash_io2_oe[0:0]
    30/33: $1\flash_io1_do[0:0]
    31/33: $1\flash_io1_oe[0:0]
    32/33: $1\flash_io0_do[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:436$108'.
Creating decoders for process `\spimemio.$proc$spimemio.v:207$87'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:151$69'.
Creating decoders for process `\spimemio.$proc$spimemio.v:99$65'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\hardware.$proc$hardware.v:122$55'.
Creating decoders for process `\hardware.$proc$hardware.v:121$54'.
Creating decoders for process `\hardware.$proc$hardware.v:118$53'.
Creating decoders for process `\hardware.$proc$hardware.v:117$52'.
Creating decoders for process `\hardware.$proc$hardware.v:114$51'.
Creating decoders for process `\hardware.$proc$hardware.v:112$50'.
Creating decoders for process `\hardware.$proc$hardware.v:111$49'.
Creating decoders for process `\hardware.$proc$hardware.v:110$48'.
Creating decoders for process `\hardware.$proc$hardware.v:109$47'.
Creating decoders for process `\hardware.$proc$hardware.v:104$46'.
Creating decoders for process `\hardware.$proc$hardware.v:65$45'.
Creating decoders for process `\hardware.$proc$hardware.v:129$5'.
     1/37: $0\pinTest[31:0] [31:24]
     2/37: $0\pinTest[31:0] [23:16]
     3/37: $0\pinTest[31:0] [15:8]
     4/37: $0\pinTest[31:0] [7:0]
     5/37: $0\pwm_connectorDB[31:0] [23:16]
     6/37: $0\pwm_connectorDB[31:0] [15:8]
     7/37: $0\pwm_connectorDB[31:0] [7:0]
     8/37: $0\pwm_connectorDF[31:0] [23:16]
     9/37: $0\pwm_connectorDF[31:0] [15:8]
    10/37: $0\pwm_connectorDF[31:0] [7:0]
    11/37: $0\pwm_connectorIB[31:0] [23:16]
    12/37: $0\pwm_connectorIB[31:0] [15:8]
    13/37: $0\pwm_connectorIB[31:0] [7:0]
    14/37: $0\pwm_connectorIF[31:0] [23:16]
    15/37: $0\pwm_connectorIF[31:0] [15:8]
    16/37: $0\pwm_connectorIF[31:0] [7:0]
    17/37: $0\encoderDataD[31:0] [23:16]
    18/37: $0\encoderDataD[31:0] [15:8]
    19/37: $0\encoderDataD[31:0] [7:0]
    20/37: $0\encoderDataI[31:0] [23:16]
    21/37: $0\encoderDataI[31:0] [15:8]
    22/37: $0\encoderDataI[31:0] [7:0]
    23/37: $0\clockO[31:0] [23:16]
    24/37: $0\clockO[31:0] [15:8]
    25/37: $0\clockO[31:0] [7:0]
    26/37: $0\clockO[31:0] [31:24]
    27/37: $0\writeEncoderD[0:0]
    28/37: $0\writeEncoderI[0:0]
    29/37: $0\pwm_connectorDB[31:0] [31:24]
    30/37: $0\pwm_connectorDF[31:0] [31:24]
    31/37: $0\pwm_connectorIB[31:0] [31:24]
    32/37: $0\pwm_connectorIF[31:0] [31:24]
    33/37: $0\encoderDataD[31:0] [31:24]
    34/37: $0\gpio[31:0]
    35/37: $0\encoderDataI[31:0] [31:24]
    36/37: $0\iomem_rdata[31:0]
    37/37: $0\iomem_ready[0:0]
Creating decoders for process `\hardware.$proc$hardware.v:68$2'.

9.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_rs1' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2450'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_rs2' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2450'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2450'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_write' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2433'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_wrdata' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2433'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\clear_prefetched_high_word' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2428'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2405'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_0' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2405'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_ascii_state' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2393'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_opcode' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_ascii_instr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_imm' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rs1' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rs2' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rd' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\new_ascii_instr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2125'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_add_sub' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_shl' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_shr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_eq' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_ltu' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_lts' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_wdata' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2058'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_wstrb' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2058'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_rdata_word' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2058'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_wr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1979'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_rd' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1979'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_wait' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1979'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_ready' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1979'.
No latch inferred for signal `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.\irq' from process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1184'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs1' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\picorv32_pcpi_mul.\this_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rd' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdx' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdt' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\picorv32_pcpi_mul.\i' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\picorv32_pcpi_mul.\j' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$spimemio.v:447$117'.

9.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\encoder.\encoderCount' using process `\encoder.$proc$encoder.v:20$1158'.
  created $dff cell `$procdff$6827' with positive edge clock.
Creating register for signal `\encoder.\encoderCounter' using process `\encoder.$proc$encoder.v:20$1158'.
  created $dff cell `$procdff$6828' with positive edge clock.
Creating register for signal `\encoder.\pinEncoderFPrev' using process `\encoder.$proc$encoder.v:20$1158'.
  created $dff cell `$procdff$6829' with positive edge clock.
Creating register for signal `\pwm.\state' using process `\pwm.$proc$pwm.v:23$1141'.
  created $dff cell `$procdff$6830' with positive edge clock.
Creating register for signal `\pwm.\counterI' using process `\pwm.$proc$pwm.v:23$1141'.
  created $dff cell `$procdff$6831' with positive edge clock.
Creating register for signal `\pwm.\pwm_counter' using process `\pwm.$proc$pwm.v:23$1141'.
  created $dff cell `$procdff$6832' with positive edge clock.
Creating register for signal `\pwm.\count_temp' using process `\pwm.$proc$pwm.v:23$1141'.
  created $dff cell `$procdff$6833' with positive edge clock.
Creating register for signal `\clock.\counterI' using process `\clock.$proc$clock.v:16$1135'.
  created $dff cell `$procdff$6834' with positive edge clock.
Creating register for signal `\clock.\counterO' using process `\clock.$proc$clock.v:16$1135'.
  created $dff cell `$procdff$6835' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trap' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6836' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6837' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\eoi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6838' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trace_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6839' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trace_data' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6840' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\count_cycle' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6841' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\count_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6842' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6843' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_next_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6844' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_op1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6845' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_op2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6846' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_out' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6847' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_sh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6848' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_delay' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6849' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_active' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6850' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_mask' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6851' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_pending' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6852' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\timer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6853' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wordsize' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6854' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_prefetch' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6855' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_rinst' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6856' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_rdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6857' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6858' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_trigger' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6859' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_trigger_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6860' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_pseudo_trigger' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6861' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6862' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs1val' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6863' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs2val' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6864' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs1val_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6865' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs2val_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6866' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpu_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6867' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6868' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_rinst' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6869' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_rdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6870' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6871' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_store' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6872' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_stalu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6873' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_branch' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6874' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_compr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6875' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_trace' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6876' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6877' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6878' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6879' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6880' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\current_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6881' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_timeout_counter' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6882' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_timeout' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6883' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\next_irq_pending' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6884' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\do_waitirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6885' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6886' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_0_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6887' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_wait' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6888' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_wait_2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
  created $dff cell `$procdff$6889' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\clear_prefetched_high_word_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2427'.
  created $dff cell `$procdff$6890' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_insn' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6891' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lui' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6892' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_auipc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6893' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_jal' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6894' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_jalr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6895' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_beq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6896' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bne' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6897' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_blt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6898' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bge' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6899' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6900' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bgeu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6901' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6902' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6903' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6904' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lbu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6905' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lhu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6906' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6907' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6908' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6909' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_addi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6910' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slti' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6911' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sltiu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6912' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_xori' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6913' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_ori' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6914' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_andi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6915' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slli' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6916' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srli' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6917' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srai' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6918' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_add' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6919' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sub' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6920' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sll' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6921' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6922' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6923' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_xor' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6924' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srl' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6925' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sra' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6926' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_or' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6927' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_and' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6928' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdcycle' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6929' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdcycleh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6930' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdinstr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6931' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdinstrh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6932' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_ecall_ebreak' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6933' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_getq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6934' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_setq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6935' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_retirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6936' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_maskirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6937' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_waitirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6938' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_timer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6939' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6940' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6941' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6942' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6943' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_imm_uj' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6944' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\compressed_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6945' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lui_auipc_jal' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6946' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6947' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_slli_srli_srai' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6948' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6949' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sb_sh_sw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6950' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sll_srl_sra' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6951' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6952' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_slti_blt_slt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6953' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6954' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6955' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lbu_lhu_lw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6956' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_alu_reg_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6957' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_alu_reg_reg' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6958' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_compare' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
  created $dff cell `$procdff$6959' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_addr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6960' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_ascii_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6961' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6962' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6963' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6964' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6965' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6966' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_next' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6967' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_valid_insn' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6968' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_ascii_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6969' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6970' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6971' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6972' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6973' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
  created $dff cell `$procdff$6974' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6975' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6976' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_addr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6977' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6978' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wstrb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6979' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6980' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_secondword' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6981' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\prefetched_high_word' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6982' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_16bit_buffer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
  created $dff cell `$procdff$6983' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\next_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2061'.
  created $dff cell `$procdff$6984' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_rdata_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2061'.
  created $dff cell `$procdff$6985' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_firstword_reg' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2053'.
  created $dff cell `$procdff$6986' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\last_mem_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2053'.
  created $dff cell `$procdff$6987' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.\rdata' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6988' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1944_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6989' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1944_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6990' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1944_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6991' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1945_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6992' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1945_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6993' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1945_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6994' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1946_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6995' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1946_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6996' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1946_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6997' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1947_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6998' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1947_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$6999' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1947_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
  created $dff cell `$procdff$7000' with positive edge clock.
Creating register for signal `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.\ram_ready' using process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1217'.
  created $dff cell `$procdff$7001' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wr' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7002' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_rd' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7003' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_ready' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7004' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\dividend' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7005' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\divisor' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7006' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7007' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient_msk' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7008' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\running' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7009' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\outsign' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
  created $dff cell `$procdff$7010' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
  created $dff cell `$procdff$7011' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait_q' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
  created $dff cell `$procdff$7012' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_div' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
  created $dff cell `$procdff$7013' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_divu' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
  created $dff cell `$procdff$7014' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_rem' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
  created $dff cell `$procdff$7015' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_remu' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
  created $dff cell `$procdff$7016' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wr' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1022'.
  created $dff cell `$procdff$7017' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1022'.
  created $dff cell `$procdff$7018' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_ready' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1022'.
  created $dff cell `$procdff$7019' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs1' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
  created $dff cell `$procdff$7020' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs2' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
  created $dff cell `$procdff$7021' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
  created $dff cell `$procdff$7022' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rdx' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
  created $dff cell `$procdff$7023' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_counter' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
  created $dff cell `$procdff$7024' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_waiting' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
  created $dff cell `$procdff$7025' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_finish' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
  created $dff cell `$procdff$7026' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
  created $dff cell `$procdff$7027' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mul' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
  created $dff cell `$procdff$7028' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulh' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
  created $dff cell `$procdff$7029' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhsu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
  created $dff cell `$procdff$7030' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
  created $dff cell `$procdff$7031' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait_q' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
  created $dff cell `$procdff$7032' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$226_ADDR' using process `\picosoc_regs.$proc$picosoc.v:214$227'.
  created $dff cell `$procdff$7033' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$226_DATA' using process `\picosoc_regs.$proc$picosoc.v:214$227'.
  created $dff cell `$procdff$7034' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$226_EN' using process `\picosoc_regs.$proc$picosoc.v:214$227'.
  created $dff cell `$procdff$7035' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$simpleuart.v:109$172'.
  created $dff cell `$procdff$7036' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$simpleuart.v:109$172'.
  created $dff cell `$procdff$7037' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$simpleuart.v:109$172'.
  created $dff cell `$procdff$7038' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$simpleuart.v:109$172'.
  created $dff cell `$procdff$7039' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$simpleuart.v:66$163'.
  created $dff cell `$procdff$7040' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$simpleuart.v:66$163'.
  created $dff cell `$procdff$7041' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$simpleuart.v:66$163'.
  created $dff cell `$procdff$7042' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$simpleuart.v:66$163'.
  created $dff cell `$procdff$7043' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$simpleuart.v:66$163'.
  created $dff cell `$procdff$7044' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$simpleuart.v:55$161'.
  created $dff cell `$procdff$7045' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7046' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7047' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7048' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7049' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7050' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7051' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7052' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7053' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7054' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7055' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7056' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7057' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7058' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$141'.
  created $dff cell `$procdff$7059' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$spimemio.v:436$108'.
  created $dff cell `$procdff$7060' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$spimemio.v:436$108'.
  created $dff cell `$procdff$7061' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7062' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7063' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7064' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7065' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7066' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7067' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7068' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7069' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7070' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7071' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7072' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7073' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7074' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7075' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$spimemio.v:207$87'.
  created $dff cell `$procdff$7076' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$spimemio.v:151$69'.
  created $dff cell `$procdff$7077' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$spimemio.v:151$69'.
  created $dff cell `$procdff$7078' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$spimemio.v:151$69'.
  created $dff cell `$procdff$7079' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$spimemio.v:151$69'.
  created $dff cell `$procdff$7080' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7081' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7082' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7083' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7084' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7085' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7086' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7087' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7088' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7089' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$spimemio.v:99$65'.
  created $dff cell `$procdff$7090' with positive edge clock.
Creating register for signal `\hardware.\iomem_ready' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7091' with positive edge clock.
Creating register for signal `\hardware.\iomem_rdata' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7092' with positive edge clock.
Creating register for signal `\hardware.\clockO' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7093' with positive edge clock.
Creating register for signal `\hardware.\gpio' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7094' with positive edge clock.
Creating register for signal `\hardware.\pwm_connectorIF' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7095' with positive edge clock.
Creating register for signal `\hardware.\pwm_connectorIB' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7096' with positive edge clock.
Creating register for signal `\hardware.\pwm_connectorDF' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7097' with positive edge clock.
Creating register for signal `\hardware.\pwm_connectorDB' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7098' with positive edge clock.
Creating register for signal `\hardware.\pinTest' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7099' with positive edge clock.
Creating register for signal `\hardware.\writeEncoderI' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7100' with positive edge clock.
Creating register for signal `\hardware.\writeEncoderD' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7101' with positive edge clock.
Creating register for signal `\hardware.\encoderDataI' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7102' with positive edge clock.
Creating register for signal `\hardware.\encoderDataD' using process `\hardware.$proc$hardware.v:129$5'.
  created $dff cell `$procdff$7103' with positive edge clock.
Creating register for signal `\hardware.\reset_cnt' using process `\hardware.$proc$hardware.v:68$2'.
  created $dff cell `$procdff$7104' with positive edge clock.

9.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `encoder.$proc$encoder.v:18$1175'.
Removing empty process `encoder.$proc$encoder.v:15$1174'.
Removing empty process `encoder.$proc$encoder.v:14$1173'.
Found and cleaned up 7 empty switches in `\encoder.$proc$encoder.v:20$1158'.
Removing empty process `encoder.$proc$encoder.v:20$1158'.
Removing empty process `pwm.$proc$pwm.v:19$1157'.
Removing empty process `pwm.$proc$pwm.v:17$1156'.
Removing empty process `pwm.$proc$pwm.v:15$1155'.
Removing empty process `pwm.$proc$pwm.v:13$1154'.
Found and cleaned up 6 empty switches in `\pwm.$proc$pwm.v:23$1141'.
Removing empty process `pwm.$proc$pwm.v:23$1141'.
Removing empty process `clock.$proc$clock.v:12$1140'.
Removing empty process `clock.$proc$clock.v:10$1139'.
Found and cleaned up 1 empty switch in `\clock.$proc$clock.v:16$1135'.
Removing empty process `clock.$proc$clock.v:16$1135'.
Found and cleaned up 60 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2464'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2450'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2433'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2433'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2428'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2428'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2427'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2405'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2405'.
Found and cleaned up 8 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2393'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2393'.
Found and cleaned up 22 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2132'.
Found and cleaned up 3 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2130'.
Found and cleaned up 5 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2126'.
Found and cleaned up 47 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2125'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2125'.
Found and cleaned up 16 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2101'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2650'.
Found and cleaned up 19 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2061'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2061'.
Found and cleaned up 3 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2058'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2058'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2053'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2053'.
Found and cleaned up 1 empty switch in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1979'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1979'.
Found and cleaned up 4 empty switches in `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
Removing empty process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1948'.
Removing empty process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1217'.
Removing empty process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1184'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
Removing empty process `picorv32_pcpi_div.$proc$picorv32.v:2392$1073'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
Removing empty process `picorv32_pcpi_div.$proc$picorv32.v:2366$1063'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1022'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2235$1022'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2201$1017'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2177$979'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2149$973'.
Found and cleaned up 1 empty switch in `\picosoc_regs.$proc$picosoc.v:214$227'.
Removing empty process `picosoc_regs.$proc$picosoc.v:214$227'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:109$172'.
Removing empty process `simpleuart.$proc$simpleuart.v:109$172'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$simpleuart.v:66$163'.
Removing empty process `simpleuart.$proc$simpleuart.v:66$163'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:55$161'.
Removing empty process `simpleuart.$proc$simpleuart.v:55$161'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$spimemio.v:535$141'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:535$141'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$spimemio.v:447$117'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:447$117'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:436$108'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$spimemio.v:207$87'.
Removing empty process `spimemio.$proc$spimemio.v:207$87'.
Removing empty process `spimemio.$proc$spimemio.v:151$69'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$spimemio.v:99$65'.
Removing empty process `spimemio.$proc$spimemio.v:99$65'.
Removing empty process `hardware.$proc$hardware.v:122$55'.
Removing empty process `hardware.$proc$hardware.v:121$54'.
Removing empty process `hardware.$proc$hardware.v:118$53'.
Removing empty process `hardware.$proc$hardware.v:117$52'.
Removing empty process `hardware.$proc$hardware.v:114$51'.
Removing empty process `hardware.$proc$hardware.v:112$50'.
Removing empty process `hardware.$proc$hardware.v:111$49'.
Removing empty process `hardware.$proc$hardware.v:110$48'.
Removing empty process `hardware.$proc$hardware.v:109$47'.
Removing empty process `hardware.$proc$hardware.v:104$46'.
Removing empty process `hardware.$proc$hardware.v:65$45'.
Found and cleaned up 42 empty switches in `\hardware.$proc$hardware.v:129$5'.
Removing empty process `hardware.$proc$hardware.v:129$5'.
Removing empty process `hardware.$proc$hardware.v:68$2'.
Cleaned up 324 empty switches.

9.4. Executing FLATTEN pass (flatten design).
Using template clock for cells of type clock.
Using template pwm for cells of type pwm.
Using template encoder for cells of type encoder.
Using template $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696 for cells of type $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.
Using template $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32 for cells of type $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Using template $paramod\picosoc_mem\WORDS=2048 for cells of type $paramod\picosoc_mem\WORDS=2048.
Using template simpleuart for cells of type simpleuart.
Using template spimemio for cells of type spimemio.
Using template picorv32_pcpi_div for cells of type picorv32_pcpi_div.
Using template picorv32_pcpi_mul for cells of type picorv32_pcpi_mul.
Using template picosoc_regs for cells of type picosoc_regs.
Using template spimemio_xfer for cells of type spimemio_xfer.
<suppressed ~16 debug messages>
No more expansions possible.
Deleting now unused module encoder.
Deleting now unused module pwm.
Deleting now unused module clock.
Deleting now unused module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Deleting now unused module $paramod\picosoc_mem\WORDS=2048.
Deleting now unused module $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.
Deleting now unused module picorv32_pcpi_div.
Deleting now unused module picorv32_pcpi_mul.
Deleting now unused module picosoc_regs.
Deleting now unused module simpleuart.
Deleting now unused module spimemio_xfer.
Deleting now unused module spimemio.

9.5. Executing TRIBUF pass.

9.6. Executing DEMINOUT pass (demote inout ports to input or output).

9.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~774 debug messages>

9.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 301 unused cells and 2500 unused wires.
<suppressed ~370 debug messages>

9.9. Executing CHECK pass (checking for obvious problems).
checking module hardware..
found and reported 0 problems.

9.10. Executing OPT pass (performing simple optimizations).

9.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~1698 debug messages>
Removed a total of 566 cells.

9.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\encoderL.$procmux$2665: \encoderL.encoderCounter -> { \encoderL.encoderCounter [3:2] 1'0 \encoderL.encoderCounter [0] }
      Replacing known input bits on port A of cell $techmap\encoderL.$procmux$2663: \encoderL.encoderCounter -> { \encoderL.encoderCounter [3:2] 1'0 \encoderL.encoderCounter [0] }
      Replacing known input bits on port A of cell $techmap\encoderR.$procmux$2665: \encoderR.encoderCounter -> { \encoderR.encoderCounter [3:2] 1'0 \encoderR.encoderCounter [0] }
      Replacing known input bits on port A of cell $techmap\encoderR.$procmux$2663: \encoderR.encoderCounter -> { \encoderR.encoderCounter [3:2] 1'0 \encoderR.encoderCounter [0] }
      Replacing known input bits on port A of cell $techmap\soc.cpu.$procmux$4695: { \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [6:2] } -> { 1'0 \soc.cpu.mem_rdata_latched [6:2] }
      Replacing known input bits on port A of cell $techmap\soc.cpu.pcpi_mul.$procmux$5710: \soc.cpu.pcpi_mul.mul_waiting -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2737.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2747.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2749.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2755.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2762.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2764.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2770.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2786.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2792.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2795.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2808.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2815.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2818.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2831.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2843.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2846.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2855.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2858.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2866.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2868.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2871.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2885.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2887.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2889.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2892.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2905.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2907.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2910.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2922.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2925.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2932.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2934.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2937.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2960.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2962.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2964.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2967.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2989.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2991.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2994.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3013.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3015.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3018.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3037.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3039.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3042.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3063.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3066.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3080.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3083.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3085.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3087.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3090.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3100.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3105.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3108.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3131.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3134.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3136.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3138.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3141.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3153.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3156.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3199.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3212.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3225.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3265.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$3508.
    dead port 2/2 on $mux $techmap\pwmDB.$procmux$2692.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$3783.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3798.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$3802.
    dead port 2/2 on $mux $techmap\pwmDF.$procmux$2692.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$3986.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3998.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$4002.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$4187.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4378.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4387.
    dead port 2/2 on $mux $techmap\pwmIB.$procmux$2692.
    dead port 2/2 on $mux $techmap\pwmIF.$procmux$2692.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5524.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5531.
    dead port 3/4 on $pmux $techmap\soc.cpu.$procmux$5557.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6004.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$6006.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$6006.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$6006.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6010.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6017.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$6019.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$6019.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$6019.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6023.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6043.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6045.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6054.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6056.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6078.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6080.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6090.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6092.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6102.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6112.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6122.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6132.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6142.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6152.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6160.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6168.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6176.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6184.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6194.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6204.
Removed 114 multiplexer ports.
<suppressed ~359 debug messages>

9.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:491$126: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$119: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2143$969: { \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2142$968: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2141$967: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh \soc.cpu.pcpi_mul.instr_mul }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$picorv32.v:2404$1088: { \soc.cpu.reg_op2 [0] \soc.cpu.reg_op2 [1] \soc.cpu.reg_op2 [2] \soc.cpu.reg_op2 [3] \soc.cpu.reg_op2 [4] \soc.cpu.reg_op2 [5] \soc.cpu.reg_op2 [6] \soc.cpu.reg_op2 [7] \soc.cpu.reg_op2 [8] \soc.cpu.reg_op2 [9] \soc.cpu.reg_op2 [10] \soc.cpu.reg_op2 [11] \soc.cpu.reg_op2 [12] \soc.cpu.reg_op2 [13] \soc.cpu.reg_op2 [14] \soc.cpu.reg_op2 [15] \soc.cpu.reg_op2 [16] \soc.cpu.reg_op2 [17] \soc.cpu.reg_op2 [18] \soc.cpu.reg_op2 [19] \soc.cpu.reg_op2 [20] \soc.cpu.reg_op2 [21] \soc.cpu.reg_op2 [22] \soc.cpu.reg_op2 [23] \soc.cpu.reg_op2 [24] \soc.cpu.reg_op2 [25] \soc.cpu.reg_op2 [26] \soc.cpu.reg_op2 [27] \soc.cpu.reg_op2 [28] \soc.cpu.reg_op2 [29] \soc.cpu.reg_op2 [30] \soc.cpu.reg_op2 [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$picorv32.v:2361$1060: { \soc.cpu.pcpi_div.instr_remu \soc.cpu.pcpi_div.instr_rem \soc.cpu.pcpi_div.instr_divu \soc.cpu.pcpi_div.instr_div }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:887$2170: { \soc.cpu.mem_rdata_latched [5] \soc.cpu.mem_rdata_latched [6] \soc.cpu.mem_rdata_latched [7] \soc.cpu.mem_rdata_latched [8] \soc.cpu.mem_rdata_latched [9] \soc.cpu.mem_rdata_latched [10] \soc.cpu.mem_rdata_latched [11] \soc.cpu.mem_rdata_latched [12] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:845$2138: { \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu \soc.cpu.instr_sltu \soc.cpu.instr_slt \soc.cpu.instr_sltiu \soc.cpu.instr_slti }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:844$2137: { \soc.cpu.instr_lhu \soc.cpu.instr_lbu \soc.cpu.instr_lw }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:843$2136: { \soc.cpu.instr_sltu \soc.cpu.instr_sltiu \soc.cpu.instr_bltu }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:842$2135: { \soc.cpu.instr_slt \soc.cpu.instr_slti \soc.cpu.instr_blt }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:841$2134: { \soc.cpu.instr_sub \soc.cpu.instr_add \soc.cpu.instr_addi \soc.cpu.instr_jalr \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:840$2133: { \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:670$2124: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:359$2008: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:312$1987: { \soc.cpu.pcpi_div.pcpi_ready \soc.cpu.pcpi_mul.pcpi_ready }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:311$1983: { \soc.cpu.pcpi_div.pcpi_wait \soc.cpu.pcpi_mul.pcpi_wait }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1516$2512: { $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [0] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [1] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [2] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [3] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [4] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [5] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [6] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [7] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [8] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [9] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [10] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [11] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [12] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [13] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [14] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [15] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [16] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [17] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [18] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [19] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [20] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [21] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [22] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [23] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [24] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [25] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [26] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [27] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [28] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [29] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [30] $techmap\soc.cpu.$and$picorv32.v:1307$2444_Y [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1105$2391: { \soc.cpu.is_alu_reg_imm \soc.cpu.is_lb_lh_lw_lbu_lhu \soc.cpu.instr_jalr }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1103$2389: { \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1088$2375: { $techmap\soc.cpu.$eq$picorv32.v:1040$2245_Y $techmap\soc.cpu.$eq$picorv32.v:1030$2229_Y $techmap\soc.cpu.$eq$picorv32.v:1026$2223_Y $techmap\soc.cpu.$eq$picorv32.v:1025$2221_Y $techmap\soc.cpu.$eq$picorv32.v:1023$2217_Y $techmap\soc.cpu.$eq$picorv32.v:1021$2213_Y }
    New input vector for $reduce_or cell $techmap\soc.cpu.$procmux$3509_ANY: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:593$2117: { \soc.cpu.mem_rdata [0] \soc.cpu.mem_rdata [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:360$2018: { \soc.cpu.mem_rdata_latched [0] \soc.cpu.mem_rdata_latched [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:359$2013: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New input vector for $reduce_and cell $reduce_and$hardware.v:66$1: { \reset_cnt [0] \reset_cnt [1] \reset_cnt [2] \reset_cnt [3] \reset_cnt [4] \reset_cnt [5] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2776: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $auto$opt_reduce.cc:132:opt_mux$7106 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2798: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2781_CMP $auto$opt_reduce.cc:132:opt_mux$7108 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2821: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $auto$opt_reduce.cc:132:opt_mux$7110 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3189: { $techmap\soc.cpu.$procmux$2778_CMP $auto$opt_reduce.cc:132:opt_mux$7112 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3202: { $auto$opt_reduce.cc:132:opt_mux$7114 $techmap\soc.cpu.$procmux$2777_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3215: { $techmap\soc.cpu.$procmux$2780_CMP $auto$opt_reduce.cc:132:opt_mux$7116 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3465: { \soc.cpu.instr_trap \soc.cpu.is_rdcycle_rdcycleh_rdinstr_rdinstrh $auto$opt_reduce.cc:132:opt_mux$7118 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3508: $auto$opt_reduce.cc:132:opt_mux$7120
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3692: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2780_CMP $auto$opt_reduce.cc:132:opt_mux$7122 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3715: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$7124 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3802: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$7128 $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y $auto$opt_reduce.cc:132:opt_mux$7126 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3976: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2779_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4002: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$7132 $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y $auto$opt_reduce.cc:132:opt_mux$7130 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4187: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$7134 $techmap\soc.cpu.$procmux$3509_CTRL }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4237: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$7136 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4373: $auto$opt_reduce.cc:132:opt_mux$7138
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4457: { $techmap\soc.cpu.$procmux$4466_CMP $auto$opt_reduce.cc:132:opt_mux$7140 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4472: $auto$opt_reduce.cc:132:opt_mux$7142
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4540: { $techmap\soc.cpu.$procmux$4537_CMP $techmap\soc.cpu.$procmux$4555_CMP $techmap\soc.cpu.$procmux$4466_CMP $auto$opt_reduce.cc:132:opt_mux$7144 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4558: { $techmap\soc.cpu.$procmux$4537_CMP $auto$opt_reduce.cc:132:opt_mux$7146 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4606: { $auto$opt_reduce.cc:132:opt_mux$7148 $techmap\soc.cpu.$procmux$4555_CMP $techmap\soc.cpu.$procmux$4466_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4627: $auto$opt_reduce.cc:132:opt_mux$7150
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4748: { $techmap\soc.cpu.$procmux$4756_CMP $auto$opt_reduce.cc:132:opt_mux$7152 $techmap\soc.cpu.$procmux$4555_CMP $techmap\soc.cpu.$procmux$4466_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4760: $auto$opt_reduce.cc:132:opt_mux$7154
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4916: $auto$opt_reduce.cc:132:opt_mux$7156
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5303: { $techmap\soc.cpu.$procmux$4466_CMP $auto$opt_reduce.cc:132:opt_mux$7158 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5318: { $techmap\soc.cpu.$procmux$4466_CMP $auto$opt_reduce.cc:132:opt_mux$7160 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5336: $auto$opt_reduce.cc:132:opt_mux$7162
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5349: $auto$opt_reduce.cc:132:opt_mux$7164
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5374: { $auto$opt_reduce.cc:132:opt_mux$7166 $techmap\soc.cpu.$procmux$4555_CMP $techmap\soc.cpu.$procmux$4466_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5409: { $techmap\soc.cpu.$procmux$4537_CMP $techmap\soc.cpu.$procmux$4466_CMP $auto$opt_reduce.cc:132:opt_mux$7168 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5424: { $techmap\soc.cpu.$procmux$4555_CMP $techmap\soc.cpu.$procmux$4466_CMP $auto$opt_reduce.cc:132:opt_mux$7170 $techmap\soc.cpu.$procmux$4458_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5451: { $techmap\soc.cpu.$procmux$4537_CMP $auto$opt_reduce.cc:132:opt_mux$7172 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5464: $auto$opt_reduce.cc:132:opt_mux$7174
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5490: { $auto$opt_reduce.cc:132:opt_mux$7178 $techmap\soc.cpu.$procmux$4555_CMP $techmap\soc.cpu.$procmux$4466_CMP $auto$opt_reduce.cc:132:opt_mux$7176 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5509: { $techmap\soc.cpu.$procmux$4537_CMP $auto$opt_reduce.cc:132:opt_mux$7180 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.cpuregs.$procmux$5776:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0]
      New connections: $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [31:1] = { $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$226_EN[31:0]$230 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5565:
      Old ports: A=0, B=255, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0]
      New connections: $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [31:1] = { 24'000000000000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_EN[31:0]$1951 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5571:
      Old ports: A=0, B=65280, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [31:9] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [7:0] } = { 16'0000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_EN[31:0]$1954 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5577:
      Old ports: A=0, B=16711680, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [31:17] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [15:0] } = { 8'00000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_EN[31:0]$1957 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5583:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [31:25] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [23:0] } = { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_EN[31:0]$1960 [24] 24'000000000000000000000000 }
    New ctrl vector for $pmux cell $techmap\soc.simpleuart.$procmux$5856: $auto$opt_reduce.cc:132:opt_mux$7182
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6463: { $techmap\soc.spimemio.$procmux$6306_CMP $auto$opt_reduce.cc:132:opt_mux$7184 $techmap\soc.spimemio.$procmux$6292_CMP $techmap\soc.spimemio.$procmux$6289_CMP $techmap\soc.spimemio.$procmux$6286_CMP $techmap\soc.spimemio.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5993: $auto$opt_reduce.cc:132:opt_mux$7186
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6138: { $techmap\soc.spimemio.xfer.$procmux$5996_CMP $auto$opt_reduce.cc:132:opt_mux$7188 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6148: { $techmap\soc.spimemio.xfer.$procmux$5996_CMP $auto$opt_reduce.cc:132:opt_mux$7190 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6157: $auto$opt_reduce.cc:132:opt_mux$7192
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6165: $auto$opt_reduce.cc:132:opt_mux$7194
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6173: $auto$opt_reduce.cc:132:opt_mux$7196
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6181: $auto$opt_reduce.cc:132:opt_mux$7198
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6190: { $techmap\soc.spimemio.xfer.$procmux$5996_CMP $auto$opt_reduce.cc:132:opt_mux$7200 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6200: { $techmap\soc.spimemio.xfer.$procmux$5996_CMP $auto$opt_reduce.cc:132:opt_mux$7202 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7111: { $techmap\soc.cpu.$procmux$2784_CMP $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2780_CMP $techmap\soc.cpu.$procmux$2779_CMP $techmap\soc.cpu.$procmux$2777_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7113: { $techmap\soc.cpu.$procmux$2784_CMP $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2780_CMP $techmap\soc.cpu.$procmux$2779_CMP $techmap\soc.cpu.$procmux$2778_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7115: { $techmap\soc.cpu.$procmux$2784_CMP $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2779_CMP $techmap\soc.cpu.$procmux$2778_CMP $techmap\soc.cpu.$procmux$2777_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7117: { \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7119: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7123: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7125: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7127: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7129: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7131: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7133: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7135: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7137: { $techmap\soc.cpu.$logic_and$picorv32.v:1298$2438_Y \soc.cpu.latched_branch \soc.cpu.irq_state [0] \soc.cpu.irq_state [1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7155: { $techmap\soc.cpu.$procmux$4917_CMP $techmap\soc.cpu.$procmux$4756_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7159: { $techmap\soc.cpu.$procmux$4555_CMP $techmap\soc.cpu.$procmux$4537_CMP $techmap\soc.cpu.$procmux$4474_CMP $techmap\soc.cpu.$procmux$4459_CMP $techmap\soc.cpu.$procmux$4458_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7119: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7123: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7127: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7131: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7133: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7135: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
  Optimizing cells in module \hardware.
Performed a total of 100 changes.

9.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~234 debug messages>
Removed a total of 78 cells.

9.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \clockO = 0 to constant driver in module hardware.
Promoted 1 init specs to constant drivers.

9.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 742 unused wires.
<suppressed ~1 debug messages>

9.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.9. Rerunning OPT passes. (Maybe there is more to do..)

9.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $techmap\soc.cpu.$procmux$5562: { \soc.cpu.pcpi_mul.pcpi_wr \soc.cpu.pcpi_div.pcpi_wr } -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~366 debug messages>

9.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2798: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $auto$opt_reduce.cc:132:opt_mux$7204 $auto$opt_reduce.cc:132:opt_mux$7108 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3316: $auto$opt_reduce.cc:132:opt_mux$7206
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3333: { $techmap\soc.cpu.$procmux$2780_CMP $auto$opt_reduce.cc:132:opt_mux$7208 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3761: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2780_CMP $techmap\soc.cpu.$procmux$2779_CMP $auto$opt_reduce.cc:132:opt_mux$7210 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4346: $auto$opt_reduce.cc:132:opt_mux$7212
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4642: $auto$opt_reduce.cc:132:opt_mux$7214
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5347: { $techmap\soc.cpu.$procmux$4471_CMP $auto$opt_reduce.cc:132:opt_mux$7216 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5562: $auto$opt_reduce.cc:132:opt_mux$7218
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6268: $auto$opt_reduce.cc:132:opt_mux$7220
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6370: { $techmap\soc.spimemio.$procmux$6306_CMP $auto$opt_reduce.cc:132:opt_mux$7222 $techmap\soc.spimemio.$procmux$6283_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7213: { $techmap\soc.cpu.$procmux$4539_CMP $techmap\soc.cpu.$procmux$4475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7215: { $techmap\soc.cpu.$procmux$4539_CMP $techmap\soc.cpu.$procmux$4475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7217: { \soc.cpu.pcpi_div.pcpi_wr \soc.cpu.pcpi_mul.pcpi_wr }
  Optimizing cells in module \hardware.
Performed a total of 13 changes.

9.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

9.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

9.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.16. Rerunning OPT passes. (Maybe there is more to do..)

9.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~366 debug messages>

9.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.23. Rerunning OPT passes. (Maybe there is more to do..)

9.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5562.
Removed 1 multiplexer ports.
<suppressed ~366 debug messages>

9.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.30. Rerunning OPT passes. (Maybe there is more to do..)

9.10.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~366 debug messages>

9.10.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.10.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.10.34. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.10.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.37. Finished OPT passes. (There is nothing left to do.)

9.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 11 address bits (of 22) from memory read port hardware.$techmap\soc.memory.$memrd$\mem$picosoc.v:233$1961 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1962 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1963 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1964 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1965 (soc.memory.mem).
Removed top 5 bits (of 6) from port B of cell hardware.$add$hardware.v:69$4 ($add).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:140$9 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:149$13 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:159$18 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:169$23 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:177$27 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:185$31 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:193$35 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:201$39 ($eq).
Removed top 5 bits (of 8) from port B of cell hardware.$eq$hardware.v:213$43 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\clock.$add$clock.v:21$1138 ($add).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\clock.$eq$clock.v:18$1137 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\clock.$add$clock.v:17$1136 ($add).
Removed cell hardware.$techmap\pwmIF.$procmux$2698 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmIF.$gt$pwm.v:42$1153 ($gt).
Removed top 24 bits (of 32) from port B of cell hardware.$techmap\pwmIF.$lt$pwm.v:36$1149 ($lt).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmIF.$add$pwm.v:32$1145 ($add).
Removed top 22 bits (of 32) from port Y of cell hardware.$techmap\pwmIF.$add$pwm.v:32$1145 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmIF.$add$pwm.v:30$1143 ($add).
Removed cell hardware.$techmap\pwmIB.$procmux$2698 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmIB.$gt$pwm.v:42$1153 ($gt).
Removed top 24 bits (of 32) from port B of cell hardware.$techmap\pwmIB.$lt$pwm.v:36$1149 ($lt).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmIB.$add$pwm.v:32$1145 ($add).
Removed top 22 bits (of 32) from port Y of cell hardware.$techmap\pwmIB.$add$pwm.v:32$1145 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmIB.$add$pwm.v:30$1143 ($add).
Removed cell hardware.$techmap\pwmDF.$procmux$2698 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmDF.$gt$pwm.v:42$1153 ($gt).
Removed top 24 bits (of 32) from port B of cell hardware.$techmap\pwmDF.$lt$pwm.v:36$1149 ($lt).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmDF.$add$pwm.v:32$1145 ($add).
Removed top 22 bits (of 32) from port Y of cell hardware.$techmap\pwmDF.$add$pwm.v:32$1145 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmDF.$add$pwm.v:30$1143 ($add).
Removed cell hardware.$techmap\pwmDB.$procmux$2698 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmDB.$gt$pwm.v:42$1153 ($gt).
Removed top 24 bits (of 32) from port B of cell hardware.$techmap\pwmDB.$lt$pwm.v:36$1149 ($lt).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmDB.$add$pwm.v:32$1145 ($add).
Removed top 22 bits (of 32) from port Y of cell hardware.$techmap\pwmDB.$add$pwm.v:32$1145 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwmDB.$add$pwm.v:30$1143 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderL.$sub$encoder.v:40$1172 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderL.$add$encoder.v:38$1171 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderL.$add$encoder.v:35$1168 ($add).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\encoderL.$add$encoder.v:35$1168 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderL.$ge$encoder.v:34$1163 ($ge).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderR.$sub$encoder.v:40$1172 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderR.$add$encoder.v:38$1171 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderR.$add$encoder.v:35$1168 ($add).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\encoderR.$add$encoder.v:35$1168 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\encoderR.$ge$encoder.v:34$1163 ($ge).
Removed top 18 bits (of 32) from port B of cell hardware.$techmap\soc.$lt$picosoc.v:189$1220 ($lt).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$lt$picosoc.v:142$1210 ($lt).
Removed top 18 bits (of 32) from port B of cell hardware.$techmap\soc.$ge$picosoc.v:142$1208 ($ge).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:105$1191 ($eq).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:102$1189 ($eq).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:99$1187 ($eq).
Removed top 7 bits (of 8) from port B of cell hardware.$techmap\soc.$gt$picosoc.v:94$1185 ($gt).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$procmux$5528 ($pmux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$5522_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$procmux$5519 ($pmux).
Removed top 2 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$5503 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$5188_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4756_CMP0 ($eq).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4752 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4734 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4731 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4723 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4695 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4690 ($mux).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4555_CMP0 ($eq).
Removed top 3 bits (of 5) from mux cell hardware.$techmap\soc.cpu.$procmux$4532 ($mux).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4474_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$4471_CMP0 ($eq).
Removed cell hardware.$techmap\soc.cpu.$procmux$4390 ($mux).
Removed top 4 bits (of 8) from mux cell hardware.$techmap\soc.cpu.$procmux$3798 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3521 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3508 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3502 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3489 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3486 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3484 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3458 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3456 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3448 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3443 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3441 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3173 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3170 ($mux).
Removed top 2 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2782_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2781_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2780_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2779_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2778_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2777_CMP0 ($eq).
Removed top 1 bits (of 33) from port Y of cell hardware.$techmap\soc.cpu.$sshr$picorv32.v:1223$2660 ($sshr).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1901$2627 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2602 ($sub).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2602 ($sub).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2595 ($sub).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2595 ($sub).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$ge$picorv32.v:1813$2587 ($ge).
Removed top 26 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2547 ($or).
Removed top 26 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2547 ($or).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$add$picorv32.v:1542$2529 ($add).
Removed top 29 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:1530$2525 ($mux).
Removed top 26 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2520 ($or).
Removed top 26 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2520 ($or).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1519$2517 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1415$2477 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$add$picorv32.v:1405$2471 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2469 ($sub).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2469 ($sub).
Removed top 29 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:1295$2435 ($mux).
Removed top 1 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1291$2434 ($eq).
Removed top 4 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1073$2354 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1072$2350 ($eq).
Removed top 6 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1071$2345 ($eq).
Removed top 3 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1070$2339 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1047$2263 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1040$2245 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1030$2229 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1022$2215 ($eq).
Removed top 28 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$add$picorv32.v:893$2172 ($add).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$add$picorv32.v:893$2172 ($add).
Removed top 28 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$add$picorv32.v:889$2171 ($add).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$add$picorv32.v:889$2171 ($add).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:859$2158 ($eq).
Removed top 2 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:858$2157 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:857$2156 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:856$2155 ($eq).
Removed top 4 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:853$2151 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:852$2147 ($eq).
Removed top 3 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:852$2146 ($eq).
Removed top 2 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:849$2141 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:848$2140 ($eq).
Removed top 30 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:600$2121 ($mux).
Removed top 1 bits (of 7) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:474$2077 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:471$2073 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:469$2071 ($eq).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:461$2069 ($eq).
Removed top 3 bits (of 5) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:448$2067 ($eq).
Removed top 3 bits (of 4) from port A of cell hardware.$techmap\soc.cpu.$shl$picorv32.v:402$2060 ($shl).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:371$2052 ($mux).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:371$2050 ($mux).
Removed top 7 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$7000 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6998 ($dff).
Removed top 8 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6997 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6995 ($dff).
Removed top 16 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6994 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6992 ($dff).
Removed top 24 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6991 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6989 ($dff).
Removed cell hardware.$techmap\soc.memory.$procmux$5587 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5585 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5581 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5579 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5575 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5573 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5569 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5567 ($mux).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.simpleuart.$procmux$5830_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$182 ($sub).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$182 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:112$174 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$171 ($add).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$171 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:74$165 ($add).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6497_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell hardware.$techmap\soc.spimemio.$procmux$6323 ($mux).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6315_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6309_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6306_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6301_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6298_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6272_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6269_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:316$105 ($mux).
Removed top 31 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:310$104 ($mux).
Removed top 8 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:226$100 ($mux).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.spimemio.$add$spimemio.v:226$98 ($add).
Removed top 7 bits (of 32) from port Y of cell hardware.$techmap\soc.spimemio.$add$spimemio.v:226$98 ($add).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:224$96 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:223$94 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:222$92 ($eq).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:221$90 ($eq).
Removed top 7 bits (of 32) from port B of cell hardware.$techmap\soc.spimemio.$ne$spimemio.v:72$62 ($ne).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5599 ($mux).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5596 ($mux).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5593 ($mux).
Removed top 31 bits (of 63) from port Y of cell hardware.$techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1100 ($sub).
Removed top 31 bits (of 63) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1100 ($sub).
Removed top 31 bits (of 63) from mux cell hardware.$techmap\soc.cpu.pcpi_div.$ternary$picorv32.v:2403$1084 ($mux).
Removed top 31 bits (of 63) from port A of cell hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1082 ($neg).
Removed top 31 bits (of 63) from port Y of cell hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1082 ($neg).
Removed top 6 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$eq$picorv32.v:2372$1069 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$eq$picorv32.v:2372$1067 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5766_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5760_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5755_CMP0 ($eq).
Removed top 3 bits (of 64) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5725 ($mux).
Removed top 32 bits (of 64) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2241$1025 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$1021 ($sub).
Removed top 25 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$1021 ($sub).
Removed top 26 bits (of 32) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$1019 ($mux).
Removed top 1 bits (of 5) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1013 ($add).
Removed top 1 bits (of 5) from port A of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1013 ($add).
Removed top 1 bits (of 5) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1012 ($add).
Removed top 31 bits (of 32) from FF cell hardware.$techmap\soc.cpu.cpuregs.$procdff$7035 ($dff).
Removed cell hardware.$techmap\soc.cpu.cpuregs.$procmux$5780 ($mux).
Removed cell hardware.$techmap\soc.cpu.cpuregs.$procmux$5778 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$6068 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$6066 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$6034 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$6032 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5997 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.spimemio.xfer.$procmux$5995_CMP0 ($eq).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5993 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5991 ($mux).
Removed top 28 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$156 ($mux).
Removed top 31 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$144 ($mux).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$139 ($sub).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$127 ($sub).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:471$120 ($sub).
Removed top 7 bits (of 24) from FF cell hardware.$techmap\soc.memory.$procdff$6997 ($dff).
Removed top 7 bits (of 16) from FF cell hardware.$techmap\soc.memory.$procdff$6994 ($dff).
Removed top 7 bits (of 8) from FF cell hardware.$techmap\soc.memory.$procdff$6991 ($dff).
Removed top 5 bits (of 6) from wire hardware.$logic_not$hardware.v:69$3_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\encoderL.$add$encoder.v:35$1168_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\encoderR.$add$encoder.v:35$1168_Y.
Removed top 22 bits (of 32) from wire hardware.$techmap\pwmDB.$add$pwm.v:32$1145_Y.
Removed top 22 bits (of 32) from wire hardware.$techmap\pwmDF.$add$pwm.v:32$1145_Y.
Removed top 22 bits (of 32) from wire hardware.$techmap\pwmIB.$add$pwm.v:32$1145_Y.
Removed top 22 bits (of 32) from wire hardware.$techmap\pwmIF.$add$pwm.v:32$1145_Y.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.cpu.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.cpu.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$add$picorv32.v:889$2171_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$add$picorv32.v:893$2172_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2520_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2547_Y.
Removed top 4 bits (of 8) from wire hardware.$techmap\soc.cpu.$procmux$3798_Y.
Removed top 3 bits (of 5) from wire hardware.$techmap\soc.cpu.$procmux$4532_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4690_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4695_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4723_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4731_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4734_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4752_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2469_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2595_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2602_Y.
Removed top 29 bits (of 32) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:1295$2435_Y.
Removed top 1 bits (of 7) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:474$2077_Y.
Removed top 30 bits (of 32) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:600$2121_Y.
Removed top 31 bits (of 63) from wire hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1082_Y.
Removed top 1 bits (of 5) from wire hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1012_Y.
Removed top 3 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5725_Y.
Removed top 1 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5731_Y.
Removed top 1 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5738_Y.
Removed top 1 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5740_Y.
Removed top 1 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5747_Y.
Removed top 1 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5749_Y.
Removed top 25 bits (of 32) from wire hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$1021_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$1019_Y.
Removed top 32 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2241$1025_Y.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_ADDR[21:0]$1949.
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1944_DATA[31:0]$1950.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_ADDR[21:0]$1952.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1945_DATA[31:0]$1953.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_ADDR[21:0]$1955.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1946_DATA[31:0]$1956.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1947_ADDR[21:0]$1958.
Removed top 3 bits (of 4) from wire hardware.$techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$119_Y.
Removed top 31 bits (of 32) from wire hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$144_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$156_Y.
Removed top 4 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rdt.
Removed top 3 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rdx.
Removed top 1 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rs1.
Removed top 20 bits (of 32) from wire hardware.soc.spimemio.cfgreg_do.
Removed top 20 bits (of 32) from wire hardware.soc.spimemio_cfgreg_do.

9.12. Executing PEEPOPT pass (run peephole optimizers).

9.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 2 unused cells and 95 unused wires.
<suppressed ~3 debug messages>

9.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module hardware that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$232 ($memrd):
    Found 4 activation_patterns using ctrl signal { \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2453_Y $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$3509_CTRL $auto$opt_reduce.cc:132:opt_mux$7134 \resetn }.
    Found 1 candidates: $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231
    Analyzing resource sharing with $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231 ($memrd):
      Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$7124 $auto$opt_reduce.cc:132:opt_mux$7118 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$procmux$2782_CMP \resetn }.
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$232: { \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2453_Y $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$3509_CTRL $auto$opt_reduce.cc:132:opt_mux$7134 \resetn } = 6'011001
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$232: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2453_Y $techmap\soc.cpu.$procmux$2781_CMP \resetn } = 3'111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$232: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2453_Y $techmap\soc.cpu.$procmux$2782_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$232: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2453_Y $techmap\soc.cpu.$procmux$2781_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231: { \soc.cpu.instr_retirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$procmux$2782_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231: { $auto$opt_reduce.cc:132:opt_mux$7124 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$procmux$2782_CMP \resetn } = 5'00111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231: { \soc.cpu.instr_maskirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$procmux$2782_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231: { \soc.cpu.instr_timer $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$procmux$2782_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231: { $auto$opt_reduce.cc:132:opt_mux$7118 $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$procmux$2782_CMP \resetn } = 4'1111
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2782_CMP vs. $techmap\soc.cpu.$procmux$2781_CMP
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. $auto$opt_reduce.cc:132:opt_mux$7118
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. $auto$opt_reduce.cc:132:opt_mux$7118
      Adding exclusive control bits: \soc.cpu.instr_retirq vs. $auto$opt_reduce.cc:132:opt_mux$7118
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_timer
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$7118
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdinstr
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdcycleh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2782_CMP vs. $techmap\soc.cpu.$procmux$2781_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2782_CMP vs. $techmap\soc.cpu.$procmux$2781_CMP
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$7124
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2782_CMP vs. $techmap\soc.cpu.$procmux$2781_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y vs. $auto$opt_reduce.cc:132:opt_mux$7124
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$7124
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2782_CMP vs. $techmap\soc.cpu.$procmux$2781_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y vs. $auto$opt_reduce.cc:132:opt_mux$7124
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$7124
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sh
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sb
      Adding exclusive control bits: \soc.cpu.instr_sh vs. \soc.cpu.instr_sb
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2782_CMP vs. $techmap\soc.cpu.$procmux$2781_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$3509_CTRL vs. \soc.cpu.is_lui_auipc_jal
      Adding exclusive control bits: $auto$opt_reduce.cc:132:opt_mux$7134 vs. $techmap\soc.cpu.$procmux$3509_CTRL
      Adding exclusive control bits: $auto$opt_reduce.cc:132:opt_mux$7134 vs. \soc.cpu.is_lui_auipc_jal
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:132:opt_mux$7124
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bge
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bne vs. \soc.cpu.instr_beq
      Size of SAT problem: 12 cells, 243 variables, 626 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:132:opt_mux$7124 $auto$opt_reduce.cc:132:opt_mux$7118 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2453_Y $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$3509_CTRL $auto$opt_reduce.cc:132:opt_mux$7134 \resetn } = 13'0000001101001
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231 ($memrd):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$7124 $auto$opt_reduce.cc:132:opt_mux$7118 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2451_Y $techmap\soc.cpu.$procmux$2782_CMP \resetn }.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$sshr$picorv32.v:1223$2660 ($sshr):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$picorv32.v:1260$2426_Y.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$shl$picorv32.v:1222$2657 ($shl):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$picorv32.v:1258$2422_Y.
    No candidates found.

9.15. Executing TECHMAP pass (map to technology primitives).

9.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

9.15.2. Continuing TECHMAP pass.
Using template $paramod$a3c8dbaa1df75bc33a7c8ac22c97e3d9416b2b76\_90_lut_cmp_ for cells of type $ge.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$a6ffc318e97e2d88e3aa2c740afebfc2ba48d1b1\_90_lut_cmp_ for cells of type $ne.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$dc6060208f0369ff43b26b7eee8e43bf61e4b025\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$efc71e781fe178e08e0b73b60d007d65bb528021\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$64fdb727b8fb55a4fe9731fe5b6468d06ea5e6e3\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$ed69233d74549f287b72a59633b9a76ab6bcc119\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5c2d7617d568809e504489b04c3cf382857f302a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$f697708cd68b7ab769087d4d36092ed6d4550934\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~1528 debug messages>

9.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~4 debug messages>

9.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 196 unused wires.
<suppressed ~1 debug messages>

9.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module hardware:
  creating $macc model for $add$hardware.v:69$4 ($add).
  creating $macc model for $techmap\clock.$add$clock.v:17$1136 ($add).
  creating $macc model for $techmap\clock.$add$clock.v:21$1138 ($add).
  creating $macc model for $techmap\encoderL.$add$encoder.v:35$1168 ($add).
  creating $macc model for $techmap\encoderL.$add$encoder.v:38$1171 ($add).
  creating $macc model for $techmap\encoderL.$sub$encoder.v:40$1172 ($sub).
  creating $macc model for $techmap\encoderR.$add$encoder.v:35$1168 ($add).
  creating $macc model for $techmap\encoderR.$add$encoder.v:38$1171 ($add).
  creating $macc model for $techmap\encoderR.$sub$encoder.v:40$1172 ($sub).
  creating $macc model for $techmap\pwmDB.$add$pwm.v:30$1143 ($add).
  creating $macc model for $techmap\pwmDB.$add$pwm.v:32$1145 ($add).
  creating $macc model for $techmap\pwmDF.$add$pwm.v:30$1143 ($add).
  creating $macc model for $techmap\pwmDF.$add$pwm.v:32$1145 ($add).
  creating $macc model for $techmap\pwmIB.$add$pwm.v:30$1143 ($add).
  creating $macc model for $techmap\pwmIB.$add$pwm.v:32$1145 ($add).
  creating $macc model for $techmap\pwmIF.$add$pwm.v:30$1143 ($add).
  creating $macc model for $techmap\pwmIF.$add$pwm.v:32$1145 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1218$2652 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1295$2436 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1405$2471 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1530$2526 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1542$2529 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1547$2530 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1784$2578 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1847$2606 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:365$2043 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:889$2171 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:893$2172 ($add).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1218$2651 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1398$2469 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1415$2477 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1820$2595 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1828$2602 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1077 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1082 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1095 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1097 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1100 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1000 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1001 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1002 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1003 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1004 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1005 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1006 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1007 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1008 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1009 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1010 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1011 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1012 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1013 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$982 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$984 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$986 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$989 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$990 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$992 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$993 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$994 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$995 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$996 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$997 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$998 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$999 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$1021 ($sub).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:112$174 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:74$165 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:99$171 ($add).
  creating $macc model for $techmap\soc.simpleuart.$sub$simpleuart.v:132$182 ($sub).
  creating $macc model for $techmap\soc.spimemio.$add$spimemio.v:226$98 ($add).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$120 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$127 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$139 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$149 ($sub).
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$998 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$999.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$996 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$997.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$994 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$995.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$992 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$993.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$990 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$989.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$986 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$984 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$982 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1012 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1013.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1010 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1011.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1008 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1009.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1006 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1007.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1004 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1005.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1002 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1003.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1000 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1001.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$1021.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:112$174.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:74$165.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:99$171.
  creating $alu model for $macc $techmap\soc.simpleuart.$sub$simpleuart.v:132$182.
  creating $alu model for $macc $techmap\soc.spimemio.$add$spimemio.v:226$98.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$120.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$127.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$139.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$149.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1100.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1097.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1095.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1082.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1077.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1828$2602.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1820$2595.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1415$2477.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1398$2469.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1218$2651.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:893$2172.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:889$2171.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:365$2043.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1847$2606.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1784$2578.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1547$2530.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1542$2529.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1530$2526.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1405$2471.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1295$2436.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1218$2652.
  creating $alu model for $macc $techmap\pwmIF.$add$pwm.v:32$1145.
  creating $alu model for $macc $techmap\pwmIF.$add$pwm.v:30$1143.
  creating $alu model for $macc $techmap\pwmIB.$add$pwm.v:32$1145.
  creating $alu model for $macc $techmap\pwmIB.$add$pwm.v:30$1143.
  creating $alu model for $macc $techmap\pwmDF.$add$pwm.v:32$1145.
  creating $alu model for $macc $techmap\pwmDF.$add$pwm.v:30$1143.
  creating $alu model for $macc $techmap\pwmDB.$add$pwm.v:32$1145.
  creating $alu model for $macc $techmap\pwmDB.$add$pwm.v:30$1143.
  creating $alu model for $macc $techmap\encoderR.$sub$encoder.v:40$1172.
  creating $alu model for $macc $techmap\encoderR.$add$encoder.v:38$1171.
  creating $alu model for $macc $techmap\encoderR.$add$encoder.v:35$1168.
  creating $alu model for $macc $techmap\encoderL.$sub$encoder.v:40$1172.
  creating $alu model for $macc $techmap\encoderL.$add$encoder.v:38$1171.
  creating $alu model for $macc $techmap\encoderL.$add$encoder.v:35$1168.
  creating $alu model for $macc $techmap\clock.$add$clock.v:21$1138.
  creating $alu model for $macc $techmap\clock.$add$clock.v:17$1136.
  creating $alu model for $macc $add$hardware.v:69$4.
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1005: $auto$alumacc.cc:354:replace_macc$7364
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1011: $auto$alumacc.cc:354:replace_macc$7365
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1003: $auto$alumacc.cc:354:replace_macc$7366
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1013: $auto$alumacc.cc:354:replace_macc$7367
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1007: $auto$alumacc.cc:354:replace_macc$7368
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983: $auto$alumacc.cc:354:replace_macc$7369
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1001: $auto$alumacc.cc:354:replace_macc$7370
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985: $auto$alumacc.cc:354:replace_macc$7371
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$1009: $auto$alumacc.cc:354:replace_macc$7372
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987: $auto$alumacc.cc:354:replace_macc$7373
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$999: $auto$alumacc.cc:354:replace_macc$7374
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$989: $auto$alumacc.cc:354:replace_macc$7375
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$995: $auto$alumacc.cc:354:replace_macc$7376
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991: $auto$alumacc.cc:354:replace_macc$7377
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$997: $auto$alumacc.cc:354:replace_macc$7378
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$993: $auto$alumacc.cc:354:replace_macc$7379
  creating $alu model for $techmap\pwmDB.$ge$pwm.v:35$1147 ($ge): new $alu
  creating $alu model for $techmap\pwmDB.$gt$pwm.v:42$1153 ($gt): new $alu
  creating $alu model for $techmap\pwmDB.$lt$pwm.v:36$1149 ($lt): new $alu
  creating $alu model for $techmap\pwmDF.$ge$pwm.v:35$1147 ($ge): new $alu
  creating $alu model for $techmap\pwmDF.$gt$pwm.v:42$1153 ($gt): new $alu
  creating $alu model for $techmap\pwmDF.$lt$pwm.v:36$1149 ($lt): new $alu
  creating $alu model for $techmap\pwmIB.$ge$pwm.v:35$1147 ($ge): new $alu
  creating $alu model for $techmap\pwmIB.$gt$pwm.v:42$1153 ($gt): new $alu
  creating $alu model for $techmap\pwmIB.$lt$pwm.v:36$1149 ($lt): new $alu
  creating $alu model for $techmap\pwmIF.$ge$pwm.v:35$1147 ($ge): new $alu
  creating $alu model for $techmap\pwmIF.$gt$pwm.v:42$1153 ($gt): new $alu
  creating $alu model for $techmap\pwmIF.$lt$pwm.v:36$1149 ($lt): new $alu
  creating $alu model for $techmap\soc.$ge$picosoc.v:142$1208 ($ge): new $alu
  creating $alu model for $techmap\soc.$gt$picosoc.v:94$1185 ($gt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:142$1210 ($lt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:189$1220 ($lt): merged with $techmap\soc.$ge$picosoc.v:142$1208.
  creating $alu model for $techmap\soc.cpu.$ge$picorv32.v:1813$2587 ($ge): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1220$2655 ($lt): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1221$2656 ($lt): merged with $techmap\soc.cpu.$sub$picorv32.v:1218$2651.
  creating $alu model for $techmap\soc.cpu.pcpi_div.$le$picorv32.v:2426$1099 ($le): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:130$180 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:84$168 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:90$169 ($gt): new $alu
  creating $alu model for $techmap\soc.$eq$picosoc.v:99$1187 ($eq): merged with $techmap\soc.$lt$picosoc.v:142$1210.
  creating $alu model for $techmap\soc.cpu.$eq$picorv32.v:1219$2654 ($eq): merged with $techmap\soc.cpu.$sub$picorv32.v:1218$2651.
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:90$169: $auto$alumacc.cc:474:replace_alu$7401
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:84$168: $auto$alumacc.cc:474:replace_alu$7412
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:130$180: $auto$alumacc.cc:474:replace_alu$7417
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$le$picorv32.v:2426$1099: $auto$alumacc.cc:474:replace_alu$7428
  creating $alu cell for $techmap\soc.cpu.$ge$picorv32.v:1813$2587: $auto$alumacc.cc:474:replace_alu$7441
  creating $alu cell for $techmap\soc.$lt$picosoc.v:142$1210, $techmap\soc.$eq$picosoc.v:99$1187: $auto$alumacc.cc:474:replace_alu$7450
  creating $alu cell for $techmap\soc.$gt$picosoc.v:94$1185: $auto$alumacc.cc:474:replace_alu$7461
  creating $alu cell for $techmap\soc.$ge$picosoc.v:142$1208, $techmap\soc.$lt$picosoc.v:189$1220: $auto$alumacc.cc:474:replace_alu$7466
  creating $alu cell for $techmap\pwmIF.$lt$pwm.v:36$1149: $auto$alumacc.cc:474:replace_alu$7479
  creating $alu cell for $techmap\pwmIF.$gt$pwm.v:42$1153: $auto$alumacc.cc:474:replace_alu$7490
  creating $alu cell for $techmap\pwmIF.$ge$pwm.v:35$1147: $auto$alumacc.cc:474:replace_alu$7495
  creating $alu cell for $techmap\pwmIB.$lt$pwm.v:36$1149: $auto$alumacc.cc:474:replace_alu$7508
  creating $alu cell for $techmap\pwmIB.$gt$pwm.v:42$1153: $auto$alumacc.cc:474:replace_alu$7519
  creating $alu cell for $techmap\pwmIB.$ge$pwm.v:35$1147: $auto$alumacc.cc:474:replace_alu$7524
  creating $alu cell for $techmap\pwmDF.$lt$pwm.v:36$1149: $auto$alumacc.cc:474:replace_alu$7537
  creating $alu cell for $techmap\pwmDF.$gt$pwm.v:42$1153: $auto$alumacc.cc:474:replace_alu$7548
  creating $alu cell for $techmap\pwmDF.$ge$pwm.v:35$1147: $auto$alumacc.cc:474:replace_alu$7553
  creating $alu cell for $techmap\pwmDB.$lt$pwm.v:36$1149: $auto$alumacc.cc:474:replace_alu$7566
  creating $alu cell for $techmap\pwmDB.$gt$pwm.v:42$1153: $auto$alumacc.cc:474:replace_alu$7577
  creating $alu cell for $techmap\pwmDB.$ge$pwm.v:35$1147: $auto$alumacc.cc:474:replace_alu$7582
  creating $alu cell for $add$hardware.v:69$4: $auto$alumacc.cc:474:replace_alu$7595
  creating $alu cell for $techmap\clock.$add$clock.v:17$1136: $auto$alumacc.cc:474:replace_alu$7598
  creating $alu cell for $techmap\clock.$add$clock.v:21$1138: $auto$alumacc.cc:474:replace_alu$7601
  creating $alu cell for $techmap\encoderL.$add$encoder.v:35$1168: $auto$alumacc.cc:474:replace_alu$7604
  creating $alu cell for $techmap\encoderL.$add$encoder.v:38$1171: $auto$alumacc.cc:474:replace_alu$7607
  creating $alu cell for $techmap\encoderL.$sub$encoder.v:40$1172: $auto$alumacc.cc:474:replace_alu$7610
  creating $alu cell for $techmap\encoderR.$add$encoder.v:35$1168: $auto$alumacc.cc:474:replace_alu$7613
  creating $alu cell for $techmap\encoderR.$add$encoder.v:38$1171: $auto$alumacc.cc:474:replace_alu$7616
  creating $alu cell for $techmap\encoderR.$sub$encoder.v:40$1172: $auto$alumacc.cc:474:replace_alu$7619
  creating $alu cell for $techmap\pwmDB.$add$pwm.v:30$1143: $auto$alumacc.cc:474:replace_alu$7622
  creating $alu cell for $techmap\pwmDB.$add$pwm.v:32$1145: $auto$alumacc.cc:474:replace_alu$7625
  creating $alu cell for $techmap\pwmDF.$add$pwm.v:30$1143: $auto$alumacc.cc:474:replace_alu$7628
  creating $alu cell for $techmap\pwmDF.$add$pwm.v:32$1145: $auto$alumacc.cc:474:replace_alu$7631
  creating $alu cell for $techmap\pwmIB.$add$pwm.v:30$1143: $auto$alumacc.cc:474:replace_alu$7634
  creating $alu cell for $techmap\pwmIB.$add$pwm.v:32$1145: $auto$alumacc.cc:474:replace_alu$7637
  creating $alu cell for $techmap\pwmIF.$add$pwm.v:30$1143: $auto$alumacc.cc:474:replace_alu$7640
  creating $alu cell for $techmap\pwmIF.$add$pwm.v:32$1145: $auto$alumacc.cc:474:replace_alu$7643
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1295$2436: $auto$alumacc.cc:474:replace_alu$7646
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1405$2471: $auto$alumacc.cc:474:replace_alu$7649
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1530$2526: $auto$alumacc.cc:474:replace_alu$7652
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1542$2529: $auto$alumacc.cc:474:replace_alu$7655
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1547$2530: $auto$alumacc.cc:474:replace_alu$7658
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1784$2578: $auto$alumacc.cc:474:replace_alu$7661
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1847$2606: $auto$alumacc.cc:474:replace_alu$7664
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:365$2043: $auto$alumacc.cc:474:replace_alu$7667
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:889$2171: $auto$alumacc.cc:474:replace_alu$7670
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:893$2172: $auto$alumacc.cc:474:replace_alu$7673
  creating $alu cell for $techmap\soc.cpu.$lt$picorv32.v:1220$2655: $auto$alumacc.cc:474:replace_alu$7676
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1218$2652: $auto$alumacc.cc:474:replace_alu$7683
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1218$2651, $techmap\soc.cpu.$lt$picorv32.v:1221$2656, $techmap\soc.cpu.$eq$picorv32.v:1219$2654: $auto$alumacc.cc:474:replace_alu$7686
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1398$2469: $auto$alumacc.cc:474:replace_alu$7693
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1415$2477: $auto$alumacc.cc:474:replace_alu$7696
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1820$2595: $auto$alumacc.cc:474:replace_alu$7699
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1828$2602: $auto$alumacc.cc:474:replace_alu$7702
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1077: $auto$alumacc.cc:474:replace_alu$7705
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1082: $auto$alumacc.cc:474:replace_alu$7708
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1095: $auto$alumacc.cc:474:replace_alu$7711
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1097: $auto$alumacc.cc:474:replace_alu$7714
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1100: $auto$alumacc.cc:474:replace_alu$7717
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$149: $auto$alumacc.cc:474:replace_alu$7720
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$139: $auto$alumacc.cc:474:replace_alu$7723
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$127: $auto$alumacc.cc:474:replace_alu$7726
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$120: $auto$alumacc.cc:474:replace_alu$7729
  creating $alu cell for $techmap\soc.spimemio.$add$spimemio.v:226$98: $auto$alumacc.cc:474:replace_alu$7732
  creating $alu cell for $techmap\soc.simpleuart.$sub$simpleuart.v:132$182: $auto$alumacc.cc:474:replace_alu$7735
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:99$171: $auto$alumacc.cc:474:replace_alu$7738
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:74$165: $auto$alumacc.cc:474:replace_alu$7741
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:112$174: $auto$alumacc.cc:474:replace_alu$7744
  creating $alu cell for $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$1021: $auto$alumacc.cc:474:replace_alu$7747
  created 69 $alu and 16 $macc cells.

9.19. Executing OPT pass (performing simple optimizations).

9.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~17 debug messages>

9.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

9.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~357 debug messages>

9.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7448: { $auto$rtlil.cc:1844:Not$7445 $auto$rtlil.cc:1847:ReduceAnd$7447 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7506: { $auto$rtlil.cc:1844:Not$7505 $auto$rtlil.cc:1847:ReduceAnd$7503 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7535: { $auto$rtlil.cc:1844:Not$7534 $auto$rtlil.cc:1847:ReduceAnd$7532 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7564: { $auto$rtlil.cc:1844:Not$7563 $auto$rtlil.cc:1847:ReduceAnd$7561 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7593: { $auto$rtlil.cc:1844:Not$7592 $auto$rtlil.cc:1847:ReduceAnd$7590 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7473: { $auto$rtlil.cc:1844:Not$7470 $auto$rtlil.cc:1847:ReduceAnd$7472 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7589: { $auto$alumacc.cc:490:replace_alu$7583 [0] $auto$alumacc.cc:490:replace_alu$7583 [1] $auto$alumacc.cc:490:replace_alu$7583 [2] $auto$alumacc.cc:490:replace_alu$7583 [3] $auto$alumacc.cc:490:replace_alu$7583 [4] $auto$alumacc.cc:490:replace_alu$7583 [5] $auto$alumacc.cc:490:replace_alu$7583 [6] $auto$alumacc.cc:490:replace_alu$7583 [7] $auto$alumacc.cc:490:replace_alu$7583 [8] $auto$alumacc.cc:490:replace_alu$7583 [9] $auto$alumacc.cc:490:replace_alu$7583 [10] $auto$alumacc.cc:490:replace_alu$7583 [11] $auto$alumacc.cc:490:replace_alu$7583 [12] $auto$alumacc.cc:490:replace_alu$7583 [13] $auto$alumacc.cc:490:replace_alu$7583 [14] $auto$alumacc.cc:490:replace_alu$7583 [15] $auto$alumacc.cc:490:replace_alu$7583 [16] $auto$alumacc.cc:490:replace_alu$7583 [17] $auto$alumacc.cc:490:replace_alu$7583 [18] $auto$alumacc.cc:490:replace_alu$7583 [19] $auto$alumacc.cc:490:replace_alu$7583 [20] $auto$alumacc.cc:490:replace_alu$7583 [21] $auto$alumacc.cc:490:replace_alu$7583 [22] $auto$alumacc.cc:490:replace_alu$7583 [23] $auto$alumacc.cc:490:replace_alu$7583 [24] $auto$alumacc.cc:490:replace_alu$7583 [25] $auto$alumacc.cc:490:replace_alu$7583 [26] $auto$alumacc.cc:490:replace_alu$7583 [27] $auto$alumacc.cc:490:replace_alu$7583 [28] $auto$alumacc.cc:490:replace_alu$7583 [29] $auto$alumacc.cc:490:replace_alu$7583 [30] $auto$alumacc.cc:490:replace_alu$7583 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7691: { $auto$alumacc.cc:490:replace_alu$7687 [0] $auto$alumacc.cc:490:replace_alu$7687 [1] $auto$alumacc.cc:490:replace_alu$7687 [2] $auto$alumacc.cc:490:replace_alu$7687 [3] $auto$alumacc.cc:490:replace_alu$7687 [4] $auto$alumacc.cc:490:replace_alu$7687 [5] $auto$alumacc.cc:490:replace_alu$7687 [6] $auto$alumacc.cc:490:replace_alu$7687 [7] $auto$alumacc.cc:490:replace_alu$7687 [8] $auto$alumacc.cc:490:replace_alu$7687 [9] $auto$alumacc.cc:490:replace_alu$7687 [10] $auto$alumacc.cc:490:replace_alu$7687 [11] $auto$alumacc.cc:490:replace_alu$7687 [12] $auto$alumacc.cc:490:replace_alu$7687 [13] $auto$alumacc.cc:490:replace_alu$7687 [14] $auto$alumacc.cc:490:replace_alu$7687 [15] $auto$alumacc.cc:490:replace_alu$7687 [16] $auto$alumacc.cc:490:replace_alu$7687 [17] $auto$alumacc.cc:490:replace_alu$7687 [18] $auto$alumacc.cc:490:replace_alu$7687 [19] $auto$alumacc.cc:490:replace_alu$7687 [20] $auto$alumacc.cc:490:replace_alu$7687 [21] $auto$alumacc.cc:490:replace_alu$7687 [22] $auto$alumacc.cc:490:replace_alu$7687 [23] $auto$alumacc.cc:490:replace_alu$7687 [24] $auto$alumacc.cc:490:replace_alu$7687 [25] $auto$alumacc.cc:490:replace_alu$7687 [26] $auto$alumacc.cc:490:replace_alu$7687 [27] $auto$alumacc.cc:490:replace_alu$7687 [28] $auto$alumacc.cc:490:replace_alu$7687 [29] $auto$alumacc.cc:490:replace_alu$7687 [30] $auto$alumacc.cc:490:replace_alu$7687 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7408: { $auto$alumacc.cc:490:replace_alu$7402 [0] $auto$alumacc.cc:490:replace_alu$7402 [1] $auto$alumacc.cc:490:replace_alu$7402 [2] $auto$alumacc.cc:490:replace_alu$7402 [3] $auto$alumacc.cc:490:replace_alu$7402 [4] $auto$alumacc.cc:490:replace_alu$7402 [5] $auto$alumacc.cc:490:replace_alu$7402 [6] $auto$alumacc.cc:490:replace_alu$7402 [7] $auto$alumacc.cc:490:replace_alu$7402 [8] $auto$alumacc.cc:490:replace_alu$7402 [9] $auto$alumacc.cc:490:replace_alu$7402 [10] $auto$alumacc.cc:490:replace_alu$7402 [11] $auto$alumacc.cc:490:replace_alu$7402 [12] $auto$alumacc.cc:490:replace_alu$7402 [13] $auto$alumacc.cc:490:replace_alu$7402 [14] $auto$alumacc.cc:490:replace_alu$7402 [15] $auto$alumacc.cc:490:replace_alu$7402 [16] $auto$alumacc.cc:490:replace_alu$7402 [17] $auto$alumacc.cc:490:replace_alu$7402 [18] $auto$alumacc.cc:490:replace_alu$7402 [19] $auto$alumacc.cc:490:replace_alu$7402 [20] $auto$alumacc.cc:490:replace_alu$7402 [21] $auto$alumacc.cc:490:replace_alu$7402 [22] $auto$alumacc.cc:490:replace_alu$7402 [23] $auto$alumacc.cc:490:replace_alu$7402 [24] $auto$alumacc.cc:490:replace_alu$7402 [25] $auto$alumacc.cc:490:replace_alu$7402 [26] $auto$alumacc.cc:490:replace_alu$7402 [27] $auto$alumacc.cc:490:replace_alu$7402 [28] $auto$alumacc.cc:490:replace_alu$7402 [29] $auto$alumacc.cc:490:replace_alu$7402 [30] $auto$alumacc.cc:490:replace_alu$7402 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7424: { $auto$alumacc.cc:490:replace_alu$7418 [0] $auto$alumacc.cc:490:replace_alu$7418 [1] $auto$alumacc.cc:490:replace_alu$7418 [2] $auto$alumacc.cc:490:replace_alu$7418 [3] $auto$alumacc.cc:490:replace_alu$7418 [4] $auto$alumacc.cc:490:replace_alu$7418 [5] $auto$alumacc.cc:490:replace_alu$7418 [6] $auto$alumacc.cc:490:replace_alu$7418 [7] $auto$alumacc.cc:490:replace_alu$7418 [8] $auto$alumacc.cc:490:replace_alu$7418 [9] $auto$alumacc.cc:490:replace_alu$7418 [10] $auto$alumacc.cc:490:replace_alu$7418 [11] $auto$alumacc.cc:490:replace_alu$7418 [12] $auto$alumacc.cc:490:replace_alu$7418 [13] $auto$alumacc.cc:490:replace_alu$7418 [14] $auto$alumacc.cc:490:replace_alu$7418 [15] $auto$alumacc.cc:490:replace_alu$7418 [16] $auto$alumacc.cc:490:replace_alu$7418 [17] $auto$alumacc.cc:490:replace_alu$7418 [18] $auto$alumacc.cc:490:replace_alu$7418 [19] $auto$alumacc.cc:490:replace_alu$7418 [20] $auto$alumacc.cc:490:replace_alu$7418 [21] $auto$alumacc.cc:490:replace_alu$7418 [22] $auto$alumacc.cc:490:replace_alu$7418 [23] $auto$alumacc.cc:490:replace_alu$7418 [24] $auto$alumacc.cc:490:replace_alu$7418 [25] $auto$alumacc.cc:490:replace_alu$7418 [26] $auto$alumacc.cc:490:replace_alu$7418 [27] $auto$alumacc.cc:490:replace_alu$7418 [28] $auto$alumacc.cc:490:replace_alu$7418 [29] $auto$alumacc.cc:490:replace_alu$7418 [30] $auto$alumacc.cc:490:replace_alu$7418 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7435: { $auto$alumacc.cc:490:replace_alu$7429 [0] $auto$alumacc.cc:490:replace_alu$7429 [1] $auto$alumacc.cc:490:replace_alu$7429 [2] $auto$alumacc.cc:490:replace_alu$7429 [3] $auto$alumacc.cc:490:replace_alu$7429 [4] $auto$alumacc.cc:490:replace_alu$7429 [5] $auto$alumacc.cc:490:replace_alu$7429 [6] $auto$alumacc.cc:490:replace_alu$7429 [7] $auto$alumacc.cc:490:replace_alu$7429 [8] $auto$alumacc.cc:490:replace_alu$7429 [9] $auto$alumacc.cc:490:replace_alu$7429 [10] $auto$alumacc.cc:490:replace_alu$7429 [11] $auto$alumacc.cc:490:replace_alu$7429 [12] $auto$alumacc.cc:490:replace_alu$7429 [13] $auto$alumacc.cc:490:replace_alu$7429 [14] $auto$alumacc.cc:490:replace_alu$7429 [15] $auto$alumacc.cc:490:replace_alu$7429 [16] $auto$alumacc.cc:490:replace_alu$7429 [17] $auto$alumacc.cc:490:replace_alu$7429 [18] $auto$alumacc.cc:490:replace_alu$7429 [19] $auto$alumacc.cc:490:replace_alu$7429 [20] $auto$alumacc.cc:490:replace_alu$7429 [21] $auto$alumacc.cc:490:replace_alu$7429 [22] $auto$alumacc.cc:490:replace_alu$7429 [23] $auto$alumacc.cc:490:replace_alu$7429 [24] $auto$alumacc.cc:490:replace_alu$7429 [25] $auto$alumacc.cc:490:replace_alu$7429 [26] $auto$alumacc.cc:490:replace_alu$7429 [27] $auto$alumacc.cc:490:replace_alu$7429 [28] $auto$alumacc.cc:490:replace_alu$7429 [29] $auto$alumacc.cc:490:replace_alu$7429 [30] $auto$alumacc.cc:490:replace_alu$7429 [31] $auto$alumacc.cc:490:replace_alu$7429 [32] $auto$alumacc.cc:490:replace_alu$7429 [33] $auto$alumacc.cc:490:replace_alu$7429 [34] $auto$alumacc.cc:490:replace_alu$7429 [35] $auto$alumacc.cc:490:replace_alu$7429 [36] $auto$alumacc.cc:490:replace_alu$7429 [37] $auto$alumacc.cc:490:replace_alu$7429 [38] $auto$alumacc.cc:490:replace_alu$7429 [39] $auto$alumacc.cc:490:replace_alu$7429 [40] $auto$alumacc.cc:490:replace_alu$7429 [41] $auto$alumacc.cc:490:replace_alu$7429 [42] $auto$alumacc.cc:490:replace_alu$7429 [43] $auto$alumacc.cc:490:replace_alu$7429 [44] $auto$alumacc.cc:490:replace_alu$7429 [45] $auto$alumacc.cc:490:replace_alu$7429 [46] $auto$alumacc.cc:490:replace_alu$7429 [47] $auto$alumacc.cc:490:replace_alu$7429 [48] $auto$alumacc.cc:490:replace_alu$7429 [49] $auto$alumacc.cc:490:replace_alu$7429 [50] $auto$alumacc.cc:490:replace_alu$7429 [51] $auto$alumacc.cc:490:replace_alu$7429 [52] $auto$alumacc.cc:490:replace_alu$7429 [53] $auto$alumacc.cc:490:replace_alu$7429 [54] $auto$alumacc.cc:490:replace_alu$7429 [55] $auto$alumacc.cc:490:replace_alu$7429 [56] $auto$alumacc.cc:490:replace_alu$7429 [57] $auto$alumacc.cc:490:replace_alu$7429 [58] $auto$alumacc.cc:490:replace_alu$7429 [59] $auto$alumacc.cc:490:replace_alu$7429 [60] $auto$alumacc.cc:490:replace_alu$7429 [61] $auto$alumacc.cc:490:replace_alu$7429 [62] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7446: { $auto$alumacc.cc:490:replace_alu$7442 [0] $auto$alumacc.cc:490:replace_alu$7442 [1] $auto$alumacc.cc:490:replace_alu$7442 [2] $auto$alumacc.cc:490:replace_alu$7442 [3] $auto$alumacc.cc:490:replace_alu$7442 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7457: { $auto$alumacc.cc:490:replace_alu$7451 [0] $auto$alumacc.cc:490:replace_alu$7451 [1] $auto$alumacc.cc:490:replace_alu$7451 [2] $auto$alumacc.cc:490:replace_alu$7451 [3] $auto$alumacc.cc:490:replace_alu$7451 [4] $auto$alumacc.cc:490:replace_alu$7451 [5] $auto$alumacc.cc:490:replace_alu$7451 [6] $auto$alumacc.cc:490:replace_alu$7451 [7] $auto$alumacc.cc:490:replace_alu$7451 [8] $auto$alumacc.cc:490:replace_alu$7451 [9] $auto$alumacc.cc:490:replace_alu$7451 [10] $auto$alumacc.cc:490:replace_alu$7451 [11] $auto$alumacc.cc:490:replace_alu$7451 [12] $auto$alumacc.cc:490:replace_alu$7451 [13] $auto$alumacc.cc:490:replace_alu$7451 [14] $auto$alumacc.cc:490:replace_alu$7451 [15] $auto$alumacc.cc:490:replace_alu$7451 [16] $auto$alumacc.cc:490:replace_alu$7451 [17] $auto$alumacc.cc:490:replace_alu$7451 [18] $auto$alumacc.cc:490:replace_alu$7451 [19] $auto$alumacc.cc:490:replace_alu$7451 [20] $auto$alumacc.cc:490:replace_alu$7451 [21] $auto$alumacc.cc:490:replace_alu$7451 [22] $auto$alumacc.cc:490:replace_alu$7451 [23] $auto$alumacc.cc:490:replace_alu$7451 [24] $auto$alumacc.cc:490:replace_alu$7451 [25] $auto$alumacc.cc:490:replace_alu$7451 [26] $auto$alumacc.cc:490:replace_alu$7451 [27] $auto$alumacc.cc:490:replace_alu$7451 [28] $auto$alumacc.cc:490:replace_alu$7451 [29] $auto$alumacc.cc:490:replace_alu$7451 [30] $auto$alumacc.cc:490:replace_alu$7451 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7471: { $auto$alumacc.cc:490:replace_alu$7467 [0] $auto$alumacc.cc:490:replace_alu$7467 [1] $auto$alumacc.cc:490:replace_alu$7467 [2] $auto$alumacc.cc:490:replace_alu$7467 [3] $auto$alumacc.cc:490:replace_alu$7467 [4] $auto$alumacc.cc:490:replace_alu$7467 [5] $auto$alumacc.cc:490:replace_alu$7467 [6] $auto$alumacc.cc:490:replace_alu$7467 [7] $auto$alumacc.cc:490:replace_alu$7467 [8] $auto$alumacc.cc:490:replace_alu$7467 [9] $auto$alumacc.cc:490:replace_alu$7467 [10] $auto$alumacc.cc:490:replace_alu$7467 [11] $auto$alumacc.cc:490:replace_alu$7467 [12] $auto$alumacc.cc:490:replace_alu$7467 [13] $auto$alumacc.cc:490:replace_alu$7467 [14] $auto$alumacc.cc:490:replace_alu$7467 [15] $auto$alumacc.cc:490:replace_alu$7467 [16] $auto$alumacc.cc:490:replace_alu$7467 [17] $auto$alumacc.cc:490:replace_alu$7467 [18] $auto$alumacc.cc:490:replace_alu$7467 [19] $auto$alumacc.cc:490:replace_alu$7467 [20] $auto$alumacc.cc:490:replace_alu$7467 [21] $auto$alumacc.cc:490:replace_alu$7467 [22] $auto$alumacc.cc:490:replace_alu$7467 [23] $auto$alumacc.cc:490:replace_alu$7467 [24] $auto$alumacc.cc:490:replace_alu$7467 [25] $auto$alumacc.cc:490:replace_alu$7467 [26] $auto$alumacc.cc:490:replace_alu$7467 [27] $auto$alumacc.cc:490:replace_alu$7467 [28] $auto$alumacc.cc:490:replace_alu$7467 [29] $auto$alumacc.cc:490:replace_alu$7467 [30] $auto$alumacc.cc:490:replace_alu$7467 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7486: { $auto$alumacc.cc:490:replace_alu$7480 [0] $auto$alumacc.cc:490:replace_alu$7480 [1] $auto$alumacc.cc:490:replace_alu$7480 [2] $auto$alumacc.cc:490:replace_alu$7480 [3] $auto$alumacc.cc:490:replace_alu$7480 [4] $auto$alumacc.cc:490:replace_alu$7480 [5] $auto$alumacc.cc:490:replace_alu$7480 [6] $auto$alumacc.cc:490:replace_alu$7480 [7] $auto$alumacc.cc:490:replace_alu$7480 [8] $auto$alumacc.cc:490:replace_alu$7480 [9] $auto$alumacc.cc:490:replace_alu$7480 [10] $auto$alumacc.cc:490:replace_alu$7480 [11] $auto$alumacc.cc:490:replace_alu$7480 [12] $auto$alumacc.cc:490:replace_alu$7480 [13] $auto$alumacc.cc:490:replace_alu$7480 [14] $auto$alumacc.cc:490:replace_alu$7480 [15] $auto$alumacc.cc:490:replace_alu$7480 [16] $auto$alumacc.cc:490:replace_alu$7480 [17] $auto$alumacc.cc:490:replace_alu$7480 [18] $auto$alumacc.cc:490:replace_alu$7480 [19] $auto$alumacc.cc:490:replace_alu$7480 [20] $auto$alumacc.cc:490:replace_alu$7480 [21] $auto$alumacc.cc:490:replace_alu$7480 [22] $auto$alumacc.cc:490:replace_alu$7480 [23] $auto$alumacc.cc:490:replace_alu$7480 [24] $auto$alumacc.cc:490:replace_alu$7480 [25] $auto$alumacc.cc:490:replace_alu$7480 [26] $auto$alumacc.cc:490:replace_alu$7480 [27] $auto$alumacc.cc:490:replace_alu$7480 [28] $auto$alumacc.cc:490:replace_alu$7480 [29] $auto$alumacc.cc:490:replace_alu$7480 [30] $auto$alumacc.cc:490:replace_alu$7480 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7502: { $auto$alumacc.cc:490:replace_alu$7496 [0] $auto$alumacc.cc:490:replace_alu$7496 [1] $auto$alumacc.cc:490:replace_alu$7496 [2] $auto$alumacc.cc:490:replace_alu$7496 [3] $auto$alumacc.cc:490:replace_alu$7496 [4] $auto$alumacc.cc:490:replace_alu$7496 [5] $auto$alumacc.cc:490:replace_alu$7496 [6] $auto$alumacc.cc:490:replace_alu$7496 [7] $auto$alumacc.cc:490:replace_alu$7496 [8] $auto$alumacc.cc:490:replace_alu$7496 [9] $auto$alumacc.cc:490:replace_alu$7496 [10] $auto$alumacc.cc:490:replace_alu$7496 [11] $auto$alumacc.cc:490:replace_alu$7496 [12] $auto$alumacc.cc:490:replace_alu$7496 [13] $auto$alumacc.cc:490:replace_alu$7496 [14] $auto$alumacc.cc:490:replace_alu$7496 [15] $auto$alumacc.cc:490:replace_alu$7496 [16] $auto$alumacc.cc:490:replace_alu$7496 [17] $auto$alumacc.cc:490:replace_alu$7496 [18] $auto$alumacc.cc:490:replace_alu$7496 [19] $auto$alumacc.cc:490:replace_alu$7496 [20] $auto$alumacc.cc:490:replace_alu$7496 [21] $auto$alumacc.cc:490:replace_alu$7496 [22] $auto$alumacc.cc:490:replace_alu$7496 [23] $auto$alumacc.cc:490:replace_alu$7496 [24] $auto$alumacc.cc:490:replace_alu$7496 [25] $auto$alumacc.cc:490:replace_alu$7496 [26] $auto$alumacc.cc:490:replace_alu$7496 [27] $auto$alumacc.cc:490:replace_alu$7496 [28] $auto$alumacc.cc:490:replace_alu$7496 [29] $auto$alumacc.cc:490:replace_alu$7496 [30] $auto$alumacc.cc:490:replace_alu$7496 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7515: { $auto$alumacc.cc:490:replace_alu$7509 [0] $auto$alumacc.cc:490:replace_alu$7509 [1] $auto$alumacc.cc:490:replace_alu$7509 [2] $auto$alumacc.cc:490:replace_alu$7509 [3] $auto$alumacc.cc:490:replace_alu$7509 [4] $auto$alumacc.cc:490:replace_alu$7509 [5] $auto$alumacc.cc:490:replace_alu$7509 [6] $auto$alumacc.cc:490:replace_alu$7509 [7] $auto$alumacc.cc:490:replace_alu$7509 [8] $auto$alumacc.cc:490:replace_alu$7509 [9] $auto$alumacc.cc:490:replace_alu$7509 [10] $auto$alumacc.cc:490:replace_alu$7509 [11] $auto$alumacc.cc:490:replace_alu$7509 [12] $auto$alumacc.cc:490:replace_alu$7509 [13] $auto$alumacc.cc:490:replace_alu$7509 [14] $auto$alumacc.cc:490:replace_alu$7509 [15] $auto$alumacc.cc:490:replace_alu$7509 [16] $auto$alumacc.cc:490:replace_alu$7509 [17] $auto$alumacc.cc:490:replace_alu$7509 [18] $auto$alumacc.cc:490:replace_alu$7509 [19] $auto$alumacc.cc:490:replace_alu$7509 [20] $auto$alumacc.cc:490:replace_alu$7509 [21] $auto$alumacc.cc:490:replace_alu$7509 [22] $auto$alumacc.cc:490:replace_alu$7509 [23] $auto$alumacc.cc:490:replace_alu$7509 [24] $auto$alumacc.cc:490:replace_alu$7509 [25] $auto$alumacc.cc:490:replace_alu$7509 [26] $auto$alumacc.cc:490:replace_alu$7509 [27] $auto$alumacc.cc:490:replace_alu$7509 [28] $auto$alumacc.cc:490:replace_alu$7509 [29] $auto$alumacc.cc:490:replace_alu$7509 [30] $auto$alumacc.cc:490:replace_alu$7509 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7531: { $auto$alumacc.cc:490:replace_alu$7525 [0] $auto$alumacc.cc:490:replace_alu$7525 [1] $auto$alumacc.cc:490:replace_alu$7525 [2] $auto$alumacc.cc:490:replace_alu$7525 [3] $auto$alumacc.cc:490:replace_alu$7525 [4] $auto$alumacc.cc:490:replace_alu$7525 [5] $auto$alumacc.cc:490:replace_alu$7525 [6] $auto$alumacc.cc:490:replace_alu$7525 [7] $auto$alumacc.cc:490:replace_alu$7525 [8] $auto$alumacc.cc:490:replace_alu$7525 [9] $auto$alumacc.cc:490:replace_alu$7525 [10] $auto$alumacc.cc:490:replace_alu$7525 [11] $auto$alumacc.cc:490:replace_alu$7525 [12] $auto$alumacc.cc:490:replace_alu$7525 [13] $auto$alumacc.cc:490:replace_alu$7525 [14] $auto$alumacc.cc:490:replace_alu$7525 [15] $auto$alumacc.cc:490:replace_alu$7525 [16] $auto$alumacc.cc:490:replace_alu$7525 [17] $auto$alumacc.cc:490:replace_alu$7525 [18] $auto$alumacc.cc:490:replace_alu$7525 [19] $auto$alumacc.cc:490:replace_alu$7525 [20] $auto$alumacc.cc:490:replace_alu$7525 [21] $auto$alumacc.cc:490:replace_alu$7525 [22] $auto$alumacc.cc:490:replace_alu$7525 [23] $auto$alumacc.cc:490:replace_alu$7525 [24] $auto$alumacc.cc:490:replace_alu$7525 [25] $auto$alumacc.cc:490:replace_alu$7525 [26] $auto$alumacc.cc:490:replace_alu$7525 [27] $auto$alumacc.cc:490:replace_alu$7525 [28] $auto$alumacc.cc:490:replace_alu$7525 [29] $auto$alumacc.cc:490:replace_alu$7525 [30] $auto$alumacc.cc:490:replace_alu$7525 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7544: { $auto$alumacc.cc:490:replace_alu$7538 [0] $auto$alumacc.cc:490:replace_alu$7538 [1] $auto$alumacc.cc:490:replace_alu$7538 [2] $auto$alumacc.cc:490:replace_alu$7538 [3] $auto$alumacc.cc:490:replace_alu$7538 [4] $auto$alumacc.cc:490:replace_alu$7538 [5] $auto$alumacc.cc:490:replace_alu$7538 [6] $auto$alumacc.cc:490:replace_alu$7538 [7] $auto$alumacc.cc:490:replace_alu$7538 [8] $auto$alumacc.cc:490:replace_alu$7538 [9] $auto$alumacc.cc:490:replace_alu$7538 [10] $auto$alumacc.cc:490:replace_alu$7538 [11] $auto$alumacc.cc:490:replace_alu$7538 [12] $auto$alumacc.cc:490:replace_alu$7538 [13] $auto$alumacc.cc:490:replace_alu$7538 [14] $auto$alumacc.cc:490:replace_alu$7538 [15] $auto$alumacc.cc:490:replace_alu$7538 [16] $auto$alumacc.cc:490:replace_alu$7538 [17] $auto$alumacc.cc:490:replace_alu$7538 [18] $auto$alumacc.cc:490:replace_alu$7538 [19] $auto$alumacc.cc:490:replace_alu$7538 [20] $auto$alumacc.cc:490:replace_alu$7538 [21] $auto$alumacc.cc:490:replace_alu$7538 [22] $auto$alumacc.cc:490:replace_alu$7538 [23] $auto$alumacc.cc:490:replace_alu$7538 [24] $auto$alumacc.cc:490:replace_alu$7538 [25] $auto$alumacc.cc:490:replace_alu$7538 [26] $auto$alumacc.cc:490:replace_alu$7538 [27] $auto$alumacc.cc:490:replace_alu$7538 [28] $auto$alumacc.cc:490:replace_alu$7538 [29] $auto$alumacc.cc:490:replace_alu$7538 [30] $auto$alumacc.cc:490:replace_alu$7538 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7560: { $auto$alumacc.cc:490:replace_alu$7554 [0] $auto$alumacc.cc:490:replace_alu$7554 [1] $auto$alumacc.cc:490:replace_alu$7554 [2] $auto$alumacc.cc:490:replace_alu$7554 [3] $auto$alumacc.cc:490:replace_alu$7554 [4] $auto$alumacc.cc:490:replace_alu$7554 [5] $auto$alumacc.cc:490:replace_alu$7554 [6] $auto$alumacc.cc:490:replace_alu$7554 [7] $auto$alumacc.cc:490:replace_alu$7554 [8] $auto$alumacc.cc:490:replace_alu$7554 [9] $auto$alumacc.cc:490:replace_alu$7554 [10] $auto$alumacc.cc:490:replace_alu$7554 [11] $auto$alumacc.cc:490:replace_alu$7554 [12] $auto$alumacc.cc:490:replace_alu$7554 [13] $auto$alumacc.cc:490:replace_alu$7554 [14] $auto$alumacc.cc:490:replace_alu$7554 [15] $auto$alumacc.cc:490:replace_alu$7554 [16] $auto$alumacc.cc:490:replace_alu$7554 [17] $auto$alumacc.cc:490:replace_alu$7554 [18] $auto$alumacc.cc:490:replace_alu$7554 [19] $auto$alumacc.cc:490:replace_alu$7554 [20] $auto$alumacc.cc:490:replace_alu$7554 [21] $auto$alumacc.cc:490:replace_alu$7554 [22] $auto$alumacc.cc:490:replace_alu$7554 [23] $auto$alumacc.cc:490:replace_alu$7554 [24] $auto$alumacc.cc:490:replace_alu$7554 [25] $auto$alumacc.cc:490:replace_alu$7554 [26] $auto$alumacc.cc:490:replace_alu$7554 [27] $auto$alumacc.cc:490:replace_alu$7554 [28] $auto$alumacc.cc:490:replace_alu$7554 [29] $auto$alumacc.cc:490:replace_alu$7554 [30] $auto$alumacc.cc:490:replace_alu$7554 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7573: { $auto$alumacc.cc:490:replace_alu$7567 [0] $auto$alumacc.cc:490:replace_alu$7567 [1] $auto$alumacc.cc:490:replace_alu$7567 [2] $auto$alumacc.cc:490:replace_alu$7567 [3] $auto$alumacc.cc:490:replace_alu$7567 [4] $auto$alumacc.cc:490:replace_alu$7567 [5] $auto$alumacc.cc:490:replace_alu$7567 [6] $auto$alumacc.cc:490:replace_alu$7567 [7] $auto$alumacc.cc:490:replace_alu$7567 [8] $auto$alumacc.cc:490:replace_alu$7567 [9] $auto$alumacc.cc:490:replace_alu$7567 [10] $auto$alumacc.cc:490:replace_alu$7567 [11] $auto$alumacc.cc:490:replace_alu$7567 [12] $auto$alumacc.cc:490:replace_alu$7567 [13] $auto$alumacc.cc:490:replace_alu$7567 [14] $auto$alumacc.cc:490:replace_alu$7567 [15] $auto$alumacc.cc:490:replace_alu$7567 [16] $auto$alumacc.cc:490:replace_alu$7567 [17] $auto$alumacc.cc:490:replace_alu$7567 [18] $auto$alumacc.cc:490:replace_alu$7567 [19] $auto$alumacc.cc:490:replace_alu$7567 [20] $auto$alumacc.cc:490:replace_alu$7567 [21] $auto$alumacc.cc:490:replace_alu$7567 [22] $auto$alumacc.cc:490:replace_alu$7567 [23] $auto$alumacc.cc:490:replace_alu$7567 [24] $auto$alumacc.cc:490:replace_alu$7567 [25] $auto$alumacc.cc:490:replace_alu$7567 [26] $auto$alumacc.cc:490:replace_alu$7567 [27] $auto$alumacc.cc:490:replace_alu$7567 [28] $auto$alumacc.cc:490:replace_alu$7567 [29] $auto$alumacc.cc:490:replace_alu$7567 [30] $auto$alumacc.cc:490:replace_alu$7567 [31] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3504: { $auto$opt_reduce.cc:132:opt_mux$7751 $techmap\soc.cpu.$procmux$2779_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4457: { }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4470: { }
  Optimizing cells in module \hardware.
Performed a total of 24 changes.

9.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 26 unused cells and 60 unused wires.
<suppressed ~27 debug messages>

9.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.19.9. Rerunning OPT passes. (Maybe there is more to do..)

9.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~358 debug messages>

9.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

9.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.19.16. Rerunning OPT passes. (Maybe there is more to do..)

9.19.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~358 debug messages>

9.19.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.19.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.19.20. Executing OPT_RMDFF pass (remove dff with constant values).

9.19.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.19.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.19.23. Finished OPT passes. (There is nothing left to do.)

9.20. Executing FSM pass (extract and optimize FSM).

9.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register hardware.soc.cpu.cpu_state.
Not marking hardware.soc.cpu.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.cpu.mem_wordsize as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.spimemio.state as FSM state register:
    Users of register don't seem to benefit from recoding.

9.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc.cpu.cpu_state' from module `\hardware'.
  found $dff cell for state register: $techmap\soc.cpu.$procdff$6867
  root of input selection tree: $techmap\soc.cpu.$0\cpu_state[7:0]
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1909$2638_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1893$2619_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$7206
  found ctrl input: $techmap\soc.cpu.$procmux$2779_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2780_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2781_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2782_CMP
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y
  found ctrl input: $techmap\soc.cpu.$logic_or$picorv32.v:1835$2604_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1850$2608_Y
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1809$2586_Y
  found ctrl input: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \soc.cpu.mem_done
  found ctrl input: \soc.cpu.is_sb_sh_sw
  found ctrl input: \soc.cpu.instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \soc.cpu.pcpi_int_ready
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1583$2536_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1586$2540_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$7126
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$7124
  found state code: 8'00000001
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1516$2515_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1526$2523_Y
  found ctrl input: \soc.cpu.decoder_trigger
  found ctrl input: \soc.cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1901$2629_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1894$2622_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1896$2626_Y
  found ctrl output: $techmap\soc.cpu.$procmux$2784_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2782_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2781_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2780_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2779_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2778_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2777_CMP
  found ctrl output: $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y
  ctrl inputs: { $auto$opt_reduce.cc:132:opt_mux$7126 $auto$opt_reduce.cc:132:opt_mux$7124 $auto$opt_reduce.cc:132:opt_mux$7206 \soc.cpu.pcpi_int_ready \soc.cpu.mem_done \soc.cpu.instr_jal \soc.cpu.instr_trap \soc.cpu.decoder_trigger \soc.cpu.is_sb_sh_sw \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu $techmap\soc.cpu.$logic_and$picorv32.v:1516$2515_Y $techmap\soc.cpu.$logic_and$picorv32.v:1526$2523_Y $techmap\soc.cpu.$logic_and$picorv32.v:1583$2536_Y $techmap\soc.cpu.$logic_and$picorv32.v:1586$2540_Y $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y $techmap\soc.cpu.$eq$picorv32.v:1809$2586_Y $techmap\soc.cpu.$logic_or$picorv32.v:1835$2604_Y $techmap\soc.cpu.$logic_and$picorv32.v:1850$2608_Y $techmap\soc.cpu.$logic_and$picorv32.v:1893$2619_Y $techmap\soc.cpu.$logic_and$picorv32.v:1894$2622_Y $techmap\soc.cpu.$logic_and$picorv32.v:1896$2626_Y $techmap\soc.cpu.$logic_and$picorv32.v:1901$2629_Y $techmap\soc.cpu.$logic_and$picorv32.v:1909$2638_Y \resetn }
  ctrl outputs: { $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y $techmap\soc.cpu.$0\cpu_state[7:0] $techmap\soc.cpu.$procmux$2777_CMP $techmap\soc.cpu.$procmux$2778_CMP $techmap\soc.cpu.$procmux$2779_CMP $techmap\soc.cpu.$procmux$2780_CMP $techmap\soc.cpu.$procmux$2781_CMP $techmap\soc.cpu.$procmux$2782_CMP $techmap\soc.cpu.$procmux$2784_CMP }
  transition: 8'10000000 24'------------------0---00 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0---01 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------10-000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------10-001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------11000- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------1-010- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'--------------------0-1- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------0-1-10 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0-1-11 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101111 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111111 -> 8'10000000 16'0100000000000001
  transition: 8'01000000 24'------------------0---00 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0---01 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------10-000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------10-001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------11000- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------111000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------1-010- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------101100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'--------------------0-1- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------0-1-10 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0-1-11 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111111 -> 8'01000000 16'1010000000000000
  transition: 8'00100000 24'------------------0---00 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0---01 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0---01 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0---01 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0---01 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------10-000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---10-001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----10-001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----10-001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---10-001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------11000- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------111000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------1-010- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------101100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'--------------------0-1- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------0-1-10 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0-1-11 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0-1-11 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0-1-11 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0-1-11 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111111 -> 8'00001000 16'0000010000000010
  transition: 8'00001000 24'------------------0---00 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0---01 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------10-000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------10-001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------11000- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------111000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------1-010- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------101100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'--------------------0-1- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------0-1-10 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0-1-11 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 24'------------------0---00 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110---01 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------10-000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-10-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1010-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1110-001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------11000- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------111000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------1-010- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------101100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'--------------------0-1- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------0-1-10 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110-1-11 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101111 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111111 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 24'------------------0---00 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110---01 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------10-000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-10-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1010-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1110-001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------11000- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------111000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------1-010- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------101100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'--------------------0-1- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------0-1-10 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110-1-11 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101111 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111111 -> 8'01000000 16'0010000001000000

9.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$7752' from module `\hardware'.
  Merging pattern 24'------------------111001 and 24'------------------111011 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101101 and 24'------------------101111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111101 and 24'------------------111111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111011 and 24'------------------111001 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101111 and 24'------------------101101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111111 and 24'------------------111101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1110-1 and 24'------------------1111-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1111-1 and 24'------------------1110-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111001 and 24'-------0--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111001 and 24'-----1-1--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111001 and 24'----------01------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111001 and 24'----------1-------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101101 and 24'-------0--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101101 and 24'-----1-1--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101101 and 24'----------01------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101101 and 24'----------1-------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111101 and 24'-------0--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111101 and 24'-----1-1--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111101 and 24'----------01------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111101 and 24'----------1-------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111011 and 24'-------0--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111011 and 24'-----1-1--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111011 and 24'----------01------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111011 and 24'----------1-------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101111 and 24'-------0--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101111 and 24'-----1-1--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101111 and 24'----------01------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101111 and 24'----------1-------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111111 and 24'-------0--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111111 and 24'-----1-1--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111111 and 24'----------01------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111111 and 24'----------1-------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1110-1 and 24'-------0--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1110-1 and 24'-----1-1--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1110-1 and 24'----------01------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1110-1 and 24'----------1-------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1111-1 and 24'-------0--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1111-1 and 24'-----1-1--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1111-1 and 24'----------01------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1111-1 and 24'----------1-------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----0-1--00------111001 and 24'-----0-1--00------111011 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101101 and 24'-----0-1--00------101111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111101 and 24'-----0-1--00------111111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111011 and 24'-----0-1--00------111001 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101111 and 24'-----0-1--00------101101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111111 and 24'-----0-1--00------111101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1110-1 and 24'-----0-1--00------1111-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1111-1 and 24'-----0-1--00------1110-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'---0--1-----10----111001 and 24'---0--1-----10----111011 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101101 and 24'---0--1-----10----101111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111101 and 24'---0--1-----10----111111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111011 and 24'---0--1-----10----111001 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101111 and 24'---0--1-----10----101101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111111 and 24'---0--1-----10----111101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1110-1 and 24'---0--1-----10----1111-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1111-1 and 24'---0--1-----10----1110-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111001 and 24'---0--1-----11----111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111001 and 24'---1--1-----------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111001 and 24'-1----------------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101101 and 24'---0--1-----11----101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101101 and 24'---1--1-----------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101101 and 24'-1----------------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111101 and 24'---0--1-----11----111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111101 and 24'---1--1-----------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111101 and 24'-1----------------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111011 and 24'---0--1-----11----111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111011 and 24'---1--1-----------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111011 and 24'-1----------------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101111 and 24'---0--1-----11----101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101111 and 24'---1--1-----------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101111 and 24'-1----------------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111111 and 24'---0--1-----11----111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111111 and 24'---1--1-----------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111111 and 24'-1----------------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1110-1 and 24'---0--1-----11----1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1110-1 and 24'---1--1-----------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1110-1 and 24'-1----------------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1111-1 and 24'---0--1-----11----1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1111-1 and 24'---1--1-----------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1111-1 and 24'-1----------------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----0-----111001 and 24'---0--1-----0-----111011 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101101 and 24'---0--1-----0-----101111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111101 and 24'---0--1-----0-----111111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111011 and 24'---0--1-----0-----111001 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101111 and 24'---0--1-----0-----101101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111111 and 24'---0--1-----0-----111101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1110-1 and 24'---0--1-----0-----1111-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1111-1 and 24'---0--1-----0-----1110-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'00----0-0-----0---111001 and 24'00----0-0-----0---111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111001 and 24'1-----------------111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101101 and 24'00----0-0-----0---101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101101 and 24'1-----------------101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111101 and 24'00----0-0-----0---111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111101 and 24'1-----------------111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111011 and 24'00----0-0-----0---111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111011 and 24'1-----------------111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101111 and 24'00----0-0-----0---101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101111 and 24'1-----------------101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111111 and 24'00----0-0-----0---111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111111 and 24'1-----------------111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1110-1 and 24'00----0-0-----0---1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1110-1 and 24'1-----------------1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1111-1 and 24'00----0-0-----0---1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1111-1 and 24'1-----------------1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00------1-----0---111001 and 24'00------1-----0---111011 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101101 and 24'00------1-----0---101111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111101 and 24'00------1-----0---111111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111011 and 24'00------1-----0---111001 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101111 and 24'00------1-----0---101101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111111 and 24'00------1-----0---111101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1110-1 and 24'00------1-----0---1111-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1111-1 and 24'00------1-----0---1110-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'--------------1---111001 and 24'--------------1---111011 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101101 and 24'--------------1---101111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111101 and 24'--------------1---111111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111011 and 24'--------------1---111001 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101111 and 24'--------------1---101101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111111 and 24'--------------1---111101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1110-1 and 24'--------------1---1111-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1111-1 and 24'--------------1---1110-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111001 and 24'---------0--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111001 and 24'----1----1--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101101 and 24'---------0--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101101 and 24'----1----1--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111101 and 24'---------0--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111101 and 24'----1----1--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111011 and 24'---------0--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111011 and 24'----1----1--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101111 and 24'---------0--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101111 and 24'----1----1--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111111 and 24'---------0--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111111 and 24'----1----1--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1110-1 and 24'---------0--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1110-1 and 24'----1----1--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1111-1 and 24'---------0--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1111-1 and 24'----1----1--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----0----1--------111001 and 24'----0----1--------111011 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101101 and 24'----0----1--------101111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111101 and 24'----0----1--------111111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111011 and 24'----0----1--------111001 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101111 and 24'----0----1--------101101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111111 and 24'----0----1--------111101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1110-1 and 24'----0----1--------1111-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1111-1 and 24'----0----1--------1110-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (5 5 16'0000000011000000).
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$7206.
  Removing unused input signal $techmap\soc.cpu.$eq$picorv32.v:1809$2586_Y.

9.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

9.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$7752' from module `\hardware'.
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [7].

9.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc.cpu.cpu_state$7752' from module `\hardware' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> -----1
  01000000 -> ----1-
  00100000 -> ---1--
  00001000 -> --1---
  00000010 -> -1----
  00000001 -> 1-----

9.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc.cpu.cpu_state$7752' from module `\hardware':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.cpu_state$7752 (\soc.cpu.cpu_state):

  Number of input signals:   22
  Number of output signals:   8
  Number of state bits:       6

  Input signals:
    0: \resetn
    1: $techmap\soc.cpu.$logic_and$picorv32.v:1909$2638_Y
    2: $techmap\soc.cpu.$logic_and$picorv32.v:1901$2629_Y
    3: $techmap\soc.cpu.$logic_and$picorv32.v:1896$2626_Y
    4: $techmap\soc.cpu.$logic_and$picorv32.v:1894$2622_Y
    5: $techmap\soc.cpu.$logic_and$picorv32.v:1893$2619_Y
    6: $techmap\soc.cpu.$logic_and$picorv32.v:1850$2608_Y
    7: $techmap\soc.cpu.$logic_or$picorv32.v:1835$2604_Y
    8: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2555_Y
    9: $techmap\soc.cpu.$logic_and$picorv32.v:1586$2540_Y
   10: $techmap\soc.cpu.$logic_and$picorv32.v:1583$2536_Y
   11: $techmap\soc.cpu.$logic_and$picorv32.v:1526$2523_Y
   12: $techmap\soc.cpu.$logic_and$picorv32.v:1516$2515_Y
   13: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
   14: \soc.cpu.is_sb_sh_sw
   15: \soc.cpu.decoder_trigger
   16: \soc.cpu.instr_trap
   17: \soc.cpu.instr_jal
   18: \soc.cpu.mem_done
   19: \soc.cpu.pcpi_int_ready
   20: $auto$opt_reduce.cc:132:opt_mux$7124
   21: $auto$opt_reduce.cc:132:opt_mux$7126

  Output signals:
    0: $techmap\soc.cpu.$procmux$2784_CMP
    1: $techmap\soc.cpu.$procmux$2782_CMP
    2: $techmap\soc.cpu.$procmux$2781_CMP
    3: $techmap\soc.cpu.$procmux$2780_CMP
    4: $techmap\soc.cpu.$procmux$2779_CMP
    5: $techmap\soc.cpu.$procmux$2778_CMP
    6: $techmap\soc.cpu.$procmux$2777_CMP
    7: $techmap\soc.cpu.$eq$picorv32.v:1291$2434_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 22'----------------10-001   ->     0 8'00000001
      1:     0 22'----------------0---01   ->     0 8'00000001
      2:     0 22'----------------101011   ->     0 8'00000001
      3:     0 22'----------------0-1-11   ->     0 8'00000001
      4:     0 22'----------------1011-1   ->     0 8'00000001
      5:     0 22'----------------111--1   ->     0 8'00000001
      6:     0 22'----------------11000-   ->     0 8'00000001
      7:     0 22'----------------1-010-   ->     0 8'00000001
      8:     0 22'------------------0-1-   ->     0 8'00000001
      9:     0 22'----------------10-000   ->     1 8'00000001
     10:     0 22'----------------0---00   ->     1 8'00000001
     11:     0 22'----------------101010   ->     1 8'00000001
     12:     0 22'----------------0-1-10   ->     1 8'00000001
     13:     0 22'----------------1011-0   ->     1 8'00000001
     14:     0 22'----------------111--0   ->     1 8'00000001
     15:     1 22'----------------11000-   ->     0 8'10000000
     16:     1 22'----------------1-010-   ->     0 8'10000000
     17:     1 22'------------------0-1-   ->     0 8'10000000
     18:     1 22'----------------10-000   ->     1 8'10000000
     19:     1 22'----------------0---00   ->     1 8'10000000
     20:     1 22'----------------101010   ->     1 8'10000000
     21:     1 22'----------------0-1-10   ->     1 8'10000000
     22:     1 22'----------------1011-0   ->     1 8'10000000
     23:     1 22'----------------111--0   ->     1 8'10000000
     24:     1 22'------0--00-----10-001   ->     1 8'10000000
     25:     1 22'----1-1--00-----10-001   ->     1 8'10000000
     26:     1 22'---------01-----10-001   ->     1 8'10000000
     27:     1 22'---------1------10-001   ->     1 8'10000000
     28:     1 22'------0--00-----0---01   ->     1 8'10000000
     29:     1 22'----1-1--00-----0---01   ->     1 8'10000000
     30:     1 22'---------01-----0---01   ->     1 8'10000000
     31:     1 22'---------1------0---01   ->     1 8'10000000
     32:     1 22'------0--00-----101011   ->     1 8'10000000
     33:     1 22'----1-1--00-----101011   ->     1 8'10000000
     34:     1 22'---------01-----101011   ->     1 8'10000000
     35:     1 22'---------1------101011   ->     1 8'10000000
     36:     1 22'------0--00-----0-1-11   ->     1 8'10000000
     37:     1 22'----1-1--00-----0-1-11   ->     1 8'10000000
     38:     1 22'---------01-----0-1-11   ->     1 8'10000000
     39:     1 22'---------1------0-1-11   ->     1 8'10000000
     40:     1 22'------0--00-----1011-1   ->     1 8'10000000
     41:     1 22'----1-1--00-----1011-1   ->     1 8'10000000
     42:     1 22'---------01-----1011-1   ->     1 8'10000000
     43:     1 22'---------1------1011-1   ->     1 8'10000000
     44:     1 22'------0--00-----111--1   ->     1 8'10000000
     45:     1 22'----1-1--00-----111--1   ->     1 8'10000000
     46:     1 22'---------01-----111--1   ->     1 8'10000000
     47:     1 22'---------1------111--1   ->     1 8'10000000
     48:     1 22'----0-1--00-----10-001   ->     2 8'10000000
     49:     1 22'----0-1--00-----0---01   ->     2 8'10000000
     50:     1 22'----0-1--00-----101011   ->     2 8'10000000
     51:     1 22'----0-1--00-----0-1-11   ->     2 8'10000000
     52:     1 22'----0-1--00-----1011-1   ->     2 8'10000000
     53:     1 22'----0-1--00-----111--1   ->     2 8'10000000
     54:     2 22'--0--1-----10---10-001   ->     0 8'00000010
     55:     2 22'--0--1-----10---0---01   ->     0 8'00000010
     56:     2 22'--0--1-----10---101011   ->     0 8'00000010
     57:     2 22'--0--1-----10---0-1-11   ->     0 8'00000010
     58:     2 22'--0--1-----10---1011-1   ->     0 8'00000010
     59:     2 22'--0--1-----10---111--1   ->     0 8'00000010
     60:     2 22'----------------11000-   ->     0 8'00000010
     61:     2 22'----------------1-010-   ->     0 8'00000010
     62:     2 22'------------------0-1-   ->     0 8'00000010
     63:     2 22'----------------10-000   ->     1 8'00000010
     64:     2 22'----------------0---00   ->     1 8'00000010
     65:     2 22'----------------101010   ->     1 8'00000010
     66:     2 22'----------------0-1-10   ->     1 8'00000010
     67:     2 22'----------------1011-0   ->     1 8'00000010
     68:     2 22'----------------111--0   ->     1 8'00000010
     69:     2 22'--0--1-----11---10-001   ->     1 8'00000010
     70:     2 22'--1--1----------10-001   ->     1 8'00000010
     71:     2 22'-1--------------10-001   ->     1 8'00000010
     72:     2 22'--0--1-----11---0---01   ->     1 8'00000010
     73:     2 22'--1--1----------0---01   ->     1 8'00000010
     74:     2 22'-1--------------0---01   ->     1 8'00000010
     75:     2 22'--0--1-----11---101011   ->     1 8'00000010
     76:     2 22'--1--1----------101011   ->     1 8'00000010
     77:     2 22'-1--------------101011   ->     1 8'00000010
     78:     2 22'--0--1-----11---0-1-11   ->     1 8'00000010
     79:     2 22'--1--1----------0-1-11   ->     1 8'00000010
     80:     2 22'-1--------------0-1-11   ->     1 8'00000010
     81:     2 22'--0--1-----11---1011-1   ->     1 8'00000010
     82:     2 22'--1--1----------1011-1   ->     1 8'00000010
     83:     2 22'-1--------------1011-1   ->     1 8'00000010
     84:     2 22'--0--1-----11---111--1   ->     1 8'00000010
     85:     2 22'--1--1----------111--1   ->     1 8'00000010
     86:     2 22'-1--------------111--1   ->     1 8'00000010
     87:     2 22'--0--1-----0----10-001   ->     2 8'00000010
     88:     2 22'--0--1-----0----0---01   ->     2 8'00000010
     89:     2 22'--0--1-----0----101011   ->     2 8'00000010
     90:     2 22'--0--1-----0----0-1-11   ->     2 8'00000010
     91:     2 22'--0--1-----0----1011-1   ->     2 8'00000010
     92:     2 22'--0--1-----0----111--1   ->     2 8'00000010
     93:     2 22'00---0-0-----0--10-001   ->     3 8'00000010
     94:     2 22'1---------------10-001   ->     3 8'00000010
     95:     2 22'00---0-0-----0--0---01   ->     3 8'00000010
     96:     2 22'1---------------0---01   ->     3 8'00000010
     97:     2 22'00---0-0-----0--101011   ->     3 8'00000010
     98:     2 22'1---------------101011   ->     3 8'00000010
     99:     2 22'00---0-0-----0--0-1-11   ->     3 8'00000010
    100:     2 22'1---------------0-1-11   ->     3 8'00000010
    101:     2 22'00---0-0-----0--1011-1   ->     3 8'00000010
    102:     2 22'1---------------1011-1   ->     3 8'00000010
    103:     2 22'00---0-0-----0--111--1   ->     3 8'00000010
    104:     2 22'1---------------111--1   ->     3 8'00000010
    105:     2 22'00-----1-----0--10-001   ->     4 8'00000010
    106:     2 22'00-----1-----0--0---01   ->     4 8'00000010
    107:     2 22'00-----1-----0--101011   ->     4 8'00000010
    108:     2 22'00-----1-----0--0-1-11   ->     4 8'00000010
    109:     2 22'00-----1-----0--1011-1   ->     4 8'00000010
    110:     2 22'00-----1-----0--111--1   ->     4 8'00000010
    111:     2 22'-------------1--10-001   ->     5 8'00000010
    112:     2 22'-------------1--0---01   ->     5 8'00000010
    113:     2 22'-------------1--101011   ->     5 8'00000010
    114:     2 22'-------------1--0-1-11   ->     5 8'00000010
    115:     2 22'-------------1--1011-1   ->     5 8'00000010
    116:     2 22'-------------1--111--1   ->     5 8'00000010
    117:     3 22'----------------11000-   ->     0 8'00001000
    118:     3 22'----------------1-010-   ->     0 8'00001000
    119:     3 22'------------------0-1-   ->     0 8'00001000
    120:     3 22'----------------10-000   ->     1 8'00001000
    121:     3 22'----------------0---00   ->     1 8'00001000
    122:     3 22'----------------101010   ->     1 8'00001000
    123:     3 22'----------------0-1-10   ->     1 8'00001000
    124:     3 22'----------------1011-0   ->     1 8'00001000
    125:     3 22'----------------111--0   ->     1 8'00001000
    126:     3 22'--------0-------10-001   ->     1 8'00001000
    127:     3 22'---1----1-------10-001   ->     1 8'00001000
    128:     3 22'--------0-------0---01   ->     1 8'00001000
    129:     3 22'---1----1-------0---01   ->     1 8'00001000
    130:     3 22'--------0-------101011   ->     1 8'00001000
    131:     3 22'---1----1-------101011   ->     1 8'00001000
    132:     3 22'--------0-------0-1-11   ->     1 8'00001000
    133:     3 22'---1----1-------0-1-11   ->     1 8'00001000
    134:     3 22'--------0-------1011-1   ->     1 8'00001000
    135:     3 22'---1----1-------1011-1   ->     1 8'00001000
    136:     3 22'--------0-------111--1   ->     1 8'00001000
    137:     3 22'---1----1-------111--1   ->     1 8'00001000
    138:     3 22'---0----1-------10-001   ->     3 8'00001000
    139:     3 22'---0----1-------0---01   ->     3 8'00001000
    140:     3 22'---0----1-------101011   ->     3 8'00001000
    141:     3 22'---0----1-------0-1-11   ->     3 8'00001000
    142:     3 22'---0----1-------1011-1   ->     3 8'00001000
    143:     3 22'---0----1-------111--1   ->     3 8'00001000
    144:     4 22'----------------11000-   ->     0 8'00100000
    145:     4 22'----------------1-010-   ->     0 8'00100000
    146:     4 22'------------------0-1-   ->     0 8'00100000
    147:     4 22'----------------10-000   ->     1 8'00100000
    148:     4 22'----------------0---00   ->     1 8'00100000
    149:     4 22'----------------101010   ->     1 8'00100000
    150:     4 22'----------------0-1-10   ->     1 8'00100000
    151:     4 22'----------------1011-0   ->     1 8'00100000
    152:     4 22'----------------111--0   ->     1 8'00100000
    153:     4 22'--------------1110-001   ->     1 8'00100000
    154:     4 22'--------------110---01   ->     1 8'00100000
    155:     4 22'--------------11101011   ->     1 8'00100000
    156:     4 22'--------------110-1-11   ->     1 8'00100000
    157:     4 22'--------------111011-1   ->     1 8'00100000
    158:     4 22'--------------11111--1   ->     1 8'00100000
    159:     4 22'--------------1010-001   ->     4 8'00100000
    160:     4 22'--------------0-10-001   ->     4 8'00100000
    161:     4 22'--------------100---01   ->     4 8'00100000
    162:     4 22'--------------0-0---01   ->     4 8'00100000
    163:     4 22'--------------10101011   ->     4 8'00100000
    164:     4 22'--------------0-101011   ->     4 8'00100000
    165:     4 22'--------------100-1-11   ->     4 8'00100000
    166:     4 22'--------------0-0-1-11   ->     4 8'00100000
    167:     4 22'--------------101011-1   ->     4 8'00100000
    168:     4 22'--------------0-1011-1   ->     4 8'00100000
    169:     4 22'--------------10111--1   ->     4 8'00100000
    170:     4 22'--------------0-111--1   ->     4 8'00100000
    171:     5 22'----------------11000-   ->     0 8'01000000
    172:     5 22'----------------1-010-   ->     0 8'01000000
    173:     5 22'------------------0-1-   ->     0 8'01000000
    174:     5 22'----------------10-000   ->     1 8'01000000
    175:     5 22'----------------0---00   ->     1 8'01000000
    176:     5 22'----------------101010   ->     1 8'01000000
    177:     5 22'----------------0-1-10   ->     1 8'01000000
    178:     5 22'----------------1011-0   ->     1 8'01000000
    179:     5 22'----------------111--0   ->     1 8'01000000
    180:     5 22'--------------1110-001   ->     1 8'01000000
    181:     5 22'--------------110---01   ->     1 8'01000000
    182:     5 22'--------------11101011   ->     1 8'01000000
    183:     5 22'--------------110-1-11   ->     1 8'01000000
    184:     5 22'--------------111011-1   ->     1 8'01000000
    185:     5 22'--------------11111--1   ->     1 8'01000000
    186:     5 22'--------------1010-001   ->     5 8'01000000
    187:     5 22'--------------0-10-001   ->     5 8'01000000
    188:     5 22'--------------100---01   ->     5 8'01000000
    189:     5 22'--------------0-0---01   ->     5 8'01000000
    190:     5 22'--------------10101011   ->     5 8'01000000
    191:     5 22'--------------0-101011   ->     5 8'01000000
    192:     5 22'--------------100-1-11   ->     5 8'01000000
    193:     5 22'--------------0-0-1-11   ->     5 8'01000000
    194:     5 22'--------------101011-1   ->     5 8'01000000
    195:     5 22'--------------0-1011-1   ->     5 8'01000000
    196:     5 22'--------------10111--1   ->     5 8'01000000
    197:     5 22'--------------0-111--1   ->     5 8'01000000

-------------------------------------

9.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc.cpu.cpu_state$7752' from module `\hardware'.

9.21. Executing OPT pass (performing simple optimizations).

9.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~3 debug messages>

9.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

9.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

9.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

9.21.5. Finished fast OPT passes.

9.22. Executing MEMORY pass.

9.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:215$233' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1962' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1963' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1964' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1965' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231' in module `\hardware': merged address $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$232' in module `\hardware': merged address $dff to cell.
Checking cell `$techmap\soc.memory.$memrd$\mem$picosoc.v:233$1961' in module `\hardware': merged data $dff to cell.

9.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 13 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

9.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory hardware.soc.memory.mem by address:
  New clock domain: posedge \clk_16mhz
    Port 0 ($techmap\soc.memory.$memwr$\mem$picosoc.v:234$1962) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\soc.memory.$memwr$\mem$picosoc.v:235$1963) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\soc.memory.$memwr$\mem$picosoc.v:236$1964) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\soc.memory.$memwr$\mem$picosoc.v:237$1965) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

9.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\soc.cpu.cpuregs.regs' in module `\hardware':
  $techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:215$233 ($memwr)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$232 ($memrd)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$231 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\soc.memory.mem' in module `\hardware':
  $techmap\soc.memory.$memwr$\mem$picosoc.v:237$1965 ($memwr)
  $techmap\soc.memory.$memrd$\mem$picosoc.v:233$1961 ($memrd)

9.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing hardware.soc.cpu.cpuregs.regs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 2 rules:
    Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: soc.cpu.cpuregs.regs.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: soc.cpu.cpuregs.regs.0.0.1
        Adding extra logic for transparent port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: soc.cpu.cpuregs.regs.1.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: soc.cpu.cpuregs.regs.1.0.1
        Adding extra logic for transparent port A1.2.
Processing hardware.soc.memory.mem:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: soc.memory.mem.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: soc.memory.mem.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: soc.memory.mem.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: soc.memory.mem.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: soc.memory.mem.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: soc.memory.mem.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: soc.memory.mem.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: soc.memory.mem.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: soc.memory.mem.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: soc.memory.mem.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: soc.memory.mem.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: soc.memory.mem.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: soc.memory.mem.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: soc.memory.mem.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: soc.memory.mem.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: soc.memory.mem.15.0.0

9.25. Executing TECHMAP pass (map to technology primitives).

9.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

9.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~122 debug messages>

9.26. Executing ICE40_BRAMINIT pass.

9.27. Executing OPT pass (performing simple optimizations).

9.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~196 debug messages>

9.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~38 debug messages>
Removed a total of 12 cells.

9.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

9.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 24 unused cells and 631 unused wires.
<suppressed ~28 debug messages>

9.27.5. Finished fast OPT passes.

9.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

9.29. Executing OPT pass (performing simple optimizations).

9.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/6 on $pmux $techmap\soc.cpu.$procmux$3445.
    dead port 4/6 on $pmux $techmap\soc.cpu.$procmux$3445.
    dead port 3/6 on $pmux $techmap\soc.cpu.$procmux$3692.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3708.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3708.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3974.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3974.
    dead port 1/5 on $pmux $techmap\soc.cpu.$procmux$3976.
    dead port 2/5 on $pmux $techmap\soc.cpu.$procmux$3976.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3986.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$3986.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$3986.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4184.
    dead port 3/5 on $pmux $techmap\soc.cpu.$procmux$4209.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4218.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$4218.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$4218.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4223.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$4223.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$4223.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$4227.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4227.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$4230.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4230.
Removed 24 multiplexer ports.
<suppressed ~341 debug messages>

9.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7115: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7111: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [3] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$8353: { $auto$fsm_map.cc:118:implement_pattern_cache$8327 $auto$fsm_map.cc:118:implement_pattern_cache$8323 $auto$fsm_map.cc:118:implement_pattern_cache$8319 $auto$fsm_map.cc:118:implement_pattern_cache$8315 $auto$fsm_map.cc:118:implement_pattern_cache$8311 $auto$fsm_map.cc:118:implement_pattern_cache$8307 $auto$fsm_map.cc:118:implement_pattern_cache$8303 $auto$fsm_map.cc:118:implement_pattern_cache$8299 $auto$fsm_map.cc:118:implement_pattern_cache$8295 $auto$fsm_map.cc:118:implement_pattern_cache$8291 $auto$fsm_map.cc:118:implement_pattern_cache$8287 $auto$fsm_map.cc:118:implement_pattern_cache$8283 $auto$fsm_map.cc:118:implement_pattern_cache$8351 $auto$fsm_map.cc:118:implement_pattern_cache$8347 $auto$fsm_map.cc:118:implement_pattern_cache$8343 $auto$fsm_map.cc:118:implement_pattern_cache$8339 $auto$fsm_map.cc:118:implement_pattern_cache$8335 $auto$fsm_map.cc:118:implement_pattern_cache$8331 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$8280: { $auto$fsm_map.cc:118:implement_pattern_cache$8246 $auto$fsm_map.cc:118:implement_pattern_cache$8242 $auto$fsm_map.cc:118:implement_pattern_cache$8238 $auto$fsm_map.cc:118:implement_pattern_cache$8234 $auto$fsm_map.cc:118:implement_pattern_cache$8230 $auto$fsm_map.cc:118:implement_pattern_cache$8226 $auto$fsm_map.cc:118:implement_pattern_cache$8222 $auto$fsm_map.cc:118:implement_pattern_cache$8218 $auto$fsm_map.cc:118:implement_pattern_cache$8214 $auto$fsm_map.cc:118:implement_pattern_cache$8210 $auto$fsm_map.cc:118:implement_pattern_cache$8250 $auto$fsm_map.cc:118:implement_pattern_cache$8254 $auto$fsm_map.cc:118:implement_pattern_cache$8274 $auto$fsm_map.cc:118:implement_pattern_cache$8270 $auto$fsm_map.cc:118:implement_pattern_cache$8266 $auto$fsm_map.cc:118:implement_pattern_cache$8278 $auto$fsm_map.cc:118:implement_pattern_cache$8258 $auto$fsm_map.cc:118:implement_pattern_cache$8262 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$8085: { $auto$fsm_map.cc:74:implement_pattern_cache$7831 $auto$fsm_map.cc:74:implement_pattern_cache$7829 $auto$fsm_map.cc:74:implement_pattern_cache$7827 $auto$fsm_map.cc:118:implement_pattern_cache$7841 $auto$fsm_map.cc:118:implement_pattern_cache$8083 $auto$fsm_map.cc:118:implement_pattern_cache$8079 $auto$fsm_map.cc:118:implement_pattern_cache$8075 $auto$fsm_map.cc:118:implement_pattern_cache$8071 $auto$fsm_map.cc:118:implement_pattern_cache$8067 $auto$fsm_map.cc:118:implement_pattern_cache$8063 $auto$fsm_map.cc:118:implement_pattern_cache$8059 $auto$fsm_map.cc:118:implement_pattern_cache$8055 $auto$fsm_map.cc:118:implement_pattern_cache$8051 $auto$fsm_map.cc:118:implement_pattern_cache$8047 $auto$fsm_map.cc:118:implement_pattern_cache$8041 $auto$fsm_map.cc:118:implement_pattern_cache$8037 $auto$fsm_map.cc:118:implement_pattern_cache$8033 $auto$fsm_map.cc:118:implement_pattern_cache$8029 $auto$fsm_map.cc:118:implement_pattern_cache$8025 $auto$fsm_map.cc:118:implement_pattern_cache$8021 $auto$fsm_map.cc:118:implement_pattern_cache$8017 $auto$fsm_map.cc:118:implement_pattern_cache$8013 $auto$fsm_map.cc:118:implement_pattern_cache$8009 $auto$fsm_map.cc:118:implement_pattern_cache$8005 $auto$fsm_map.cc:118:implement_pattern_cache$7999 $auto$fsm_map.cc:118:implement_pattern_cache$7995 $auto$fsm_map.cc:118:implement_pattern_cache$7991 $auto$fsm_map.cc:118:implement_pattern_cache$7987 $auto$fsm_map.cc:118:implement_pattern_cache$7983 $auto$fsm_map.cc:118:implement_pattern_cache$7979 $auto$fsm_map.cc:118:implement_pattern_cache$7975 $auto$fsm_map.cc:118:implement_pattern_cache$7971 $auto$fsm_map.cc:118:implement_pattern_cache$7967 $auto$fsm_map.cc:118:implement_pattern_cache$7963 $auto$fsm_map.cc:118:implement_pattern_cache$7957 $auto$fsm_map.cc:118:implement_pattern_cache$7953 $auto$fsm_map.cc:118:implement_pattern_cache$7949 $auto$fsm_map.cc:118:implement_pattern_cache$7945 $auto$fsm_map.cc:118:implement_pattern_cache$7941 $auto$fsm_map.cc:118:implement_pattern_cache$7937 $auto$fsm_map.cc:118:implement_pattern_cache$7933 $auto$fsm_map.cc:118:implement_pattern_cache$7929 $auto$fsm_map.cc:118:implement_pattern_cache$7925 $auto$fsm_map.cc:118:implement_pattern_cache$7921 $auto$fsm_map.cc:118:implement_pattern_cache$7915 $auto$fsm_map.cc:118:implement_pattern_cache$7911 $auto$fsm_map.cc:118:implement_pattern_cache$7907 $auto$fsm_map.cc:118:implement_pattern_cache$7903 $auto$fsm_map.cc:118:implement_pattern_cache$7891 $auto$fsm_map.cc:118:implement_pattern_cache$7837 $auto$fsm_map.cc:118:implement_pattern_cache$7887 $auto$fsm_map.cc:74:implement_pattern_cache$7825 $auto$fsm_map.cc:74:implement_pattern_cache$7823 $auto$fsm_map.cc:74:implement_pattern_cache$7821 $auto$fsm_map.cc:118:implement_pattern_cache$7883 $auto$fsm_map.cc:118:implement_pattern_cache$7861 $auto$fsm_map.cc:118:implement_pattern_cache$7895 $auto$fsm_map.cc:118:implement_pattern_cache$7849 $auto$fsm_map.cc:118:implement_pattern_cache$7845 $auto$fsm_map.cc:118:implement_pattern_cache$7857 $auto$fsm_map.cc:118:implement_pattern_cache$7853 $auto$fsm_map.cc:118:implement_pattern_cache$7899 $auto$fsm_map.cc:118:implement_pattern_cache$7879 $auto$fsm_map.cc:118:implement_pattern_cache$7873 $auto$fsm_map.cc:118:implement_pattern_cache$7869 $auto$fsm_map.cc:118:implement_pattern_cache$7865 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$7820: { $auto$fsm_map.cc:118:implement_pattern_cache$7792 $auto$fsm_map.cc:118:implement_pattern_cache$7788 $auto$fsm_map.cc:118:implement_pattern_cache$7784 $auto$fsm_map.cc:118:implement_pattern_cache$7780 $auto$fsm_map.cc:118:implement_pattern_cache$7776 $auto$fsm_map.cc:118:implement_pattern_cache$7772 $auto$fsm_map.cc:118:implement_pattern_cache$7768 $auto$fsm_map.cc:74:implement_pattern_cache$7818 $auto$fsm_map.cc:74:implement_pattern_cache$7816 $auto$fsm_map.cc:74:implement_pattern_cache$7814 $auto$fsm_map.cc:118:implement_pattern_cache$7812 $auto$fsm_map.cc:118:implement_pattern_cache$7808 $auto$fsm_map.cc:118:implement_pattern_cache$7804 $auto$fsm_map.cc:118:implement_pattern_cache$7800 $auto$fsm_map.cc:118:implement_pattern_cache$7796 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$8046: { \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$8402:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$8405
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$8405 [0]
      New connections: $auto$rtlil.cc:1918:Mux$8405 [15:1] = { $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] $auto$rtlil.cc:1918:Mux$8405 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$8446:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$8366
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$8366 [0]
      New connections: $auto$rtlil.cc:1918:Mux$8366 [15:1] = { $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] $auto$rtlil.cc:1918:Mux$8366 [0] }
    Consolidated identical input bits for $mux cell $techmap\encoderL.$procmux$2663:
      Old ports: A={ \encoderL.encoderCounter [3:2] 1'0 \encoderL.encoderCounter [0] }, B=4'0001, Y=$techmap\encoderL.$procmux$2663_Y
      New ports: A={ \encoderL.encoderCounter [3:2] \encoderL.encoderCounter [0] }, B=3'001, Y={ $techmap\encoderL.$procmux$2663_Y [3:2] $techmap\encoderL.$procmux$2663_Y [0] }
      New connections: $techmap\encoderL.$procmux$2663_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $techmap\encoderR.$procmux$2663:
      Old ports: A={ \encoderR.encoderCounter [3:2] 1'0 \encoderR.encoderCounter [0] }, B=4'0001, Y=$techmap\encoderR.$procmux$2663_Y
      New ports: A={ \encoderR.encoderCounter [3:2] \encoderR.encoderCounter [0] }, B=3'001, Y={ $techmap\encoderR.$procmux$2663_Y [3:2] $techmap\encoderR.$procmux$2663_Y [0] }
      New connections: $techmap\encoderR.$procmux$2663_Y [1] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$3437:
      Old ports: A=\soc.cpu.mem_rdata_word, B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:0] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7:0] }, Y=$techmap\soc.cpu.$procmux$3437_Y
      New ports: A=\soc.cpu.mem_rdata_word [31:8], B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] }, Y=$techmap\soc.cpu.$procmux$3437_Y [31:8]
      New connections: $techmap\soc.cpu.$procmux$3437_Y [7:0] = \soc.cpu.mem_rdata_word [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$3561:
      Old ports: A=\soc.cpu.latched_rd, B={ 1'1 \soc.cpu.latched_rd [4:0] }, Y=$techmap\soc.cpu.$procmux$3561_Y
      New ports: A=\soc.cpu.latched_rd [5], B=1'1, Y=$techmap\soc.cpu.$procmux$3561_Y [5]
      New connections: $techmap\soc.cpu.$procmux$3561_Y [4:0] = \soc.cpu.latched_rd [4:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4504:
      Old ports: A={ \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4504_Y
      New ports: A=\soc.cpu.mem_rdata_latched [31], B=\soc.cpu.mem_rdata_latched [12], Y=$techmap\soc.cpu.$procmux$4504_Y [0]
      New connections: $techmap\soc.cpu.$procmux$4504_Y [11:1] = { $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] $techmap\soc.cpu.$procmux$4504_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4532:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$7237 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7237 [1]
      New connections: $auto$wreduce.cc:454:run$7237 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4692:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$7238 [4:0] }, B={ 1'0 \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4692_Y
      New ports: A=$auto$wreduce.cc:454:run$7238 [4:0], B=\soc.cpu.mem_rdata_latched [6:2], Y=$techmap\soc.cpu.$procmux$4692_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4692_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4710:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4710_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4710_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4710_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4717:
      Old ports: A=\soc.cpu.mem_rdata_latched [19:12], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4717_Y
      New ports: A=\soc.cpu.mem_rdata_latched [19:13], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4717_Y [7:1]
      New connections: $techmap\soc.cpu.$procmux$4717_Y [0] = \soc.cpu.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4725:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$7240 [4:0] }, B=6'000001, Y=$techmap\soc.cpu.$procmux$4725_Y
      New ports: A=$auto$wreduce.cc:454:run$7240 [4:0], B=5'00001, Y=$techmap\soc.cpu.$procmux$4725_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4725_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4742:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4742_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4742_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4742_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4760:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4760_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4760_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4760_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$5377:
      Old ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 4'0000 }, Y=$techmap\soc.cpu.$procmux$5377_Y
      New ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 1'0 }, Y={ $techmap\soc.cpu.$procmux$5377_Y [4] $techmap\soc.cpu.$procmux$5377_Y [0] }
      New connections: $techmap\soc.cpu.$procmux$5377_Y [3:1] = { $techmap\soc.cpu.$procmux$5377_Y [0] $techmap\soc.cpu.$procmux$5377_Y [0] $techmap\soc.cpu.$procmux$5377_Y [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$5544:
      Old ports: A=\soc.cpu.reg_op2, B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata
      New ports: A=\soc.cpu.reg_op2 [31:8], B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata [31:8]
      New connections: \soc.cpu.mem_la_wdata [7:0] = \soc.cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1295$2435:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$7247 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$7247 [2:1]
      New connections: $auto$wreduce.cc:454:run$7247 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1519$2518:
      Old ports: A=2'00, B=2'10, Y=$techmap\soc.cpu.$ternary$picorv32.v:1519$2518_Y
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.$ternary$picorv32.v:1519$2518_Y [1]
      New connections: $techmap\soc.cpu.$ternary$picorv32.v:1519$2518_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1530$2525:
      Old ports: A=3'100, B=3'010, Y=$techmap\soc.cpu.$ternary$picorv32.v:1530$2525_Y [2:0]
      New ports: A=2'10, B=2'01, Y=$techmap\soc.cpu.$ternary$picorv32.v:1530$2525_Y [2:1]
      New connections: $techmap\soc.cpu.$ternary$picorv32.v:1530$2525_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:365$2044:
      Old ports: A={ \soc.cpu.reg_op1 [31:2] 2'00 }, B={ $techmap\soc.cpu.$add$picorv32.v:365$2043_Y 2'00 }, Y=\soc.cpu.mem_la_addr
      New ports: A=\soc.cpu.reg_op1 [31:2], B=$techmap\soc.cpu.$add$picorv32.v:365$2043_Y, Y=\soc.cpu.mem_la_addr [31:2]
      New connections: \soc.cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:394$2059:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\soc.cpu.$ternary$picorv32.v:394$2059_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\soc.cpu.$ternary$picorv32.v:394$2059_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:394$2059_Y [0] }
      New connections: { $techmap\soc.cpu.$ternary$picorv32.v:394$2059_Y [3] $techmap\soc.cpu.$ternary$picorv32.v:394$2059_Y [1] } = { $techmap\soc.cpu.$ternary$picorv32.v:394$2059_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:394$2059_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:474$2077:
      Old ports: A=6'000000, B=6'100000, Y=$auto$wreduce.cc:454:run$7248 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7248 [5]
      New connections: $auto$wreduce.cc:454:run$7248 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:600$2121:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$7249 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$7249 [0]
      New connections: $auto$wreduce.cc:454:run$7249 [1] = $auto$wreduce.cc:454:run$7249 [0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5725:
      Old ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] 3'000 \soc.cpu.pcpi_mul.next_rdt [55] 3'000 \soc.cpu.pcpi_mul.next_rdt [51] 3'000 \soc.cpu.pcpi_mul.next_rdt [47] 3'000 \soc.cpu.pcpi_mul.next_rdt [43] 3'000 \soc.cpu.pcpi_mul.next_rdt [39] 3'000 \soc.cpu.pcpi_mul.next_rdt [35] 3'000 \soc.cpu.pcpi_mul.next_rdt [31] 3'000 \soc.cpu.pcpi_mul.next_rdt [27] 3'000 \soc.cpu.pcpi_mul.next_rdt [23] 3'000 \soc.cpu.pcpi_mul.next_rdt [19] 3'000 \soc.cpu.pcpi_mul.next_rdt [15] 3'000 \soc.cpu.pcpi_mul.next_rdt [11] 3'000 \soc.cpu.pcpi_mul.next_rdt [7] 3'000 \soc.cpu.pcpi_mul.next_rdt [3] 4'0000 }, B=61'0000000000000000000000000000000000000000000000000000000000000, Y=$auto$wreduce.cc:454:run$7252 [60:0]
      New ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] \soc.cpu.pcpi_mul.next_rdt [55] \soc.cpu.pcpi_mul.next_rdt [51] \soc.cpu.pcpi_mul.next_rdt [47] \soc.cpu.pcpi_mul.next_rdt [43] \soc.cpu.pcpi_mul.next_rdt [39] \soc.cpu.pcpi_mul.next_rdt [35] \soc.cpu.pcpi_mul.next_rdt [31] \soc.cpu.pcpi_mul.next_rdt [27] \soc.cpu.pcpi_mul.next_rdt [23] \soc.cpu.pcpi_mul.next_rdt [19] \soc.cpu.pcpi_mul.next_rdt [15] \soc.cpu.pcpi_mul.next_rdt [11] \soc.cpu.pcpi_mul.next_rdt [7] \soc.cpu.pcpi_mul.next_rdt [3] }, B=15'000000000000000, Y={ $auto$wreduce.cc:454:run$7252 [60] $auto$wreduce.cc:454:run$7252 [56] $auto$wreduce.cc:454:run$7252 [52] $auto$wreduce.cc:454:run$7252 [48] $auto$wreduce.cc:454:run$7252 [44] $auto$wreduce.cc:454:run$7252 [40] $auto$wreduce.cc:454:run$7252 [36] $auto$wreduce.cc:454:run$7252 [32] $auto$wreduce.cc:454:run$7252 [28] $auto$wreduce.cc:454:run$7252 [24] $auto$wreduce.cc:454:run$7252 [20] $auto$wreduce.cc:454:run$7252 [16] $auto$wreduce.cc:454:run$7252 [12] $auto$wreduce.cc:454:run$7252 [8] $auto$wreduce.cc:454:run$7252 [4] }
      New connections: { $auto$wreduce.cc:454:run$7252 [59:57] $auto$wreduce.cc:454:run$7252 [55:53] $auto$wreduce.cc:454:run$7252 [51:49] $auto$wreduce.cc:454:run$7252 [47:45] $auto$wreduce.cc:454:run$7252 [43:41] $auto$wreduce.cc:454:run$7252 [39:37] $auto$wreduce.cc:454:run$7252 [35:33] $auto$wreduce.cc:454:run$7252 [31:29] $auto$wreduce.cc:454:run$7252 [27:25] $auto$wreduce.cc:454:run$7252 [23:21] $auto$wreduce.cc:454:run$7252 [19:17] $auto$wreduce.cc:454:run$7252 [15:13] $auto$wreduce.cc:454:run$7252 [11:9] $auto$wreduce.cc:454:run$7252 [7:5] $auto$wreduce.cc:454:run$7252 [3:0] } = 46'0000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5738:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op2 }, B={ \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 }, Y=$auto$wreduce.cc:454:run$7254
      New ports: A=1'0, B=\soc.cpu.reg_op2 [31], Y=$auto$wreduce.cc:454:run$7254 [32]
      New connections: { $auto$wreduce.cc:454:run$7254 [63:33] $auto$wreduce.cc:454:run$7254 [31:0] } = { $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] $auto$wreduce.cc:454:run$7254 [32] \soc.cpu.reg_op2 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5747:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op1 }, B={ \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 }, Y=$auto$wreduce.cc:454:run$7256
      New ports: A=1'0, B=\soc.cpu.reg_op1 [31], Y=$auto$wreduce.cc:454:run$7256 [32]
      New connections: { $auto$wreduce.cc:454:run$7256 [63:33] $auto$wreduce.cc:454:run$7256 [31:0] } = { $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] $auto$wreduce.cc:454:run$7256 [32] \soc.cpu.reg_op1 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$1019:
      Old ports: A=6'011110, B=6'111110, Y=$auto$wreduce.cc:454:run$7259 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7259 [5]
      New connections: $auto$wreduce.cc:454:run$7259 [4:0] = 5'11110
    Consolidated identical input bits for $mux cell $techmap\soc.simpleuart.$ternary$simpleuart.v:53$160:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do [8:0]
      New connections: \soc.simpleuart_reg_dat_do [31:9] = { \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.spimemio.$procmux$6494:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$techmap\soc.spimemio.$procmux$6494_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $techmap\soc.spimemio.$procmux$6494_Y [6] $techmap\soc.spimemio.$procmux$6494_Y [4:1] }
      New connections: { $techmap\soc.spimemio.$procmux$6494_Y [7] $techmap\soc.spimemio.$procmux$6494_Y [5] $techmap\soc.spimemio.$procmux$6494_Y [0] } = { $techmap\soc.spimemio.$procmux$6494_Y [3] $techmap\soc.spimemio.$procmux$6494_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$ternary$spimemio.v:316$105:
      Old ports: A=7'1111111, B=7'0100101, Y=$techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [6:0]
      New ports: A=1'1, B=1'0, Y=$techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [1]
      New connections: { $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [6:2] $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [0] } = { $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [1] 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [1] $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [1] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5989:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$139_Y [3:1] \soc.spimemio.xfer.count [0] }, Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$139_Y [3:1], Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1]
      New connections: $techmap\soc.spimemio.xfer.$5\next_count[3:0] [0] = \soc.spimemio.xfer.count [0]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$6030:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$127_Y [3:2] \soc.spimemio.xfer.count [1:0] }, Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:2], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$127_Y [3:2], Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0] [3:2]
      New connections: $techmap\soc.spimemio.xfer.$4\next_count[3:0] [1:0] = \soc.spimemio.xfer.count [1:0]
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\encoderL.$procmux$2665:
      Old ports: A={ \encoderL.encoderCounter [3:2] 1'0 \encoderL.encoderCounter [0] }, B=$techmap\encoderL.$procmux$2663_Y, Y=$techmap\encoderL.$procmux$2665_Y
      New ports: A={ \encoderL.encoderCounter [3:2] \encoderL.encoderCounter [0] }, B={ $techmap\encoderL.$procmux$2663_Y [3:2] $techmap\encoderL.$procmux$2663_Y [0] }, Y={ $techmap\encoderL.$procmux$2665_Y [3:2] $techmap\encoderL.$procmux$2665_Y [0] }
      New connections: $techmap\encoderL.$procmux$2665_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $techmap\encoderR.$procmux$2665:
      Old ports: A={ \encoderR.encoderCounter [3:2] 1'0 \encoderR.encoderCounter [0] }, B=$techmap\encoderR.$procmux$2663_Y, Y=$techmap\encoderR.$procmux$2665_Y
      New ports: A={ \encoderR.encoderCounter [3:2] \encoderR.encoderCounter [0] }, B={ $techmap\encoderR.$procmux$2663_Y [3:2] $techmap\encoderR.$procmux$2663_Y [0] }, Y={ $techmap\encoderR.$procmux$2665_Y [3:2] $techmap\encoderR.$procmux$2665_Y [0] }
      New connections: $techmap\encoderR.$procmux$2665_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.$ternary$picosoc.v:114$1202:
      Old ports: A=0, B=\soc.simpleuart_reg_dat_do, Y=$techmap\soc.$ternary$picosoc.v:114$1202_Y
      New ports: A=9'000000000, B=\soc.simpleuart_reg_dat_do [8:0], Y=$techmap\soc.$ternary$picosoc.v:114$1202_Y [8:0]
      New connections: $techmap\soc.$ternary$picosoc.v:114$1202_Y [31:9] = { $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] $techmap\soc.$ternary$picosoc.v:114$1202_Y [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4688:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7239 [4:0] $techmap\soc.cpu.$procmux$4692_Y 1'0 \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4688_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7239 [4:0] $techmap\soc.cpu.$procmux$4692_Y [4:0] \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4688_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4688_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4727:
      Old ports: A=$techmap\soc.cpu.$procmux$4725_Y, B={ 1'0 \soc.cpu.mem_rdata_latched [11:7] }, Y=$techmap\soc.cpu.$procmux$4727_Y
      New ports: A=$techmap\soc.cpu.$procmux$4725_Y [4:0], B=\soc.cpu.mem_rdata_latched [11:7], Y=$techmap\soc.cpu.$procmux$4727_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4727_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4744:
      Old ports: A=$techmap\soc.cpu.$procmux$4742_Y, B={ 1'0 $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4744_Y
      New ports: A=$techmap\soc.cpu.$procmux$4742_Y [4:0], B={ $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4744_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4744_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$procmux$6484:
      Old ports: A={ 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [6:0] }, B={ 4'0000 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6484_Y
      New ports: A={ 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [1] $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [1] 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$105_Y [1] 1'1 }, B={ 2'00 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6484_Y [5:0]
      New connections: $techmap\soc.spimemio.$procmux$6484_Y [7:6] = $techmap\soc.spimemio.$procmux$6484_Y [5:4]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$6106:
      Old ports: A=\soc.spimemio.xfer.count, B=$techmap\soc.spimemio.xfer.$5\next_count[3:0], Y=$techmap\soc.spimemio.xfer.$procmux$6106_Y
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1], Y=$techmap\soc.spimemio.xfer.$procmux$6106_Y [3:1]
      New connections: $techmap\soc.spimemio.xfer.$procmux$6106_Y [0] = \soc.spimemio.xfer.count [0]
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\encoderL.$procmux$2667:
      Old ports: A=$techmap\encoderL.$procmux$2665_Y, B=4'0000, Y=$techmap\encoderL.$procmux$2667_Y
      New ports: A={ $techmap\encoderL.$procmux$2665_Y [3:2] $techmap\encoderL.$procmux$2665_Y [0] }, B=3'000, Y={ $techmap\encoderL.$procmux$2667_Y [3:2] $techmap\encoderL.$procmux$2667_Y [0] }
      New connections: $techmap\encoderL.$procmux$2667_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $techmap\encoderR.$procmux$2667:
      Old ports: A=$techmap\encoderR.$procmux$2665_Y, B=4'0000, Y=$techmap\encoderR.$procmux$2667_Y
      New ports: A={ $techmap\encoderR.$procmux$2665_Y [3:2] $techmap\encoderR.$procmux$2665_Y [0] }, B=3'000, Y={ $techmap\encoderR.$procmux$2667_Y [3:2] $techmap\encoderR.$procmux$2667_Y [0] }
      New connections: $techmap\encoderR.$procmux$2667_Y [1] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4729:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7242 [4:0] 1'0 $auto$wreduce.cc:454:run$7241 [4:0] $techmap\soc.cpu.$procmux$4727_Y }, Y=$techmap\soc.cpu.$procmux$4729_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7242 [4:0] $auto$wreduce.cc:454:run$7241 [4:0] $techmap\soc.cpu.$procmux$4727_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4729_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4729_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4746:
      Old ports: A=$techmap\soc.cpu.$procmux$4744_Y, B={ 1'0 $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4746_Y
      New ports: A=$techmap\soc.cpu.$procmux$4744_Y [4:0], B={ $auto$wreduce.cc:454:run$7232 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4746_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4746_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4748:
      Old ports: A=6'000000, B={ 7'0000010 \soc.cpu.mem_rdata_latched [11:7] 1'0 $auto$wreduce.cc:454:run$7243 [4:0] $techmap\soc.cpu.$procmux$4746_Y }, Y=$techmap\soc.cpu.$procmux$4748_Y
      New ports: A=5'00000, B={ 5'00001 \soc.cpu.mem_rdata_latched [11:7] $auto$wreduce.cc:454:run$7243 [4:0] $techmap\soc.cpu.$procmux$4746_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4748_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4748_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4737:
      Old ports: A=6'000000, B={ 1'0 $techmap\soc.cpu.$procmux$4760_Y [4:0] $techmap\soc.cpu.$procmux$4748_Y 1'0 $techmap\soc.cpu.$procmux$4729_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4737_Y
      New ports: A=5'00000, B={ $techmap\soc.cpu.$procmux$4760_Y [4:0] $techmap\soc.cpu.$procmux$4748_Y [4:0] $techmap\soc.cpu.$procmux$4729_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4737_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4737_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4764:
      Old ports: A={ 1'0 \soc.cpu.mem_rdata_latched [11:7] }, B=$techmap\soc.cpu.$procmux$4737_Y, Y=$techmap\soc.cpu.$procmux$4764_Y
      New ports: A=\soc.cpu.mem_rdata_latched [11:7], B=$techmap\soc.cpu.$procmux$4737_Y [4:0], Y=$techmap\soc.cpu.$procmux$4764_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4764_Y [5] = 1'0
  Optimizing cells in module \hardware.
Performed a total of 54 changes.

9.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 6 unused cells and 18 unused wires.
<suppressed ~8 debug messages>

9.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.9. Rerunning OPT passes. (Maybe there is more to do..)

9.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~339 debug messages>

9.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4263:
      Old ports: A=$techmap\soc.cpu.$3\current_pc[31:0], B=$techmap\soc.cpu.$add$picorv32.v:1530$2526_Y, Y=$techmap\soc.cpu.$procmux$4263_Y
      New ports: A=$techmap\soc.cpu.$3\current_pc[31:0] [31:1], B=$techmap\soc.cpu.$add$picorv32.v:1530$2526_Y [31:1], Y=$techmap\soc.cpu.$procmux$4263_Y [31:1]
      New connections: $techmap\soc.cpu.$procmux$4263_Y [0] = $techmap\soc.cpu.$3\current_pc[31:0] [0]
  Optimizing cells in module \hardware.
Performed a total of 1 changes.

9.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

9.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.16. Rerunning OPT passes. (Maybe there is more to do..)

9.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~339 debug messages>

9.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

9.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.23. Finished OPT passes. (There is nothing left to do.)

9.30. Executing ICE40_WRAPCARRY pass (wrap carries).

9.31. Executing TECHMAP pass (map to technology primitives).

9.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

9.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \soc.cpu.pcpi_mul.rd [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [47:44] (4 bits, unsigned)
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=24\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=26\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=63\Y_WIDTH=63 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=13 for cells of type $pmux.
  add \soc.cpu.pcpi_mul.rd [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [39:36] (4 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=23 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=4 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.
<suppressed ~5385 debug messages>

9.32. Executing ICE40_OPT pass (performing simple optimizations).

9.32.1. Running ICE40 specific optimizations.

9.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~5112 debug messages>

9.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~7683 debug messages>
Removed a total of 2561 cells.

9.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 1532 unused cells and 4345 unused wires.
<suppressed ~1533 debug messages>

9.32.6. Rerunning OPT passes. (Removed registers in this run.)

9.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7450.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7450.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7461.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7466.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7450.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7490.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7479.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7519.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7508.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7548.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7537.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7577.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7566.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7598.slice[0].fadd: CO=\clock.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7601.slice[0].fadd: CO=\clock.counterO [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7604.slice[0].fadd: CO=\encoderL.encoderCounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7607.slice[0].fadd: CO=\encoderL.encoderCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7610.slice[0].fadd: CO=\encoderL.encoderCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7613.slice[0].fadd: CO=\encoderR.encoderCounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7616.slice[0].fadd: CO=\encoderR.encoderCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7619.slice[0].fadd: CO=\encoderR.encoderCount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7622.slice[0].fadd: CO=\pwmDB.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7625.slice[0].fadd: CO=\pwmDB.count_temp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7628.slice[0].fadd: CO=\pwmDF.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7631.slice[0].fadd: CO=\pwmDF.count_temp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7634.slice[0].fadd: CO=\pwmIB.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7637.slice[0].fadd: CO=\pwmIB.count_temp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7640.slice[0].fadd: CO=\pwmIF.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7643.slice[0].fadd: CO=\pwmIF.count_temp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7649.slice[0].fadd: CO=\soc.cpu.count_cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7655.slice[0].fadd: CO=\soc.cpu.count_instr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7693.slice[0].fadd: CO=\soc.cpu.pcpi_timeout_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7696.slice[0].fadd: CO=\soc.cpu.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7705.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7705.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7708.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7676.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7711.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7711.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7714.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7714.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7732.slice[0].fadd: CO=\soc.spimemio.rd_addr [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7732.slice[22].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7735.slice[0].fadd: CO=\soc.simpleuart.send_bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7738.slice[0].fadd: CO=\soc.simpleuart.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7741.slice[0].fadd: CO=\soc.simpleuart.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7744.slice[0].fadd: CO=\soc.simpleuart.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7747.slice[0].fadd: CO=\soc.cpu.pcpi_mul.mul_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$14276.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$25957.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$25986.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$25993.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26001.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26008.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26015.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26023.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26048.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26055.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26063.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26090.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26097.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26105.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26112.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$26141.slice[0].fadd: CO=1'0

9.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~130 debug messages>

9.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 10 unused cells and 1 unused wires.
<suppressed ~11 debug messages>

9.32.12. Rerunning OPT passes. (Removed registers in this run.)

9.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7461.slice[1].fadd: CO=$auto$alumacc.cc:474:replace_alu$7450.BB [25]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[1].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[1].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[1].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[1].fadd: CO=1'1

9.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 5 unused cells and 0 unused wires.
<suppressed ~5 debug messages>

9.32.18. Rerunning OPT passes. (Removed registers in this run.)

9.32.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[2].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[2].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[2].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[2].fadd: CO=1'1

9.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

9.32.24. Rerunning OPT passes. (Removed registers in this run.)

9.32.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[3].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[3].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[3].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[3].fadd: CO=1'1

9.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

9.32.30. Rerunning OPT passes. (Removed registers in this run.)

9.32.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[4].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[4].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[4].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[4].fadd: CO=1'1

9.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

9.32.36. Rerunning OPT passes. (Removed registers in this run.)

9.32.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[5].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[5].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[5].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[5].fadd: CO=1'1

9.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

9.32.42. Rerunning OPT passes. (Removed registers in this run.)

9.32.43. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[6].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[6].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[6].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[6].fadd: CO=1'1

9.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

9.32.48. Rerunning OPT passes. (Removed registers in this run.)

9.32.49. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[7].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[7].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[7].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[7].fadd: CO=1'1

9.32.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.52. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

9.32.54. Rerunning OPT passes. (Removed registers in this run.)

9.32.55. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7479.slice[8].fadd: CO=$auto$alumacc.cc:474:replace_alu$7479.BB [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7508.slice[8].fadd: CO=$auto$alumacc.cc:474:replace_alu$7508.BB [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7537.slice[8].fadd: CO=$auto$alumacc.cc:474:replace_alu$7537.BB [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7566.slice[8].fadd: CO=$auto$alumacc.cc:474:replace_alu$7566.BB [8]

9.32.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.58. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

9.32.60. Rerunning OPT passes. (Removed registers in this run.)

9.32.61. Running ICE40 specific optimizations.

9.32.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.64. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.32.66. Finished OPT passes. (There is nothing left to do.)

9.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

9.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module hardware:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10314 to $_DFFE_PP_ for $0\iomem_ready[0:0] -> \iomem_ready.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10315 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [0] -> \iomem_rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10316 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [1] -> \iomem_rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10317 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [2] -> \iomem_rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10318 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [3] -> \iomem_rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10319 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [4] -> \iomem_rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10320 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [5] -> \iomem_rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10321 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [6] -> \iomem_rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10322 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [7] -> \iomem_rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10323 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [8] -> \iomem_rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10324 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [9] -> \iomem_rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10325 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [10] -> \iomem_rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10326 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [11] -> \iomem_rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10327 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [12] -> \iomem_rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10328 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [13] -> \iomem_rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10329 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [14] -> \iomem_rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10330 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [15] -> \iomem_rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10331 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [16] -> \iomem_rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10332 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [17] -> \iomem_rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10333 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [18] -> \iomem_rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10334 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [19] -> \iomem_rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10335 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [20] -> \iomem_rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10336 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [21] -> \iomem_rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10337 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [22] -> \iomem_rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10338 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [23] -> \iomem_rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10339 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [24] -> \iomem_rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10340 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [25] -> \iomem_rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10341 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [26] -> \iomem_rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10342 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [27] -> \iomem_rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10343 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [28] -> \iomem_rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10344 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [29] -> \iomem_rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10345 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [30] -> \iomem_rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10346 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [31] -> \iomem_rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10347 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [0] -> \pwm_connectorIF [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10348 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [1] -> \pwm_connectorIF [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10349 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [2] -> \pwm_connectorIF [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10350 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [3] -> \pwm_connectorIF [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10351 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [4] -> \pwm_connectorIF [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10352 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [5] -> \pwm_connectorIF [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10353 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [6] -> \pwm_connectorIF [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10354 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [7] -> \pwm_connectorIF [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10355 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [8] -> \pwm_connectorIF [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10356 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [9] -> \pwm_connectorIF [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10357 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [10] -> \pwm_connectorIF [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10358 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [11] -> \pwm_connectorIF [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10359 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [12] -> \pwm_connectorIF [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10360 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [13] -> \pwm_connectorIF [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10361 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [14] -> \pwm_connectorIF [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10362 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [15] -> \pwm_connectorIF [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10363 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [16] -> \pwm_connectorIF [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10364 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [17] -> \pwm_connectorIF [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10365 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [18] -> \pwm_connectorIF [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10366 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [19] -> \pwm_connectorIF [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10367 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [20] -> \pwm_connectorIF [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10368 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [21] -> \pwm_connectorIF [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10369 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [22] -> \pwm_connectorIF [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10370 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [23] -> \pwm_connectorIF [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10371 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [24] -> \pwm_connectorIF [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10372 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [25] -> \pwm_connectorIF [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10373 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [26] -> \pwm_connectorIF [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10374 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [27] -> \pwm_connectorIF [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10375 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [28] -> \pwm_connectorIF [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10376 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [29] -> \pwm_connectorIF [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10377 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [30] -> \pwm_connectorIF [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10378 to $_DFFE_PP_ for $0\pwm_connectorIF[31:0] [31] -> \pwm_connectorIF [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10379 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [0] -> \pwm_connectorIB [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10380 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [1] -> \pwm_connectorIB [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10381 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [2] -> \pwm_connectorIB [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10382 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [3] -> \pwm_connectorIB [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10383 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [4] -> \pwm_connectorIB [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10384 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [5] -> \pwm_connectorIB [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10385 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [6] -> \pwm_connectorIB [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10386 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [7] -> \pwm_connectorIB [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10387 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [8] -> \pwm_connectorIB [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10388 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [9] -> \pwm_connectorIB [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10389 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [10] -> \pwm_connectorIB [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10390 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [11] -> \pwm_connectorIB [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10391 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [12] -> \pwm_connectorIB [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10392 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [13] -> \pwm_connectorIB [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10393 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [14] -> \pwm_connectorIB [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10394 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [15] -> \pwm_connectorIB [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10395 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [16] -> \pwm_connectorIB [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10396 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [17] -> \pwm_connectorIB [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10397 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [18] -> \pwm_connectorIB [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10398 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [19] -> \pwm_connectorIB [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10399 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [20] -> \pwm_connectorIB [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10400 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [21] -> \pwm_connectorIB [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10401 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [22] -> \pwm_connectorIB [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10402 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [23] -> \pwm_connectorIB [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10403 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [24] -> \pwm_connectorIB [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10404 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [25] -> \pwm_connectorIB [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10405 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [26] -> \pwm_connectorIB [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10406 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [27] -> \pwm_connectorIB [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10407 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [28] -> \pwm_connectorIB [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10408 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [29] -> \pwm_connectorIB [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10409 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [30] -> \pwm_connectorIB [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10410 to $_DFFE_PP_ for $0\pwm_connectorIB[31:0] [31] -> \pwm_connectorIB [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10411 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [0] -> \pwm_connectorDF [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10412 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [1] -> \pwm_connectorDF [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10413 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [2] -> \pwm_connectorDF [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10414 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [3] -> \pwm_connectorDF [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10415 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [4] -> \pwm_connectorDF [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10416 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [5] -> \pwm_connectorDF [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10417 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [6] -> \pwm_connectorDF [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10418 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [7] -> \pwm_connectorDF [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10419 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [8] -> \pwm_connectorDF [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10420 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [9] -> \pwm_connectorDF [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10421 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [10] -> \pwm_connectorDF [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10422 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [11] -> \pwm_connectorDF [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10423 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [12] -> \pwm_connectorDF [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10424 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [13] -> \pwm_connectorDF [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10425 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [14] -> \pwm_connectorDF [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10426 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [15] -> \pwm_connectorDF [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10427 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [16] -> \pwm_connectorDF [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10428 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [17] -> \pwm_connectorDF [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10429 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [18] -> \pwm_connectorDF [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10430 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [19] -> \pwm_connectorDF [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10431 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [20] -> \pwm_connectorDF [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10432 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [21] -> \pwm_connectorDF [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10433 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [22] -> \pwm_connectorDF [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10434 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [23] -> \pwm_connectorDF [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10435 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [24] -> \pwm_connectorDF [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10436 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [25] -> \pwm_connectorDF [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10437 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [26] -> \pwm_connectorDF [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10438 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [27] -> \pwm_connectorDF [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10439 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [28] -> \pwm_connectorDF [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10440 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [29] -> \pwm_connectorDF [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10441 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [30] -> \pwm_connectorDF [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10442 to $_DFFE_PP_ for $0\pwm_connectorDF[31:0] [31] -> \pwm_connectorDF [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10443 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [0] -> \pwm_connectorDB [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10444 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [1] -> \pwm_connectorDB [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10445 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [2] -> \pwm_connectorDB [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10446 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [3] -> \pwm_connectorDB [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10447 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [4] -> \pwm_connectorDB [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10448 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [5] -> \pwm_connectorDB [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10449 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [6] -> \pwm_connectorDB [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10450 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [7] -> \pwm_connectorDB [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10451 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [8] -> \pwm_connectorDB [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10452 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [9] -> \pwm_connectorDB [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10453 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [10] -> \pwm_connectorDB [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10454 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [11] -> \pwm_connectorDB [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10455 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [12] -> \pwm_connectorDB [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10456 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [13] -> \pwm_connectorDB [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10457 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [14] -> \pwm_connectorDB [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10458 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [15] -> \pwm_connectorDB [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10459 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [16] -> \pwm_connectorDB [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10460 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [17] -> \pwm_connectorDB [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10461 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [18] -> \pwm_connectorDB [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10462 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [19] -> \pwm_connectorDB [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10463 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [20] -> \pwm_connectorDB [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10464 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [21] -> \pwm_connectorDB [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10465 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [22] -> \pwm_connectorDB [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10466 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [23] -> \pwm_connectorDB [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10467 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [24] -> \pwm_connectorDB [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10468 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [25] -> \pwm_connectorDB [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10469 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [26] -> \pwm_connectorDB [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10470 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [27] -> \pwm_connectorDB [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10471 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [28] -> \pwm_connectorDB [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10472 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [29] -> \pwm_connectorDB [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10473 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [30] -> \pwm_connectorDB [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10474 to $_DFFE_PP_ for $0\pwm_connectorDB[31:0] [31] -> \pwm_connectorDB [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10475 to $_DFFE_PP_ for $0\pinTest[31:0] [0] -> \pinTest [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10507 to $_DFFE_PP_ for $0\writeEncoderI[0:0] -> \writeEncoderI.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10508 to $_DFFE_PP_ for $0\writeEncoderD[0:0] -> \writeEncoderD.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10509 to $_DFFE_PP_ for $0\encoderDataI[31:0] [0] -> \encoderDataI [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10510 to $_DFFE_PP_ for $0\encoderDataI[31:0] [1] -> \encoderDataI [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10511 to $_DFFE_PP_ for $0\encoderDataI[31:0] [2] -> \encoderDataI [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10512 to $_DFFE_PP_ for $0\encoderDataI[31:0] [3] -> \encoderDataI [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10513 to $_DFFE_PP_ for $0\encoderDataI[31:0] [4] -> \encoderDataI [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10514 to $_DFFE_PP_ for $0\encoderDataI[31:0] [5] -> \encoderDataI [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10515 to $_DFFE_PP_ for $0\encoderDataI[31:0] [6] -> \encoderDataI [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10516 to $_DFFE_PP_ for $0\encoderDataI[31:0] [7] -> \encoderDataI [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10517 to $_DFFE_PP_ for $0\encoderDataI[31:0] [8] -> \encoderDataI [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10518 to $_DFFE_PP_ for $0\encoderDataI[31:0] [9] -> \encoderDataI [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10519 to $_DFFE_PP_ for $0\encoderDataI[31:0] [10] -> \encoderDataI [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10520 to $_DFFE_PP_ for $0\encoderDataI[31:0] [11] -> \encoderDataI [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10521 to $_DFFE_PP_ for $0\encoderDataI[31:0] [12] -> \encoderDataI [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10522 to $_DFFE_PP_ for $0\encoderDataI[31:0] [13] -> \encoderDataI [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10523 to $_DFFE_PP_ for $0\encoderDataI[31:0] [14] -> \encoderDataI [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10524 to $_DFFE_PP_ for $0\encoderDataI[31:0] [15] -> \encoderDataI [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10525 to $_DFFE_PP_ for $0\encoderDataI[31:0] [16] -> \encoderDataI [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10526 to $_DFFE_PP_ for $0\encoderDataI[31:0] [17] -> \encoderDataI [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10527 to $_DFFE_PP_ for $0\encoderDataI[31:0] [18] -> \encoderDataI [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10528 to $_DFFE_PP_ for $0\encoderDataI[31:0] [19] -> \encoderDataI [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10529 to $_DFFE_PP_ for $0\encoderDataI[31:0] [20] -> \encoderDataI [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10530 to $_DFFE_PP_ for $0\encoderDataI[31:0] [21] -> \encoderDataI [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10531 to $_DFFE_PP_ for $0\encoderDataI[31:0] [22] -> \encoderDataI [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10532 to $_DFFE_PP_ for $0\encoderDataI[31:0] [23] -> \encoderDataI [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10533 to $_DFFE_PP_ for $0\encoderDataI[31:0] [24] -> \encoderDataI [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10534 to $_DFFE_PP_ for $0\encoderDataI[31:0] [25] -> \encoderDataI [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10535 to $_DFFE_PP_ for $0\encoderDataI[31:0] [26] -> \encoderDataI [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10536 to $_DFFE_PP_ for $0\encoderDataI[31:0] [27] -> \encoderDataI [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10537 to $_DFFE_PP_ for $0\encoderDataI[31:0] [28] -> \encoderDataI [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10538 to $_DFFE_PP_ for $0\encoderDataI[31:0] [29] -> \encoderDataI [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10539 to $_DFFE_PP_ for $0\encoderDataI[31:0] [30] -> \encoderDataI [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10540 to $_DFFE_PP_ for $0\encoderDataI[31:0] [31] -> \encoderDataI [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10541 to $_DFFE_PP_ for $0\encoderDataD[31:0] [0] -> \encoderDataD [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10542 to $_DFFE_PP_ for $0\encoderDataD[31:0] [1] -> \encoderDataD [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10543 to $_DFFE_PP_ for $0\encoderDataD[31:0] [2] -> \encoderDataD [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10544 to $_DFFE_PP_ for $0\encoderDataD[31:0] [3] -> \encoderDataD [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10545 to $_DFFE_PP_ for $0\encoderDataD[31:0] [4] -> \encoderDataD [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10546 to $_DFFE_PP_ for $0\encoderDataD[31:0] [5] -> \encoderDataD [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10547 to $_DFFE_PP_ for $0\encoderDataD[31:0] [6] -> \encoderDataD [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10548 to $_DFFE_PP_ for $0\encoderDataD[31:0] [7] -> \encoderDataD [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10549 to $_DFFE_PP_ for $0\encoderDataD[31:0] [8] -> \encoderDataD [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10550 to $_DFFE_PP_ for $0\encoderDataD[31:0] [9] -> \encoderDataD [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10551 to $_DFFE_PP_ for $0\encoderDataD[31:0] [10] -> \encoderDataD [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10552 to $_DFFE_PP_ for $0\encoderDataD[31:0] [11] -> \encoderDataD [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10553 to $_DFFE_PP_ for $0\encoderDataD[31:0] [12] -> \encoderDataD [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10554 to $_DFFE_PP_ for $0\encoderDataD[31:0] [13] -> \encoderDataD [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10555 to $_DFFE_PP_ for $0\encoderDataD[31:0] [14] -> \encoderDataD [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10556 to $_DFFE_PP_ for $0\encoderDataD[31:0] [15] -> \encoderDataD [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10557 to $_DFFE_PP_ for $0\encoderDataD[31:0] [16] -> \encoderDataD [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10558 to $_DFFE_PP_ for $0\encoderDataD[31:0] [17] -> \encoderDataD [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10559 to $_DFFE_PP_ for $0\encoderDataD[31:0] [18] -> \encoderDataD [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10560 to $_DFFE_PP_ for $0\encoderDataD[31:0] [19] -> \encoderDataD [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10561 to $_DFFE_PP_ for $0\encoderDataD[31:0] [20] -> \encoderDataD [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10562 to $_DFFE_PP_ for $0\encoderDataD[31:0] [21] -> \encoderDataD [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10563 to $_DFFE_PP_ for $0\encoderDataD[31:0] [22] -> \encoderDataD [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10564 to $_DFFE_PP_ for $0\encoderDataD[31:0] [23] -> \encoderDataD [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10565 to $_DFFE_PP_ for $0\encoderDataD[31:0] [24] -> \encoderDataD [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10566 to $_DFFE_PP_ for $0\encoderDataD[31:0] [25] -> \encoderDataD [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10567 to $_DFFE_PP_ for $0\encoderDataD[31:0] [26] -> \encoderDataD [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10568 to $_DFFE_PP_ for $0\encoderDataD[31:0] [27] -> \encoderDataD [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10569 to $_DFFE_PP_ for $0\encoderDataD[31:0] [28] -> \encoderDataD [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10570 to $_DFFE_PP_ for $0\encoderDataD[31:0] [29] -> \encoderDataD [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10571 to $_DFFE_PP_ for $0\encoderDataD[31:0] [30] -> \encoderDataD [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10572 to $_DFFE_PP_ for $0\encoderDataD[31:0] [31] -> \encoderDataD [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10579 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [0] -> \pwmIF.count_temp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10580 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [1] -> \pwmIF.count_temp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10581 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [2] -> \pwmIF.count_temp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10582 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [3] -> \pwmIF.count_temp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10583 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [4] -> \pwmIF.count_temp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10584 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [5] -> \pwmIF.count_temp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10585 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [6] -> \pwmIF.count_temp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10586 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [7] -> \pwmIF.count_temp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10587 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [8] -> \pwmIF.count_temp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10588 to $_DFFE_PP_ for $techmap\pwmIF.$0\count_temp[9:0] [9] -> \pwmIF.count_temp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10775 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [0] -> \pwmIB.count_temp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10776 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [1] -> \pwmIB.count_temp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10777 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [2] -> \pwmIB.count_temp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10778 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [3] -> \pwmIB.count_temp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10779 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [4] -> \pwmIB.count_temp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10780 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [5] -> \pwmIB.count_temp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10781 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [6] -> \pwmIB.count_temp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10782 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [7] -> \pwmIB.count_temp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10783 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [8] -> \pwmIB.count_temp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10784 to $_DFFE_PP_ for $techmap\pwmIB.$0\count_temp[9:0] [9] -> \pwmIB.count_temp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10930 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [0] -> \pwmDF.count_temp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10931 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [1] -> \pwmDF.count_temp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10932 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [2] -> \pwmDF.count_temp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10933 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [3] -> \pwmDF.count_temp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10934 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [4] -> \pwmDF.count_temp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10935 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [5] -> \pwmDF.count_temp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10936 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [6] -> \pwmDF.count_temp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10937 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [7] -> \pwmDF.count_temp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10938 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [8] -> \pwmDF.count_temp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10939 to $_DFFE_PP_ for $techmap\pwmDF.$0\count_temp[9:0] [9] -> \pwmDF.count_temp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11090 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [0] -> \pwmDB.count_temp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11091 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [1] -> \pwmDB.count_temp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11092 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [2] -> \pwmDB.count_temp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11093 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [3] -> \pwmDB.count_temp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11094 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [4] -> \pwmDB.count_temp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11095 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [5] -> \pwmDB.count_temp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11096 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [6] -> \pwmDB.count_temp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11097 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [7] -> \pwmDB.count_temp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11098 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [8] -> \pwmDB.count_temp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11099 to $_DFFE_PP_ for $techmap\pwmDB.$0\count_temp[9:0] [9] -> \pwmDB.count_temp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11242 to $_DFFE_PP_ for $techmap\encoderL.$0\pinEncoderFPrev[0:0] -> \encoderL.pinEncoderFPrev.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11243 to $_DFFE_PP_ for $techmap\encoderL.$0\encoderCounter[3:0] [0] -> \encoderL.encoderCounter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11245 to $_DFFE_PP_ for $techmap\encoderL.$0\encoderCounter[3:0] [2] -> \encoderL.encoderCounter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11246 to $_DFFE_PP_ for $techmap\encoderL.$0\encoderCounter[3:0] [3] -> \encoderL.encoderCounter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11467 to $_DFFE_PP_ for $techmap\encoderR.$0\pinEncoderFPrev[0:0] -> \encoderR.pinEncoderFPrev.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11468 to $_DFFE_PP_ for $techmap\encoderR.$0\encoderCounter[3:0] [0] -> \encoderR.encoderCounter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11470 to $_DFFE_PP_ for $techmap\encoderR.$0\encoderCounter[3:0] [2] -> \encoderR.encoderCounter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11471 to $_DFFE_PP_ for $techmap\encoderR.$0\encoderCounter[3:0] [3] -> \encoderR.encoderCounter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15172 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [0] -> \soc.cpu.mem_rdata_q [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15173 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [1] -> \soc.cpu.mem_rdata_q [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15174 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [2] -> \soc.cpu.mem_rdata_q [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15175 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [3] -> \soc.cpu.mem_rdata_q [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15176 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [4] -> \soc.cpu.mem_rdata_q [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15177 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [5] -> \soc.cpu.mem_rdata_q [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15178 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [6] -> \soc.cpu.mem_rdata_q [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15204 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [0] -> \soc.cpu.mem_16bit_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15205 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [1] -> \soc.cpu.mem_16bit_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15206 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [2] -> \soc.cpu.mem_16bit_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15207 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [3] -> \soc.cpu.mem_16bit_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15208 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [4] -> \soc.cpu.mem_16bit_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15209 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [5] -> \soc.cpu.mem_16bit_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15210 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [6] -> \soc.cpu.mem_16bit_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15211 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [7] -> \soc.cpu.mem_16bit_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15212 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [8] -> \soc.cpu.mem_16bit_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15213 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [9] -> \soc.cpu.mem_16bit_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15214 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [10] -> \soc.cpu.mem_16bit_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15215 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [11] -> \soc.cpu.mem_16bit_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15216 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [12] -> \soc.cpu.mem_16bit_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15217 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [13] -> \soc.cpu.mem_16bit_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15218 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [14] -> \soc.cpu.mem_16bit_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15219 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [15] -> \soc.cpu.mem_16bit_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15220 to $_DFFE_PP_ for $techmap\soc.cpu.$0\prefetched_high_word[0:0] -> \soc.cpu.prefetched_high_word.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15221 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_la_secondword[0:0] -> \soc.cpu.mem_la_secondword.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15222 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [0] -> \soc.cpu.mem_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15223 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [1] -> \soc.cpu.mem_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15224 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [0] -> \soc.cpu.mem_wstrb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15225 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [1] -> \soc.cpu.mem_wstrb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15226 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [2] -> \soc.cpu.mem_wstrb [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15227 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [3] -> \soc.cpu.mem_wstrb [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15228 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [0] -> \soc.cpu.mem_wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15229 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [1] -> \soc.cpu.mem_wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15230 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [2] -> \soc.cpu.mem_wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15231 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [3] -> \soc.cpu.mem_wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15232 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [4] -> \soc.cpu.mem_wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15233 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [5] -> \soc.cpu.mem_wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15234 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [6] -> \soc.cpu.mem_wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15235 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [7] -> \soc.cpu.mem_wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15236 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [8] -> \soc.cpu.mem_wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15237 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [9] -> \soc.cpu.mem_wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15238 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [10] -> \soc.cpu.mem_wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15239 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [11] -> \soc.cpu.mem_wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15240 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [12] -> \soc.cpu.mem_wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15241 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [13] -> \soc.cpu.mem_wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15242 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [14] -> \soc.cpu.mem_wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15243 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [15] -> \soc.cpu.mem_wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15244 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [16] -> \soc.cpu.mem_wdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15245 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [17] -> \soc.cpu.mem_wdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15246 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [18] -> \soc.cpu.mem_wdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15247 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [19] -> \soc.cpu.mem_wdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15248 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [20] -> \soc.cpu.mem_wdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15249 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [21] -> \soc.cpu.mem_wdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15250 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [22] -> \soc.cpu.mem_wdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15251 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [23] -> \soc.cpu.mem_wdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15252 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [24] -> \soc.cpu.mem_wdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15253 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [25] -> \soc.cpu.mem_wdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15254 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [26] -> \soc.cpu.mem_wdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15255 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [27] -> \soc.cpu.mem_wdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15256 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [28] -> \soc.cpu.mem_wdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15257 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [29] -> \soc.cpu.mem_wdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15258 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [30] -> \soc.cpu.mem_wdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15259 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [31] -> \soc.cpu.mem_wdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15260 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [0] -> \soc.cpu.mem_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15261 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [1] -> \soc.cpu.mem_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15262 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [2] -> \soc.cpu.mem_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15263 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [3] -> \soc.cpu.mem_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15264 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [4] -> \soc.cpu.mem_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15265 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [5] -> \soc.cpu.mem_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15266 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [6] -> \soc.cpu.mem_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15267 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [7] -> \soc.cpu.mem_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15268 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [8] -> \soc.cpu.mem_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15269 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [9] -> \soc.cpu.mem_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15270 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [10] -> \soc.cpu.mem_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15271 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [11] -> \soc.cpu.mem_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15272 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [12] -> \soc.cpu.mem_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15273 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [13] -> \soc.cpu.mem_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15274 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [14] -> \soc.cpu.mem_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15275 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [15] -> \soc.cpu.mem_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15276 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [16] -> \soc.cpu.mem_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15277 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [17] -> \soc.cpu.mem_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15278 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [18] -> \soc.cpu.mem_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15279 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [19] -> \soc.cpu.mem_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15280 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [20] -> \soc.cpu.mem_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15281 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [21] -> \soc.cpu.mem_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15282 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [22] -> \soc.cpu.mem_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15283 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [23] -> \soc.cpu.mem_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15284 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [24] -> \soc.cpu.mem_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15285 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [25] -> \soc.cpu.mem_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15286 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [26] -> \soc.cpu.mem_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15287 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [27] -> \soc.cpu.mem_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15288 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [28] -> \soc.cpu.mem_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15289 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [29] -> \soc.cpu.mem_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15290 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [30] -> \soc.cpu.mem_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15291 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [31] -> \soc.cpu.mem_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15292 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_valid[0:0] -> \soc.cpu.mem_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15294 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_reg[0:0] -> \soc.cpu.is_alu_reg_reg.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15295 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_imm[0:0] -> \soc.cpu.is_alu_reg_imm.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15296 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_beq_bne_blt_bge_bltu_bgeu[0:0] -> \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15299 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_sb_sh_sw[0:0] -> \soc.cpu.is_sb_sh_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15300 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0] -> \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15301 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_slli_srli_srai[0:0] -> \soc.cpu.is_slli_srli_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15302 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_lb_lh_lw_lbu_lhu[0:0] -> \soc.cpu.is_lb_lh_lw_lbu_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15304 to $_DFFE_PP_ for $techmap\soc.cpu.$0\compressed_instr[0:0] -> \soc.cpu.compressed_instr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15305 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [0] -> \soc.cpu.decoded_imm_uj [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15306 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [1] -> \soc.cpu.decoded_imm_uj [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15307 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [2] -> \soc.cpu.decoded_imm_uj [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15308 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [3] -> \soc.cpu.decoded_imm_uj [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15309 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [4] -> \soc.cpu.decoded_imm_uj [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15310 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [5] -> \soc.cpu.decoded_imm_uj [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15311 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [6] -> \soc.cpu.decoded_imm_uj [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15312 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [7] -> \soc.cpu.decoded_imm_uj [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15313 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [8] -> \soc.cpu.decoded_imm_uj [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15314 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [9] -> \soc.cpu.decoded_imm_uj [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15315 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [10] -> \soc.cpu.decoded_imm_uj [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15316 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [11] -> \soc.cpu.decoded_imm_uj [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15317 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [12] -> \soc.cpu.decoded_imm_uj [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15318 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [13] -> \soc.cpu.decoded_imm_uj [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15319 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [14] -> \soc.cpu.decoded_imm_uj [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15320 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [15] -> \soc.cpu.decoded_imm_uj [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15321 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [16] -> \soc.cpu.decoded_imm_uj [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15322 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [17] -> \soc.cpu.decoded_imm_uj [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15323 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [18] -> \soc.cpu.decoded_imm_uj [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15324 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [19] -> \soc.cpu.decoded_imm_uj [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15325 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [20] -> \soc.cpu.decoded_imm_uj [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15326 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [21] -> \soc.cpu.decoded_imm_uj [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15327 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [22] -> \soc.cpu.decoded_imm_uj [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15328 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [23] -> \soc.cpu.decoded_imm_uj [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15329 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [24] -> \soc.cpu.decoded_imm_uj [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15330 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [25] -> \soc.cpu.decoded_imm_uj [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15331 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [26] -> \soc.cpu.decoded_imm_uj [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15332 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [27] -> \soc.cpu.decoded_imm_uj [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15333 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [28] -> \soc.cpu.decoded_imm_uj [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15334 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [29] -> \soc.cpu.decoded_imm_uj [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15335 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [30] -> \soc.cpu.decoded_imm_uj [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15336 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [31] -> \soc.cpu.decoded_imm_uj [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15337 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [0] -> \soc.cpu.decoded_imm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15338 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [1] -> \soc.cpu.decoded_imm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15339 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [2] -> \soc.cpu.decoded_imm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15340 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [3] -> \soc.cpu.decoded_imm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15341 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [4] -> \soc.cpu.decoded_imm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15342 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [5] -> \soc.cpu.decoded_imm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15343 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [6] -> \soc.cpu.decoded_imm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15344 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [7] -> \soc.cpu.decoded_imm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15345 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [8] -> \soc.cpu.decoded_imm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15346 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [9] -> \soc.cpu.decoded_imm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15347 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [10] -> \soc.cpu.decoded_imm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15348 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [11] -> \soc.cpu.decoded_imm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15349 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [12] -> \soc.cpu.decoded_imm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15350 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [13] -> \soc.cpu.decoded_imm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15351 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [14] -> \soc.cpu.decoded_imm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15352 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [15] -> \soc.cpu.decoded_imm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15353 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [16] -> \soc.cpu.decoded_imm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15354 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [17] -> \soc.cpu.decoded_imm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15355 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [18] -> \soc.cpu.decoded_imm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15356 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [19] -> \soc.cpu.decoded_imm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15357 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [20] -> \soc.cpu.decoded_imm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15358 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [21] -> \soc.cpu.decoded_imm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15359 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [22] -> \soc.cpu.decoded_imm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15360 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [23] -> \soc.cpu.decoded_imm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15361 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [24] -> \soc.cpu.decoded_imm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15362 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [25] -> \soc.cpu.decoded_imm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15363 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [26] -> \soc.cpu.decoded_imm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15364 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [27] -> \soc.cpu.decoded_imm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15365 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [28] -> \soc.cpu.decoded_imm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15366 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [29] -> \soc.cpu.decoded_imm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15367 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [30] -> \soc.cpu.decoded_imm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15368 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [31] -> \soc.cpu.decoded_imm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15374 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rs2[5:0] [5] -> \soc.cpu.decoded_rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15380 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rs1[5:0] [5] -> \soc.cpu.decoded_rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15381 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [0] -> \soc.cpu.decoded_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15382 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [1] -> \soc.cpu.decoded_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15383 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [2] -> \soc.cpu.decoded_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15384 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [3] -> \soc.cpu.decoded_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15385 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [4] -> \soc.cpu.decoded_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15386 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [5] -> \soc.cpu.decoded_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15387 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_timer[0:0] -> \soc.cpu.instr_timer.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15388 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_waitirq[0:0] -> \soc.cpu.instr_waitirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15389 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_maskirq[0:0] -> \soc.cpu.instr_maskirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15390 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_retirq[0:0] -> \soc.cpu.instr_retirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15391 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_setq[0:0] -> \soc.cpu.instr_setq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15392 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_getq[0:0] -> \soc.cpu.instr_getq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15393 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ecall_ebreak[0:0] -> \soc.cpu.instr_ecall_ebreak.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15394 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstrh[0:0] -> \soc.cpu.instr_rdinstrh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15395 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstr[0:0] -> \soc.cpu.instr_rdinstr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15396 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycleh[0:0] -> \soc.cpu.instr_rdcycleh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15397 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycle[0:0] -> \soc.cpu.instr_rdcycle.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15398 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_and[0:0] -> \soc.cpu.instr_and.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15399 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_or[0:0] -> \soc.cpu.instr_or.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15400 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sra[0:0] -> \soc.cpu.instr_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15401 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srl[0:0] -> \soc.cpu.instr_srl.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15402 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xor[0:0] -> \soc.cpu.instr_xor.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15403 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltu[0:0] -> \soc.cpu.instr_sltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15404 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slt[0:0] -> \soc.cpu.instr_slt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15405 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sll[0:0] -> \soc.cpu.instr_sll.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15406 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sub[0:0] -> \soc.cpu.instr_sub.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15407 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_add[0:0] -> \soc.cpu.instr_add.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15408 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srai[0:0] -> \soc.cpu.instr_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15409 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srli[0:0] -> \soc.cpu.instr_srli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15410 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slli[0:0] -> \soc.cpu.instr_slli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15411 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_andi[0:0] -> \soc.cpu.instr_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15412 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ori[0:0] -> \soc.cpu.instr_ori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15413 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xori[0:0] -> \soc.cpu.instr_xori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15414 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltiu[0:0] -> \soc.cpu.instr_sltiu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15415 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slti[0:0] -> \soc.cpu.instr_slti.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15416 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_addi[0:0] -> \soc.cpu.instr_addi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15417 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sw[0:0] -> \soc.cpu.instr_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15418 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sh[0:0] -> \soc.cpu.instr_sh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15419 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sb[0:0] -> \soc.cpu.instr_sb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15420 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lhu[0:0] -> \soc.cpu.instr_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15421 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lbu[0:0] -> \soc.cpu.instr_lbu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15422 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lw[0:0] -> \soc.cpu.instr_lw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15423 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lh[0:0] -> \soc.cpu.instr_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15424 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lb[0:0] -> \soc.cpu.instr_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15425 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bgeu[0:0] -> \soc.cpu.instr_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15426 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bltu[0:0] -> \soc.cpu.instr_bltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15427 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bge[0:0] -> \soc.cpu.instr_bge.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15428 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_blt[0:0] -> \soc.cpu.instr_blt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15429 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bne[0:0] -> \soc.cpu.instr_bne.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15430 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_beq[0:0] -> \soc.cpu.instr_beq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15431 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jalr[0:0] -> \soc.cpu.instr_jalr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15432 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jal[0:0] -> \soc.cpu.instr_jal.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15433 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_auipc[0:0] -> \soc.cpu.instr_auipc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15434 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lui[0:0] -> \soc.cpu.instr_lui.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15435 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [0] -> \soc.cpu.pcpi_insn [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15436 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [1] -> \soc.cpu.pcpi_insn [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15437 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [2] -> \soc.cpu.pcpi_insn [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15438 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [3] -> \soc.cpu.pcpi_insn [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15439 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [4] -> \soc.cpu.pcpi_insn [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15440 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [5] -> \soc.cpu.pcpi_insn [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15441 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [6] -> \soc.cpu.pcpi_insn [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15447 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [12] -> \soc.cpu.pcpi_insn [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15448 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [13] -> \soc.cpu.pcpi_insn [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15449 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [14] -> \soc.cpu.pcpi_insn [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15460 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [25] -> \soc.cpu.pcpi_insn [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15461 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [26] -> \soc.cpu.pcpi_insn [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15462 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [27] -> \soc.cpu.pcpi_insn [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15463 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [28] -> \soc.cpu.pcpi_insn [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15464 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [29] -> \soc.cpu.pcpi_insn [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15465 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [30] -> \soc.cpu.pcpi_insn [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15466 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [31] -> \soc.cpu.pcpi_insn [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15502 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [0] -> \soc.cpu.pcpi_timeout_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15503 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [1] -> \soc.cpu.pcpi_timeout_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15504 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [2] -> \soc.cpu.pcpi_timeout_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15505 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [3] -> \soc.cpu.pcpi_timeout_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15506 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [0] -> \soc.cpu.latched_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15507 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [1] -> \soc.cpu.latched_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15508 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [2] -> \soc.cpu.latched_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15509 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [3] -> \soc.cpu.latched_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15510 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [4] -> \soc.cpu.latched_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15511 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [5] -> \soc.cpu.latched_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15512 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lb[0:0] -> \soc.cpu.latched_is_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15513 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lh[0:0] -> \soc.cpu.latched_is_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15514 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_compr[0:0] -> \soc.cpu.latched_compr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15515 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_branch[0:0] -> \soc.cpu.latched_branch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15516 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_stalu[0:0] -> \soc.cpu.latched_stalu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15517 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_store[0:0] -> \soc.cpu.latched_store.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15518 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [0] -> \soc.cpu.irq_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15519 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [1] -> \soc.cpu.irq_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15522 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_wdata[0:0] -> \soc.cpu.mem_do_wdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15523 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rdata[0:0] -> \soc.cpu.mem_do_rdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15524 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rinst[0:0] -> \soc.cpu.mem_do_rinst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15525 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_prefetch[0:0] -> \soc.cpu.mem_do_prefetch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15526 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [0] -> \soc.cpu.mem_wordsize [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15527 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [1] -> \soc.cpu.mem_wordsize [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15561 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [1] -> \soc.cpu.irq_pending [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15563 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [3] -> \soc.cpu.irq_pending [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15564 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [4] -> \soc.cpu.irq_pending [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15565 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [5] -> \soc.cpu.irq_pending [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15566 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [6] -> \soc.cpu.irq_pending [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15567 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [7] -> \soc.cpu.irq_pending [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15568 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [8] -> \soc.cpu.irq_pending [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15569 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [9] -> \soc.cpu.irq_pending [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15570 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [10] -> \soc.cpu.irq_pending [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15571 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [11] -> \soc.cpu.irq_pending [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15572 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [12] -> \soc.cpu.irq_pending [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15573 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [13] -> \soc.cpu.irq_pending [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15574 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [14] -> \soc.cpu.irq_pending [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15575 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [15] -> \soc.cpu.irq_pending [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15576 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [16] -> \soc.cpu.irq_pending [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15577 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [17] -> \soc.cpu.irq_pending [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15578 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [18] -> \soc.cpu.irq_pending [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15579 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [19] -> \soc.cpu.irq_pending [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15580 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [20] -> \soc.cpu.irq_pending [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15581 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [21] -> \soc.cpu.irq_pending [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15582 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [22] -> \soc.cpu.irq_pending [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15583 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [23] -> \soc.cpu.irq_pending [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15584 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [24] -> \soc.cpu.irq_pending [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15585 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [25] -> \soc.cpu.irq_pending [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15586 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [26] -> \soc.cpu.irq_pending [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15587 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [27] -> \soc.cpu.irq_pending [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15588 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [28] -> \soc.cpu.irq_pending [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15589 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [29] -> \soc.cpu.irq_pending [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15590 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [30] -> \soc.cpu.irq_pending [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15591 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [31] -> \soc.cpu.irq_pending [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15592 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [0] -> \soc.cpu.irq_mask [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15593 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [1] -> \soc.cpu.irq_mask [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15594 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [2] -> \soc.cpu.irq_mask [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15595 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [3] -> \soc.cpu.irq_mask [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15596 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [4] -> \soc.cpu.irq_mask [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15597 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [5] -> \soc.cpu.irq_mask [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15598 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [6] -> \soc.cpu.irq_mask [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15599 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [7] -> \soc.cpu.irq_mask [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15600 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [8] -> \soc.cpu.irq_mask [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15601 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [9] -> \soc.cpu.irq_mask [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15602 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [10] -> \soc.cpu.irq_mask [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15603 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [11] -> \soc.cpu.irq_mask [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15604 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [12] -> \soc.cpu.irq_mask [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15605 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [13] -> \soc.cpu.irq_mask [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15606 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [14] -> \soc.cpu.irq_mask [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15607 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [15] -> \soc.cpu.irq_mask [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15608 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [16] -> \soc.cpu.irq_mask [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15609 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [17] -> \soc.cpu.irq_mask [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15610 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [18] -> \soc.cpu.irq_mask [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15611 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [19] -> \soc.cpu.irq_mask [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15612 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [20] -> \soc.cpu.irq_mask [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15613 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [21] -> \soc.cpu.irq_mask [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15614 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [22] -> \soc.cpu.irq_mask [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15615 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [23] -> \soc.cpu.irq_mask [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15616 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [24] -> \soc.cpu.irq_mask [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15617 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [25] -> \soc.cpu.irq_mask [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15618 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [26] -> \soc.cpu.irq_mask [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15619 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [27] -> \soc.cpu.irq_mask [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15620 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [28] -> \soc.cpu.irq_mask [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15621 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [29] -> \soc.cpu.irq_mask [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15622 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [30] -> \soc.cpu.irq_mask [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15623 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [31] -> \soc.cpu.irq_mask [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15624 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_active[0:0] -> \soc.cpu.irq_active.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15625 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_delay[0:0] -> \soc.cpu.irq_delay.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15658 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [0] -> \soc.cpu.reg_op2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15659 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [1] -> \soc.cpu.reg_op2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15660 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [2] -> \soc.cpu.reg_op2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15661 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [3] -> \soc.cpu.reg_op2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15662 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [4] -> \soc.cpu.reg_op2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15663 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [5] -> \soc.cpu.reg_op2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15664 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [6] -> \soc.cpu.reg_op2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15665 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [7] -> \soc.cpu.reg_op2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15666 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [8] -> \soc.cpu.reg_op2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15667 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [9] -> \soc.cpu.reg_op2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15668 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [10] -> \soc.cpu.reg_op2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15669 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [11] -> \soc.cpu.reg_op2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15670 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [12] -> \soc.cpu.reg_op2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15671 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [13] -> \soc.cpu.reg_op2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15672 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [14] -> \soc.cpu.reg_op2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15673 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [15] -> \soc.cpu.reg_op2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15674 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [16] -> \soc.cpu.reg_op2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15675 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [17] -> \soc.cpu.reg_op2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15676 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [18] -> \soc.cpu.reg_op2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15677 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [19] -> \soc.cpu.reg_op2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15678 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [20] -> \soc.cpu.reg_op2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15679 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [21] -> \soc.cpu.reg_op2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15680 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [22] -> \soc.cpu.reg_op2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15681 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [23] -> \soc.cpu.reg_op2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15682 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [24] -> \soc.cpu.reg_op2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15683 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [25] -> \soc.cpu.reg_op2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15684 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [26] -> \soc.cpu.reg_op2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15685 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [27] -> \soc.cpu.reg_op2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15686 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [28] -> \soc.cpu.reg_op2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15687 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [29] -> \soc.cpu.reg_op2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15688 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [30] -> \soc.cpu.reg_op2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15689 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [31] -> \soc.cpu.reg_op2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15690 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [0] -> \soc.cpu.reg_op1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15691 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [1] -> \soc.cpu.reg_op1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15692 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [2] -> \soc.cpu.reg_op1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15693 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [3] -> \soc.cpu.reg_op1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15694 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [4] -> \soc.cpu.reg_op1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15695 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [5] -> \soc.cpu.reg_op1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15696 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [6] -> \soc.cpu.reg_op1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15697 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [7] -> \soc.cpu.reg_op1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15698 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [8] -> \soc.cpu.reg_op1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15699 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [9] -> \soc.cpu.reg_op1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15700 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [10] -> \soc.cpu.reg_op1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15701 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [11] -> \soc.cpu.reg_op1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15702 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [12] -> \soc.cpu.reg_op1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15703 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [13] -> \soc.cpu.reg_op1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15704 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [14] -> \soc.cpu.reg_op1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15705 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [15] -> \soc.cpu.reg_op1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15706 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [16] -> \soc.cpu.reg_op1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15707 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [17] -> \soc.cpu.reg_op1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15708 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [18] -> \soc.cpu.reg_op1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15709 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [19] -> \soc.cpu.reg_op1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15710 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [20] -> \soc.cpu.reg_op1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15711 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [21] -> \soc.cpu.reg_op1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15712 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [22] -> \soc.cpu.reg_op1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15713 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [23] -> \soc.cpu.reg_op1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15714 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [24] -> \soc.cpu.reg_op1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15715 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [25] -> \soc.cpu.reg_op1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15716 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [26] -> \soc.cpu.reg_op1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15717 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [27] -> \soc.cpu.reg_op1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15718 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [28] -> \soc.cpu.reg_op1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15719 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [29] -> \soc.cpu.reg_op1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15720 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [30] -> \soc.cpu.reg_op1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15721 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [31] -> \soc.cpu.reg_op1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15722 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [0] -> \soc.cpu.reg_next_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15723 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [1] -> \soc.cpu.reg_next_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15724 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [2] -> \soc.cpu.reg_next_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15725 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [3] -> \soc.cpu.reg_next_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15726 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [4] -> \soc.cpu.reg_next_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15727 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [5] -> \soc.cpu.reg_next_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15728 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [6] -> \soc.cpu.reg_next_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15729 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [7] -> \soc.cpu.reg_next_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15730 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [8] -> \soc.cpu.reg_next_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15731 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [9] -> \soc.cpu.reg_next_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15732 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [10] -> \soc.cpu.reg_next_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15733 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [11] -> \soc.cpu.reg_next_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15734 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [12] -> \soc.cpu.reg_next_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15735 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [13] -> \soc.cpu.reg_next_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15736 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [14] -> \soc.cpu.reg_next_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15737 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [15] -> \soc.cpu.reg_next_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15738 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [16] -> \soc.cpu.reg_next_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15739 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [17] -> \soc.cpu.reg_next_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15740 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [18] -> \soc.cpu.reg_next_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15741 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [19] -> \soc.cpu.reg_next_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15742 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [20] -> \soc.cpu.reg_next_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15743 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [21] -> \soc.cpu.reg_next_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15744 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [22] -> \soc.cpu.reg_next_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15745 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [23] -> \soc.cpu.reg_next_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15746 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [24] -> \soc.cpu.reg_next_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15747 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [25] -> \soc.cpu.reg_next_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15748 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [26] -> \soc.cpu.reg_next_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15749 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [27] -> \soc.cpu.reg_next_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15750 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [28] -> \soc.cpu.reg_next_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15751 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [29] -> \soc.cpu.reg_next_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15752 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [30] -> \soc.cpu.reg_next_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15753 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [31] -> \soc.cpu.reg_next_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15754 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [0] -> \soc.cpu.reg_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15755 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [1] -> \soc.cpu.reg_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15756 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [2] -> \soc.cpu.reg_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15757 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [3] -> \soc.cpu.reg_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15758 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [4] -> \soc.cpu.reg_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15759 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [5] -> \soc.cpu.reg_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15760 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [6] -> \soc.cpu.reg_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15761 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [7] -> \soc.cpu.reg_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15762 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [8] -> \soc.cpu.reg_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15763 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [9] -> \soc.cpu.reg_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15764 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [10] -> \soc.cpu.reg_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15765 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [11] -> \soc.cpu.reg_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15766 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [12] -> \soc.cpu.reg_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15767 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [13] -> \soc.cpu.reg_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15768 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [14] -> \soc.cpu.reg_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15769 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [15] -> \soc.cpu.reg_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15770 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [16] -> \soc.cpu.reg_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15771 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [17] -> \soc.cpu.reg_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15772 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [18] -> \soc.cpu.reg_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15773 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [19] -> \soc.cpu.reg_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15774 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [20] -> \soc.cpu.reg_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15775 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [21] -> \soc.cpu.reg_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15776 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [22] -> \soc.cpu.reg_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15777 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [23] -> \soc.cpu.reg_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15778 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [24] -> \soc.cpu.reg_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15779 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [25] -> \soc.cpu.reg_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15780 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [26] -> \soc.cpu.reg_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15781 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [27] -> \soc.cpu.reg_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15782 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [28] -> \soc.cpu.reg_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15783 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [29] -> \soc.cpu.reg_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15784 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [30] -> \soc.cpu.reg_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15785 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [31] -> \soc.cpu.reg_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15786 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [0] -> \soc.cpu.count_instr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15787 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [1] -> \soc.cpu.count_instr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15788 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [2] -> \soc.cpu.count_instr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15789 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [3] -> \soc.cpu.count_instr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15790 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [4] -> \soc.cpu.count_instr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15791 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [5] -> \soc.cpu.count_instr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15792 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [6] -> \soc.cpu.count_instr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15793 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [7] -> \soc.cpu.count_instr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15794 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [8] -> \soc.cpu.count_instr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15795 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [9] -> \soc.cpu.count_instr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15796 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [10] -> \soc.cpu.count_instr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15797 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [11] -> \soc.cpu.count_instr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15798 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [12] -> \soc.cpu.count_instr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15799 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [13] -> \soc.cpu.count_instr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15800 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [14] -> \soc.cpu.count_instr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15801 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [15] -> \soc.cpu.count_instr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15802 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [16] -> \soc.cpu.count_instr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15803 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [17] -> \soc.cpu.count_instr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15804 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [18] -> \soc.cpu.count_instr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15805 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [19] -> \soc.cpu.count_instr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15806 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [20] -> \soc.cpu.count_instr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15807 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [21] -> \soc.cpu.count_instr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15808 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [22] -> \soc.cpu.count_instr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15809 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [23] -> \soc.cpu.count_instr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15810 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [24] -> \soc.cpu.count_instr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15811 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [25] -> \soc.cpu.count_instr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15812 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [26] -> \soc.cpu.count_instr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15813 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [27] -> \soc.cpu.count_instr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15814 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [28] -> \soc.cpu.count_instr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15815 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [29] -> \soc.cpu.count_instr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15816 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [30] -> \soc.cpu.count_instr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15817 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [31] -> \soc.cpu.count_instr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15818 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [32] -> \soc.cpu.count_instr [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15819 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [33] -> \soc.cpu.count_instr [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15820 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [34] -> \soc.cpu.count_instr [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15821 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [35] -> \soc.cpu.count_instr [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15822 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [36] -> \soc.cpu.count_instr [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15823 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [37] -> \soc.cpu.count_instr [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15824 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [38] -> \soc.cpu.count_instr [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15825 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [39] -> \soc.cpu.count_instr [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15826 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [40] -> \soc.cpu.count_instr [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15827 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [41] -> \soc.cpu.count_instr [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15828 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [42] -> \soc.cpu.count_instr [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15829 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [43] -> \soc.cpu.count_instr [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15830 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [44] -> \soc.cpu.count_instr [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15831 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [45] -> \soc.cpu.count_instr [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15832 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [46] -> \soc.cpu.count_instr [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15833 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [47] -> \soc.cpu.count_instr [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15834 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [48] -> \soc.cpu.count_instr [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15835 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [49] -> \soc.cpu.count_instr [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15836 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [50] -> \soc.cpu.count_instr [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15837 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [51] -> \soc.cpu.count_instr [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15838 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [52] -> \soc.cpu.count_instr [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15839 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [53] -> \soc.cpu.count_instr [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15840 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [54] -> \soc.cpu.count_instr [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15841 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [55] -> \soc.cpu.count_instr [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15842 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [56] -> \soc.cpu.count_instr [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15843 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [57] -> \soc.cpu.count_instr [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15844 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [58] -> \soc.cpu.count_instr [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15845 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [59] -> \soc.cpu.count_instr [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15846 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [60] -> \soc.cpu.count_instr [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15847 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [61] -> \soc.cpu.count_instr [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15848 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [62] -> \soc.cpu.count_instr [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15849 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [63] -> \soc.cpu.count_instr [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15914 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_valid[0:0] -> \soc.cpu.pcpi_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22168 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [0] -> \soc.simpleuart.cfg_divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22169 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [1] -> \soc.simpleuart.cfg_divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22170 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [2] -> \soc.simpleuart.cfg_divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22171 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [3] -> \soc.simpleuart.cfg_divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22172 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [4] -> \soc.simpleuart.cfg_divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22173 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [5] -> \soc.simpleuart.cfg_divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22174 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [6] -> \soc.simpleuart.cfg_divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22175 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [7] -> \soc.simpleuart.cfg_divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22176 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [8] -> \soc.simpleuart.cfg_divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22177 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [9] -> \soc.simpleuart.cfg_divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22178 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [10] -> \soc.simpleuart.cfg_divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22179 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [11] -> \soc.simpleuart.cfg_divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22180 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [12] -> \soc.simpleuart.cfg_divider [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22181 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [13] -> \soc.simpleuart.cfg_divider [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22182 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [14] -> \soc.simpleuart.cfg_divider [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22183 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [15] -> \soc.simpleuart.cfg_divider [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22184 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [16] -> \soc.simpleuart.cfg_divider [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22185 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [17] -> \soc.simpleuart.cfg_divider [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22186 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [18] -> \soc.simpleuart.cfg_divider [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22187 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [19] -> \soc.simpleuart.cfg_divider [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22188 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [20] -> \soc.simpleuart.cfg_divider [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22189 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [21] -> \soc.simpleuart.cfg_divider [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22190 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [22] -> \soc.simpleuart.cfg_divider [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22191 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [23] -> \soc.simpleuart.cfg_divider [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22192 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [24] -> \soc.simpleuart.cfg_divider [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22193 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [25] -> \soc.simpleuart.cfg_divider [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22194 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [26] -> \soc.simpleuart.cfg_divider [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22195 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [27] -> \soc.simpleuart.cfg_divider [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22196 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [28] -> \soc.simpleuart.cfg_divider [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22197 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [29] -> \soc.simpleuart.cfg_divider [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22198 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [30] -> \soc.simpleuart.cfg_divider [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22199 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [31] -> \soc.simpleuart.cfg_divider [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22201 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [0] -> \soc.simpleuart.recv_buf_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22202 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [1] -> \soc.simpleuart.recv_buf_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22203 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [2] -> \soc.simpleuart.recv_buf_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22204 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [3] -> \soc.simpleuart.recv_buf_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22205 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [4] -> \soc.simpleuart.recv_buf_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22206 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [5] -> \soc.simpleuart.recv_buf_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22207 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [6] -> \soc.simpleuart.recv_buf_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22208 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [7] -> \soc.simpleuart.recv_buf_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22209 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [0] -> \soc.simpleuart.recv_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22210 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [1] -> \soc.simpleuart.recv_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22211 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [2] -> \soc.simpleuart.recv_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22212 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [3] -> \soc.simpleuart.recv_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22213 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [4] -> \soc.simpleuart.recv_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22214 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [5] -> \soc.simpleuart.recv_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22215 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [6] -> \soc.simpleuart.recv_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22216 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [7] -> \soc.simpleuart.recv_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22249 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [0] -> \soc.simpleuart.recv_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22250 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [1] -> \soc.simpleuart.recv_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22251 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [2] -> \soc.simpleuart.recv_state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22252 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [3] -> \soc.simpleuart.recv_state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22253 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_dummy[0:0] -> \soc.simpleuart.send_dummy.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22286 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [0] -> \soc.simpleuart.send_bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22287 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [1] -> \soc.simpleuart.send_bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22288 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [2] -> \soc.simpleuart.send_bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22289 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [3] -> \soc.simpleuart.send_bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22290 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [0] -> \soc.simpleuart.send_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22291 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [1] -> \soc.simpleuart.send_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22292 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [2] -> \soc.simpleuart.send_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22293 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [3] -> \soc.simpleuart.send_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22294 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [4] -> \soc.simpleuart.send_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22295 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [5] -> \soc.simpleuart.send_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22296 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [6] -> \soc.simpleuart.send_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22297 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [7] -> \soc.simpleuart.send_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22298 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [8] -> \soc.simpleuart.send_pattern [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22299 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [9] -> \soc.simpleuart.send_pattern [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23063 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [0] -> \soc.spimemio.config_do [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23064 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [1] -> \soc.spimemio.config_do [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23065 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [2] -> \soc.spimemio.config_do [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23066 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [3] -> \soc.spimemio.config_do [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23067 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_clk[0:0] -> \soc.spimemio.config_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23068 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_csb[0:0] -> \soc.spimemio.config_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23069 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [0] -> \soc.spimemio.config_oe [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23070 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [1] -> \soc.spimemio.config_oe [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23071 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [2] -> \soc.spimemio.config_oe [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23072 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [3] -> \soc.spimemio.config_oe [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23073 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [0] -> \soc.spimemio.config_dummy [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23074 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [1] -> \soc.spimemio.config_dummy [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23075 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [2] -> \soc.spimemio.config_dummy [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23076 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [3] -> \soc.spimemio.config_dummy [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23077 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_cont[0:0] -> \soc.spimemio.config_cont.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23078 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_qspi[0:0] -> \soc.spimemio.config_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23079 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_ddr[0:0] -> \soc.spimemio.config_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23080 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_en[0:0] -> \soc.spimemio.config_en.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23086 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [0] -> \soc.spimemio.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23087 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [1] -> \soc.spimemio.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23088 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [2] -> \soc.spimemio.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23089 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [3] -> \soc.spimemio.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23090 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_inc[0:0] -> \soc.spimemio.rd_inc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23091 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_wait[0:0] -> \soc.spimemio.rd_wait.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23092 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_valid[0:0] -> \soc.spimemio.rd_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23093 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [0] -> \soc.spimemio.rd_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23094 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [1] -> \soc.spimemio.rd_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23095 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [2] -> \soc.spimemio.rd_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23096 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [3] -> \soc.spimemio.rd_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23097 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [4] -> \soc.spimemio.rd_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23098 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [5] -> \soc.spimemio.rd_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23099 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [6] -> \soc.spimemio.rd_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23100 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [7] -> \soc.spimemio.rd_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23101 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [8] -> \soc.spimemio.rd_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23102 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [9] -> \soc.spimemio.rd_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23103 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [10] -> \soc.spimemio.rd_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23104 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [11] -> \soc.spimemio.rd_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23105 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [12] -> \soc.spimemio.rd_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23106 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [13] -> \soc.spimemio.rd_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23107 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [14] -> \soc.spimemio.rd_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23108 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [15] -> \soc.spimemio.rd_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23109 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [16] -> \soc.spimemio.rd_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23110 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [17] -> \soc.spimemio.rd_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23111 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [18] -> \soc.spimemio.rd_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23112 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [19] -> \soc.spimemio.rd_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23113 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [20] -> \soc.spimemio.rd_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23114 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [21] -> \soc.spimemio.rd_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23115 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [22] -> \soc.spimemio.rd_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23116 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [23] -> \soc.spimemio.rd_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23117 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [0] -> \soc.spimemio.buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23118 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [1] -> \soc.spimemio.buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23119 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [2] -> \soc.spimemio.buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23120 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [3] -> \soc.spimemio.buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23121 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [4] -> \soc.spimemio.buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23122 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [5] -> \soc.spimemio.buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23123 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [6] -> \soc.spimemio.buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23124 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [7] -> \soc.spimemio.buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23125 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [8] -> \soc.spimemio.buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23126 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [9] -> \soc.spimemio.buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23127 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [10] -> \soc.spimemio.buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23128 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [11] -> \soc.spimemio.buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23129 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [12] -> \soc.spimemio.buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23130 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [13] -> \soc.spimemio.buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23131 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [14] -> \soc.spimemio.buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23132 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [15] -> \soc.spimemio.buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23133 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [16] -> \soc.spimemio.buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23134 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [17] -> \soc.spimemio.buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23135 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [18] -> \soc.spimemio.buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23136 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [19] -> \soc.spimemio.buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23137 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [20] -> \soc.spimemio.buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23138 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [21] -> \soc.spimemio.buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23139 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [22] -> \soc.spimemio.buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23140 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [23] -> \soc.spimemio.buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23141 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_rd[0:0] -> \soc.spimemio.din_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23144 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [0] -> \soc.spimemio.din_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23145 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [1] -> \soc.spimemio.din_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23146 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [2] -> \soc.spimemio.din_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23147 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [3] -> \soc.spimemio.din_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23148 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [0] -> \soc.spimemio.din_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23149 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [1] -> \soc.spimemio.din_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23150 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [2] -> \soc.spimemio.din_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23151 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [3] -> \soc.spimemio.din_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23152 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [4] -> \soc.spimemio.din_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23153 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [5] -> \soc.spimemio.din_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23154 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [6] -> \soc.spimemio.din_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23155 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [7] -> \soc.spimemio.din_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23158 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [0] -> \soc.spimemio.rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23159 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [1] -> \soc.spimemio.rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23160 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [2] -> \soc.spimemio.rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23161 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [3] -> \soc.spimemio.rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23162 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [4] -> \soc.spimemio.rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23163 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [5] -> \soc.spimemio.rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23164 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [6] -> \soc.spimemio.rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23165 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [7] -> \soc.spimemio.rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23166 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [8] -> \soc.spimemio.rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23167 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [9] -> \soc.spimemio.rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23168 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [10] -> \soc.spimemio.rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23169 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [11] -> \soc.spimemio.rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23170 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [12] -> \soc.spimemio.rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23171 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [13] -> \soc.spimemio.rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23172 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [14] -> \soc.spimemio.rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23173 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [15] -> \soc.spimemio.rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23174 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [16] -> \soc.spimemio.rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23175 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [17] -> \soc.spimemio.rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23176 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [18] -> \soc.spimemio.rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23177 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [19] -> \soc.spimemio.rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23178 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [20] -> \soc.spimemio.rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23179 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [21] -> \soc.spimemio.rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23180 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [22] -> \soc.spimemio.rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23181 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [23] -> \soc.spimemio.rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23182 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [24] -> \soc.spimemio.rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23183 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [25] -> \soc.spimemio.rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23184 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [26] -> \soc.spimemio.rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23185 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [27] -> \soc.spimemio.rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23186 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [28] -> \soc.spimemio.rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23187 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [29] -> \soc.spimemio.rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23188 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [30] -> \soc.spimemio.rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23189 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [31] -> \soc.spimemio.rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23858 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\outsign[0:0] -> \soc.cpu.pcpi_div.outsign.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23859 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\running[0:0] -> \soc.cpu.pcpi_div.running.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23860 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [0] -> \soc.cpu.pcpi_div.quotient_msk [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23861 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [1] -> \soc.cpu.pcpi_div.quotient_msk [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23862 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [2] -> \soc.cpu.pcpi_div.quotient_msk [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23863 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [3] -> \soc.cpu.pcpi_div.quotient_msk [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23864 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [4] -> \soc.cpu.pcpi_div.quotient_msk [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23865 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [5] -> \soc.cpu.pcpi_div.quotient_msk [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23866 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [6] -> \soc.cpu.pcpi_div.quotient_msk [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23867 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [7] -> \soc.cpu.pcpi_div.quotient_msk [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23868 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [8] -> \soc.cpu.pcpi_div.quotient_msk [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23869 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [9] -> \soc.cpu.pcpi_div.quotient_msk [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23870 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [10] -> \soc.cpu.pcpi_div.quotient_msk [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23871 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [11] -> \soc.cpu.pcpi_div.quotient_msk [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23872 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [12] -> \soc.cpu.pcpi_div.quotient_msk [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23873 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [13] -> \soc.cpu.pcpi_div.quotient_msk [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23874 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [14] -> \soc.cpu.pcpi_div.quotient_msk [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23875 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [15] -> \soc.cpu.pcpi_div.quotient_msk [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23876 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [16] -> \soc.cpu.pcpi_div.quotient_msk [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23877 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [17] -> \soc.cpu.pcpi_div.quotient_msk [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23878 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [18] -> \soc.cpu.pcpi_div.quotient_msk [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23879 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [19] -> \soc.cpu.pcpi_div.quotient_msk [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23880 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [20] -> \soc.cpu.pcpi_div.quotient_msk [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23881 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [21] -> \soc.cpu.pcpi_div.quotient_msk [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23882 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [22] -> \soc.cpu.pcpi_div.quotient_msk [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23883 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [23] -> \soc.cpu.pcpi_div.quotient_msk [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23884 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [24] -> \soc.cpu.pcpi_div.quotient_msk [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23885 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [25] -> \soc.cpu.pcpi_div.quotient_msk [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23886 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [26] -> \soc.cpu.pcpi_div.quotient_msk [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23887 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [27] -> \soc.cpu.pcpi_div.quotient_msk [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23888 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [28] -> \soc.cpu.pcpi_div.quotient_msk [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23889 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [29] -> \soc.cpu.pcpi_div.quotient_msk [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23890 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [30] -> \soc.cpu.pcpi_div.quotient_msk [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23891 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [31] -> \soc.cpu.pcpi_div.quotient_msk [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23892 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [0] -> \soc.cpu.pcpi_div.quotient [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23893 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [1] -> \soc.cpu.pcpi_div.quotient [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23894 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [2] -> \soc.cpu.pcpi_div.quotient [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23895 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [3] -> \soc.cpu.pcpi_div.quotient [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23896 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [4] -> \soc.cpu.pcpi_div.quotient [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23897 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [5] -> \soc.cpu.pcpi_div.quotient [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23898 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [6] -> \soc.cpu.pcpi_div.quotient [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23899 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [7] -> \soc.cpu.pcpi_div.quotient [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23900 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [8] -> \soc.cpu.pcpi_div.quotient [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23901 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [9] -> \soc.cpu.pcpi_div.quotient [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23902 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [10] -> \soc.cpu.pcpi_div.quotient [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23903 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [11] -> \soc.cpu.pcpi_div.quotient [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23904 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [12] -> \soc.cpu.pcpi_div.quotient [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23905 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [13] -> \soc.cpu.pcpi_div.quotient [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23906 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [14] -> \soc.cpu.pcpi_div.quotient [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23907 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [15] -> \soc.cpu.pcpi_div.quotient [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23908 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [16] -> \soc.cpu.pcpi_div.quotient [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23909 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [17] -> \soc.cpu.pcpi_div.quotient [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23910 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [18] -> \soc.cpu.pcpi_div.quotient [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23911 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [19] -> \soc.cpu.pcpi_div.quotient [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23912 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [20] -> \soc.cpu.pcpi_div.quotient [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23913 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [21] -> \soc.cpu.pcpi_div.quotient [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23914 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [22] -> \soc.cpu.pcpi_div.quotient [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23915 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [23] -> \soc.cpu.pcpi_div.quotient [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23916 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [24] -> \soc.cpu.pcpi_div.quotient [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23917 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [25] -> \soc.cpu.pcpi_div.quotient [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23918 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [26] -> \soc.cpu.pcpi_div.quotient [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23919 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [27] -> \soc.cpu.pcpi_div.quotient [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23920 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [28] -> \soc.cpu.pcpi_div.quotient [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23921 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [29] -> \soc.cpu.pcpi_div.quotient [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23922 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [30] -> \soc.cpu.pcpi_div.quotient [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23923 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [31] -> \soc.cpu.pcpi_div.quotient [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23924 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [0] -> \soc.cpu.pcpi_div.divisor [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23925 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [1] -> \soc.cpu.pcpi_div.divisor [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23926 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [2] -> \soc.cpu.pcpi_div.divisor [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23927 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [3] -> \soc.cpu.pcpi_div.divisor [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23928 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [4] -> \soc.cpu.pcpi_div.divisor [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23929 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [5] -> \soc.cpu.pcpi_div.divisor [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23930 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [6] -> \soc.cpu.pcpi_div.divisor [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23931 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [7] -> \soc.cpu.pcpi_div.divisor [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23932 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [8] -> \soc.cpu.pcpi_div.divisor [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23933 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [9] -> \soc.cpu.pcpi_div.divisor [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23934 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [10] -> \soc.cpu.pcpi_div.divisor [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23935 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [11] -> \soc.cpu.pcpi_div.divisor [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23936 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [12] -> \soc.cpu.pcpi_div.divisor [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23937 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [13] -> \soc.cpu.pcpi_div.divisor [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23938 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [14] -> \soc.cpu.pcpi_div.divisor [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23939 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [15] -> \soc.cpu.pcpi_div.divisor [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23940 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [16] -> \soc.cpu.pcpi_div.divisor [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23941 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [17] -> \soc.cpu.pcpi_div.divisor [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23942 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [18] -> \soc.cpu.pcpi_div.divisor [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23943 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [19] -> \soc.cpu.pcpi_div.divisor [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23944 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [20] -> \soc.cpu.pcpi_div.divisor [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23945 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [21] -> \soc.cpu.pcpi_div.divisor [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23946 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [22] -> \soc.cpu.pcpi_div.divisor [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23947 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [23] -> \soc.cpu.pcpi_div.divisor [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23948 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [24] -> \soc.cpu.pcpi_div.divisor [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23949 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [25] -> \soc.cpu.pcpi_div.divisor [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23950 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [26] -> \soc.cpu.pcpi_div.divisor [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23951 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [27] -> \soc.cpu.pcpi_div.divisor [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23952 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [28] -> \soc.cpu.pcpi_div.divisor [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23953 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [29] -> \soc.cpu.pcpi_div.divisor [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23954 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [30] -> \soc.cpu.pcpi_div.divisor [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23955 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [31] -> \soc.cpu.pcpi_div.divisor [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23956 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [32] -> \soc.cpu.pcpi_div.divisor [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23957 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [33] -> \soc.cpu.pcpi_div.divisor [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23958 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [34] -> \soc.cpu.pcpi_div.divisor [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23959 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [35] -> \soc.cpu.pcpi_div.divisor [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23960 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [36] -> \soc.cpu.pcpi_div.divisor [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23961 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [37] -> \soc.cpu.pcpi_div.divisor [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23962 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [38] -> \soc.cpu.pcpi_div.divisor [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23963 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [39] -> \soc.cpu.pcpi_div.divisor [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23964 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [40] -> \soc.cpu.pcpi_div.divisor [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23965 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [41] -> \soc.cpu.pcpi_div.divisor [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23966 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [42] -> \soc.cpu.pcpi_div.divisor [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23967 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [43] -> \soc.cpu.pcpi_div.divisor [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23968 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [44] -> \soc.cpu.pcpi_div.divisor [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23969 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [45] -> \soc.cpu.pcpi_div.divisor [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23970 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [46] -> \soc.cpu.pcpi_div.divisor [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23971 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [47] -> \soc.cpu.pcpi_div.divisor [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23972 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [48] -> \soc.cpu.pcpi_div.divisor [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23973 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [49] -> \soc.cpu.pcpi_div.divisor [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23974 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [50] -> \soc.cpu.pcpi_div.divisor [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23975 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [51] -> \soc.cpu.pcpi_div.divisor [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23976 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [52] -> \soc.cpu.pcpi_div.divisor [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23977 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [53] -> \soc.cpu.pcpi_div.divisor [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23978 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [54] -> \soc.cpu.pcpi_div.divisor [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23979 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [55] -> \soc.cpu.pcpi_div.divisor [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23980 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [56] -> \soc.cpu.pcpi_div.divisor [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23981 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [57] -> \soc.cpu.pcpi_div.divisor [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23982 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [58] -> \soc.cpu.pcpi_div.divisor [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23983 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [59] -> \soc.cpu.pcpi_div.divisor [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23984 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [60] -> \soc.cpu.pcpi_div.divisor [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23985 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [61] -> \soc.cpu.pcpi_div.divisor [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23986 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [62] -> \soc.cpu.pcpi_div.divisor [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23987 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [0] -> \soc.cpu.pcpi_div.dividend [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23988 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [1] -> \soc.cpu.pcpi_div.dividend [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23989 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [2] -> \soc.cpu.pcpi_div.dividend [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23990 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [3] -> \soc.cpu.pcpi_div.dividend [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23991 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [4] -> \soc.cpu.pcpi_div.dividend [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23992 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [5] -> \soc.cpu.pcpi_div.dividend [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23993 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [6] -> \soc.cpu.pcpi_div.dividend [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23994 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [7] -> \soc.cpu.pcpi_div.dividend [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23995 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [8] -> \soc.cpu.pcpi_div.dividend [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23996 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [9] -> \soc.cpu.pcpi_div.dividend [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23997 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [10] -> \soc.cpu.pcpi_div.dividend [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23998 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [11] -> \soc.cpu.pcpi_div.dividend [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23999 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [12] -> \soc.cpu.pcpi_div.dividend [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24000 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [13] -> \soc.cpu.pcpi_div.dividend [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24001 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [14] -> \soc.cpu.pcpi_div.dividend [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24002 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [15] -> \soc.cpu.pcpi_div.dividend [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24003 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [16] -> \soc.cpu.pcpi_div.dividend [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24004 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [17] -> \soc.cpu.pcpi_div.dividend [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24005 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [18] -> \soc.cpu.pcpi_div.dividend [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24006 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [19] -> \soc.cpu.pcpi_div.dividend [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24007 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [20] -> \soc.cpu.pcpi_div.dividend [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24008 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [21] -> \soc.cpu.pcpi_div.dividend [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24009 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [22] -> \soc.cpu.pcpi_div.dividend [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24010 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [23] -> \soc.cpu.pcpi_div.dividend [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24011 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [24] -> \soc.cpu.pcpi_div.dividend [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24012 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [25] -> \soc.cpu.pcpi_div.dividend [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24013 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [26] -> \soc.cpu.pcpi_div.dividend [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24014 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [27] -> \soc.cpu.pcpi_div.dividend [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24015 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [28] -> \soc.cpu.pcpi_div.dividend [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24016 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [29] -> \soc.cpu.pcpi_div.dividend [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24017 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [30] -> \soc.cpu.pcpi_div.dividend [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24018 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [31] -> \soc.cpu.pcpi_div.dividend [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25097 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [0] -> \soc.cpu.pcpi_mul.mul_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25098 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [1] -> \soc.cpu.pcpi_mul.mul_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25099 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [2] -> \soc.cpu.pcpi_mul.mul_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25100 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [3] -> \soc.cpu.pcpi_mul.mul_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25101 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [4] -> \soc.cpu.pcpi_mul.mul_counter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25102 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [5] -> \soc.cpu.pcpi_mul.mul_counter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25103 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [6] -> \soc.cpu.pcpi_mul.mul_counter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25104 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [0] -> \soc.cpu.pcpi_mul.rdx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25105 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [1] -> \soc.cpu.pcpi_mul.rdx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25106 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [2] -> \soc.cpu.pcpi_mul.rdx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25107 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [3] -> \soc.cpu.pcpi_mul.rdx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25108 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [4] -> \soc.cpu.pcpi_mul.rdx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25109 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [5] -> \soc.cpu.pcpi_mul.rdx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25110 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [6] -> \soc.cpu.pcpi_mul.rdx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25111 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [7] -> \soc.cpu.pcpi_mul.rdx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25112 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [8] -> \soc.cpu.pcpi_mul.rdx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25113 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [9] -> \soc.cpu.pcpi_mul.rdx [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25114 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [10] -> \soc.cpu.pcpi_mul.rdx [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25115 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [11] -> \soc.cpu.pcpi_mul.rdx [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25116 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [12] -> \soc.cpu.pcpi_mul.rdx [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25117 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [13] -> \soc.cpu.pcpi_mul.rdx [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25118 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [14] -> \soc.cpu.pcpi_mul.rdx [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25119 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [15] -> \soc.cpu.pcpi_mul.rdx [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25120 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [16] -> \soc.cpu.pcpi_mul.rdx [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25121 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [17] -> \soc.cpu.pcpi_mul.rdx [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25122 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [18] -> \soc.cpu.pcpi_mul.rdx [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25123 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [19] -> \soc.cpu.pcpi_mul.rdx [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25124 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [20] -> \soc.cpu.pcpi_mul.rdx [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25125 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [21] -> \soc.cpu.pcpi_mul.rdx [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25126 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [22] -> \soc.cpu.pcpi_mul.rdx [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25127 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [23] -> \soc.cpu.pcpi_mul.rdx [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25128 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [24] -> \soc.cpu.pcpi_mul.rdx [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25129 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [25] -> \soc.cpu.pcpi_mul.rdx [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25130 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [26] -> \soc.cpu.pcpi_mul.rdx [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25131 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [27] -> \soc.cpu.pcpi_mul.rdx [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25132 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [28] -> \soc.cpu.pcpi_mul.rdx [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25133 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [29] -> \soc.cpu.pcpi_mul.rdx [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25134 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [30] -> \soc.cpu.pcpi_mul.rdx [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25135 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [31] -> \soc.cpu.pcpi_mul.rdx [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25136 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [32] -> \soc.cpu.pcpi_mul.rdx [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25137 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [33] -> \soc.cpu.pcpi_mul.rdx [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25138 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [34] -> \soc.cpu.pcpi_mul.rdx [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25139 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [35] -> \soc.cpu.pcpi_mul.rdx [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25140 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [36] -> \soc.cpu.pcpi_mul.rdx [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25141 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [37] -> \soc.cpu.pcpi_mul.rdx [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25142 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [38] -> \soc.cpu.pcpi_mul.rdx [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25143 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [39] -> \soc.cpu.pcpi_mul.rdx [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25144 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [40] -> \soc.cpu.pcpi_mul.rdx [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25145 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [41] -> \soc.cpu.pcpi_mul.rdx [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25146 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [42] -> \soc.cpu.pcpi_mul.rdx [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25147 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [43] -> \soc.cpu.pcpi_mul.rdx [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25148 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [44] -> \soc.cpu.pcpi_mul.rdx [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25149 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [45] -> \soc.cpu.pcpi_mul.rdx [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25150 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [46] -> \soc.cpu.pcpi_mul.rdx [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25151 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [47] -> \soc.cpu.pcpi_mul.rdx [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25152 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [48] -> \soc.cpu.pcpi_mul.rdx [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25153 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [49] -> \soc.cpu.pcpi_mul.rdx [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25154 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [50] -> \soc.cpu.pcpi_mul.rdx [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25155 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [51] -> \soc.cpu.pcpi_mul.rdx [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25156 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [52] -> \soc.cpu.pcpi_mul.rdx [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25157 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [53] -> \soc.cpu.pcpi_mul.rdx [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25158 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [54] -> \soc.cpu.pcpi_mul.rdx [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25159 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [55] -> \soc.cpu.pcpi_mul.rdx [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25160 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [56] -> \soc.cpu.pcpi_mul.rdx [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25161 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [57] -> \soc.cpu.pcpi_mul.rdx [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25162 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [58] -> \soc.cpu.pcpi_mul.rdx [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25163 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [59] -> \soc.cpu.pcpi_mul.rdx [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25164 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [60] -> \soc.cpu.pcpi_mul.rdx [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25165 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [61] -> \soc.cpu.pcpi_mul.rdx [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25166 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [62] -> \soc.cpu.pcpi_mul.rdx [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25167 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [63] -> \soc.cpu.pcpi_mul.rdx [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25168 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [0] -> \soc.cpu.pcpi_mul.rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25169 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [1] -> \soc.cpu.pcpi_mul.rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25170 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [2] -> \soc.cpu.pcpi_mul.rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25171 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [3] -> \soc.cpu.pcpi_mul.rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25172 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [4] -> \soc.cpu.pcpi_mul.rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25173 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [5] -> \soc.cpu.pcpi_mul.rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25174 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [6] -> \soc.cpu.pcpi_mul.rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25175 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [7] -> \soc.cpu.pcpi_mul.rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25176 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [8] -> \soc.cpu.pcpi_mul.rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25177 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [9] -> \soc.cpu.pcpi_mul.rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25178 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [10] -> \soc.cpu.pcpi_mul.rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25179 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [11] -> \soc.cpu.pcpi_mul.rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25180 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [12] -> \soc.cpu.pcpi_mul.rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25181 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [13] -> \soc.cpu.pcpi_mul.rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25182 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [14] -> \soc.cpu.pcpi_mul.rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25183 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [15] -> \soc.cpu.pcpi_mul.rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25184 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [16] -> \soc.cpu.pcpi_mul.rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25185 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [17] -> \soc.cpu.pcpi_mul.rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25186 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [18] -> \soc.cpu.pcpi_mul.rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25187 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [19] -> \soc.cpu.pcpi_mul.rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25188 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [20] -> \soc.cpu.pcpi_mul.rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25189 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [21] -> \soc.cpu.pcpi_mul.rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25190 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [22] -> \soc.cpu.pcpi_mul.rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25191 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [23] -> \soc.cpu.pcpi_mul.rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25192 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [24] -> \soc.cpu.pcpi_mul.rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25193 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [25] -> \soc.cpu.pcpi_mul.rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25194 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [26] -> \soc.cpu.pcpi_mul.rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25195 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [27] -> \soc.cpu.pcpi_mul.rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25196 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [28] -> \soc.cpu.pcpi_mul.rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25197 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [29] -> \soc.cpu.pcpi_mul.rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25198 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [30] -> \soc.cpu.pcpi_mul.rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25199 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [31] -> \soc.cpu.pcpi_mul.rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25200 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [32] -> \soc.cpu.pcpi_mul.rd [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25201 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [33] -> \soc.cpu.pcpi_mul.rd [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25202 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [34] -> \soc.cpu.pcpi_mul.rd [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25203 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [35] -> \soc.cpu.pcpi_mul.rd [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25204 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [36] -> \soc.cpu.pcpi_mul.rd [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25205 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [37] -> \soc.cpu.pcpi_mul.rd [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25206 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [38] -> \soc.cpu.pcpi_mul.rd [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25207 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [39] -> \soc.cpu.pcpi_mul.rd [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25208 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [40] -> \soc.cpu.pcpi_mul.rd [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25209 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [41] -> \soc.cpu.pcpi_mul.rd [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25210 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [42] -> \soc.cpu.pcpi_mul.rd [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25211 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [43] -> \soc.cpu.pcpi_mul.rd [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25212 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [44] -> \soc.cpu.pcpi_mul.rd [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25213 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [45] -> \soc.cpu.pcpi_mul.rd [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25214 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [46] -> \soc.cpu.pcpi_mul.rd [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25215 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [47] -> \soc.cpu.pcpi_mul.rd [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25216 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [48] -> \soc.cpu.pcpi_mul.rd [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25217 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [49] -> \soc.cpu.pcpi_mul.rd [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25218 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [50] -> \soc.cpu.pcpi_mul.rd [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25219 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [51] -> \soc.cpu.pcpi_mul.rd [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25220 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [52] -> \soc.cpu.pcpi_mul.rd [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25221 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [53] -> \soc.cpu.pcpi_mul.rd [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25222 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [54] -> \soc.cpu.pcpi_mul.rd [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25223 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [55] -> \soc.cpu.pcpi_mul.rd [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25224 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [56] -> \soc.cpu.pcpi_mul.rd [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25225 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [57] -> \soc.cpu.pcpi_mul.rd [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25226 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [58] -> \soc.cpu.pcpi_mul.rd [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25227 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [59] -> \soc.cpu.pcpi_mul.rd [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25228 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [60] -> \soc.cpu.pcpi_mul.rd [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25229 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [61] -> \soc.cpu.pcpi_mul.rd [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25230 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [62] -> \soc.cpu.pcpi_mul.rd [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25231 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [63] -> \soc.cpu.pcpi_mul.rd [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25232 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [0] -> \soc.cpu.pcpi_mul.rs2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25233 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [1] -> \soc.cpu.pcpi_mul.rs2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25234 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [2] -> \soc.cpu.pcpi_mul.rs2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25235 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [3] -> \soc.cpu.pcpi_mul.rs2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25236 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [4] -> \soc.cpu.pcpi_mul.rs2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25237 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [5] -> \soc.cpu.pcpi_mul.rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25238 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [6] -> \soc.cpu.pcpi_mul.rs2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25239 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [7] -> \soc.cpu.pcpi_mul.rs2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25240 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [8] -> \soc.cpu.pcpi_mul.rs2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25241 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [9] -> \soc.cpu.pcpi_mul.rs2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25242 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [10] -> \soc.cpu.pcpi_mul.rs2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25243 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [11] -> \soc.cpu.pcpi_mul.rs2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25244 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [12] -> \soc.cpu.pcpi_mul.rs2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25245 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [13] -> \soc.cpu.pcpi_mul.rs2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25246 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [14] -> \soc.cpu.pcpi_mul.rs2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25247 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [15] -> \soc.cpu.pcpi_mul.rs2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25248 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [16] -> \soc.cpu.pcpi_mul.rs2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25249 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [17] -> \soc.cpu.pcpi_mul.rs2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25250 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [18] -> \soc.cpu.pcpi_mul.rs2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25251 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [19] -> \soc.cpu.pcpi_mul.rs2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25252 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [20] -> \soc.cpu.pcpi_mul.rs2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25253 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [21] -> \soc.cpu.pcpi_mul.rs2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25254 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [22] -> \soc.cpu.pcpi_mul.rs2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25255 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [23] -> \soc.cpu.pcpi_mul.rs2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25256 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [24] -> \soc.cpu.pcpi_mul.rs2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25257 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [25] -> \soc.cpu.pcpi_mul.rs2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25258 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [26] -> \soc.cpu.pcpi_mul.rs2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25259 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [27] -> \soc.cpu.pcpi_mul.rs2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25260 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [28] -> \soc.cpu.pcpi_mul.rs2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25261 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [29] -> \soc.cpu.pcpi_mul.rs2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25262 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [30] -> \soc.cpu.pcpi_mul.rs2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25263 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [31] -> \soc.cpu.pcpi_mul.rs2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25264 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [32] -> \soc.cpu.pcpi_mul.rs2 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25265 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [33] -> \soc.cpu.pcpi_mul.rs2 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25266 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [34] -> \soc.cpu.pcpi_mul.rs2 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25267 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [35] -> \soc.cpu.pcpi_mul.rs2 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25268 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [36] -> \soc.cpu.pcpi_mul.rs2 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25269 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [37] -> \soc.cpu.pcpi_mul.rs2 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25270 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [38] -> \soc.cpu.pcpi_mul.rs2 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25271 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [39] -> \soc.cpu.pcpi_mul.rs2 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25272 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [40] -> \soc.cpu.pcpi_mul.rs2 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25273 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [41] -> \soc.cpu.pcpi_mul.rs2 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25274 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [42] -> \soc.cpu.pcpi_mul.rs2 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25275 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [43] -> \soc.cpu.pcpi_mul.rs2 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25276 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [44] -> \soc.cpu.pcpi_mul.rs2 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25277 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [45] -> \soc.cpu.pcpi_mul.rs2 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25278 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [46] -> \soc.cpu.pcpi_mul.rs2 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25279 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [47] -> \soc.cpu.pcpi_mul.rs2 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25280 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [48] -> \soc.cpu.pcpi_mul.rs2 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25281 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [49] -> \soc.cpu.pcpi_mul.rs2 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25282 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [50] -> \soc.cpu.pcpi_mul.rs2 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25283 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [51] -> \soc.cpu.pcpi_mul.rs2 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25284 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [52] -> \soc.cpu.pcpi_mul.rs2 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25285 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [53] -> \soc.cpu.pcpi_mul.rs2 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25286 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [54] -> \soc.cpu.pcpi_mul.rs2 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25287 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [55] -> \soc.cpu.pcpi_mul.rs2 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25288 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [56] -> \soc.cpu.pcpi_mul.rs2 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25289 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [57] -> \soc.cpu.pcpi_mul.rs2 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25290 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [58] -> \soc.cpu.pcpi_mul.rs2 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25291 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [59] -> \soc.cpu.pcpi_mul.rs2 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25292 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [60] -> \soc.cpu.pcpi_mul.rs2 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25293 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [61] -> \soc.cpu.pcpi_mul.rs2 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25294 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [62] -> \soc.cpu.pcpi_mul.rs2 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25295 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [63] -> \soc.cpu.pcpi_mul.rs2 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25296 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [0] -> \soc.cpu.pcpi_mul.rs1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25297 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [1] -> \soc.cpu.pcpi_mul.rs1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25298 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [2] -> \soc.cpu.pcpi_mul.rs1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25299 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [3] -> \soc.cpu.pcpi_mul.rs1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25300 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [4] -> \soc.cpu.pcpi_mul.rs1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25301 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [5] -> \soc.cpu.pcpi_mul.rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25302 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [6] -> \soc.cpu.pcpi_mul.rs1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25303 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [7] -> \soc.cpu.pcpi_mul.rs1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25304 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [8] -> \soc.cpu.pcpi_mul.rs1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25305 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [9] -> \soc.cpu.pcpi_mul.rs1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25306 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [10] -> \soc.cpu.pcpi_mul.rs1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25307 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [11] -> \soc.cpu.pcpi_mul.rs1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25308 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [12] -> \soc.cpu.pcpi_mul.rs1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25309 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [13] -> \soc.cpu.pcpi_mul.rs1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25310 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [14] -> \soc.cpu.pcpi_mul.rs1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25311 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [15] -> \soc.cpu.pcpi_mul.rs1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25312 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [16] -> \soc.cpu.pcpi_mul.rs1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25313 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [17] -> \soc.cpu.pcpi_mul.rs1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25314 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [18] -> \soc.cpu.pcpi_mul.rs1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25315 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [19] -> \soc.cpu.pcpi_mul.rs1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25316 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [20] -> \soc.cpu.pcpi_mul.rs1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25317 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [21] -> \soc.cpu.pcpi_mul.rs1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25318 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [22] -> \soc.cpu.pcpi_mul.rs1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25319 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [23] -> \soc.cpu.pcpi_mul.rs1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25320 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [24] -> \soc.cpu.pcpi_mul.rs1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25321 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [25] -> \soc.cpu.pcpi_mul.rs1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25322 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [26] -> \soc.cpu.pcpi_mul.rs1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25323 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [27] -> \soc.cpu.pcpi_mul.rs1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25324 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [28] -> \soc.cpu.pcpi_mul.rs1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25325 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [29] -> \soc.cpu.pcpi_mul.rs1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25326 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [30] -> \soc.cpu.pcpi_mul.rs1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25327 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [31] -> \soc.cpu.pcpi_mul.rs1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25328 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [32] -> \soc.cpu.pcpi_mul.rs1 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25329 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [33] -> \soc.cpu.pcpi_mul.rs1 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25330 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [34] -> \soc.cpu.pcpi_mul.rs1 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25331 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [35] -> \soc.cpu.pcpi_mul.rs1 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25332 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [36] -> \soc.cpu.pcpi_mul.rs1 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25333 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [37] -> \soc.cpu.pcpi_mul.rs1 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25334 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [38] -> \soc.cpu.pcpi_mul.rs1 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25335 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [39] -> \soc.cpu.pcpi_mul.rs1 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25336 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [40] -> \soc.cpu.pcpi_mul.rs1 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25337 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [41] -> \soc.cpu.pcpi_mul.rs1 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25338 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [42] -> \soc.cpu.pcpi_mul.rs1 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25339 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [43] -> \soc.cpu.pcpi_mul.rs1 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25340 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [44] -> \soc.cpu.pcpi_mul.rs1 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25341 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [45] -> \soc.cpu.pcpi_mul.rs1 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25342 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [46] -> \soc.cpu.pcpi_mul.rs1 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25343 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [47] -> \soc.cpu.pcpi_mul.rs1 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25344 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [48] -> \soc.cpu.pcpi_mul.rs1 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25345 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [49] -> \soc.cpu.pcpi_mul.rs1 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25346 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [50] -> \soc.cpu.pcpi_mul.rs1 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25347 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [51] -> \soc.cpu.pcpi_mul.rs1 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25348 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [52] -> \soc.cpu.pcpi_mul.rs1 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25349 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [53] -> \soc.cpu.pcpi_mul.rs1 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25350 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [54] -> \soc.cpu.pcpi_mul.rs1 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25351 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [55] -> \soc.cpu.pcpi_mul.rs1 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25352 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [56] -> \soc.cpu.pcpi_mul.rs1 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25353 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [57] -> \soc.cpu.pcpi_mul.rs1 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25354 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [58] -> \soc.cpu.pcpi_mul.rs1 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25355 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [59] -> \soc.cpu.pcpi_mul.rs1 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25356 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [60] -> \soc.cpu.pcpi_mul.rs1 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25357 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [61] -> \soc.cpu.pcpi_mul.rs1 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25358 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [62] -> \soc.cpu.pcpi_mul.rs1 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25359 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [63] -> \soc.cpu.pcpi_mul.rs1 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25361 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [0] -> \soc.cpu.pcpi_mul.pcpi_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25362 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [1] -> \soc.cpu.pcpi_mul.pcpi_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25363 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [2] -> \soc.cpu.pcpi_mul.pcpi_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25364 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [3] -> \soc.cpu.pcpi_mul.pcpi_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25365 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [4] -> \soc.cpu.pcpi_mul.pcpi_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25366 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [5] -> \soc.cpu.pcpi_mul.pcpi_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25367 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [6] -> \soc.cpu.pcpi_mul.pcpi_rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25368 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [7] -> \soc.cpu.pcpi_mul.pcpi_rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25369 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [8] -> \soc.cpu.pcpi_mul.pcpi_rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25370 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [9] -> \soc.cpu.pcpi_mul.pcpi_rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25371 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [10] -> \soc.cpu.pcpi_mul.pcpi_rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25372 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [11] -> \soc.cpu.pcpi_mul.pcpi_rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25373 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [12] -> \soc.cpu.pcpi_mul.pcpi_rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25374 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [13] -> \soc.cpu.pcpi_mul.pcpi_rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25375 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [14] -> \soc.cpu.pcpi_mul.pcpi_rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25376 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [15] -> \soc.cpu.pcpi_mul.pcpi_rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25377 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [16] -> \soc.cpu.pcpi_mul.pcpi_rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25378 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [17] -> \soc.cpu.pcpi_mul.pcpi_rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25379 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [18] -> \soc.cpu.pcpi_mul.pcpi_rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25380 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [19] -> \soc.cpu.pcpi_mul.pcpi_rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25381 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [20] -> \soc.cpu.pcpi_mul.pcpi_rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25382 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [21] -> \soc.cpu.pcpi_mul.pcpi_rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25383 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [22] -> \soc.cpu.pcpi_mul.pcpi_rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25384 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [23] -> \soc.cpu.pcpi_mul.pcpi_rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25385 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [24] -> \soc.cpu.pcpi_mul.pcpi_rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25386 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [25] -> \soc.cpu.pcpi_mul.pcpi_rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25387 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [26] -> \soc.cpu.pcpi_mul.pcpi_rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25388 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [27] -> \soc.cpu.pcpi_mul.pcpi_rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25389 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [28] -> \soc.cpu.pcpi_mul.pcpi_rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25390 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [29] -> \soc.cpu.pcpi_mul.pcpi_rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25391 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [30] -> \soc.cpu.pcpi_mul.pcpi_rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$25392 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [31] -> \soc.cpu.pcpi_mul.pcpi_rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26563 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [0] -> \soc.spimemio.xfer.xfer_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26564 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [1] -> \soc.spimemio.xfer.xfer_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26565 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [2] -> \soc.spimemio.xfer.xfer_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26566 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [3] -> \soc.spimemio.xfer.xfer_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26567 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_rd[0:0] -> \soc.spimemio.xfer.xfer_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26568 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_qspi[0:0] -> \soc.spimemio.xfer.xfer_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26569 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [0] -> \soc.spimemio.xfer.dummy_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26570 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [1] -> \soc.spimemio.xfer.dummy_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26571 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [2] -> \soc.spimemio.xfer.dummy_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26572 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [3] -> \soc.spimemio.xfer.dummy_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26573 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [0] -> \soc.spimemio.xfer.count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26574 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [1] -> \soc.spimemio.xfer.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26575 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [2] -> \soc.spimemio.xfer.count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26576 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [3] -> \soc.spimemio.xfer.count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26577 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [0] -> \soc.spimemio.xfer.ibuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26578 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [1] -> \soc.spimemio.xfer.ibuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26579 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [2] -> \soc.spimemio.xfer.ibuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26580 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [3] -> \soc.spimemio.xfer.ibuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26581 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [4] -> \soc.spimemio.xfer.ibuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26582 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [5] -> \soc.spimemio.xfer.ibuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26583 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [6] -> \soc.spimemio.xfer.ibuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26584 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [7] -> \soc.spimemio.xfer.ibuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26585 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [0] -> \soc.spimemio.xfer.obuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26586 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [1] -> \soc.spimemio.xfer.obuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26587 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [2] -> \soc.spimemio.xfer.obuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26588 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [3] -> \soc.spimemio.xfer.obuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26589 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [4] -> \soc.spimemio.xfer.obuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26590 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [5] -> \soc.spimemio.xfer.obuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26591 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [6] -> \soc.spimemio.xfer.obuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26592 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [7] -> \soc.spimemio.xfer.obuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26593 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_ddr[0:0] -> \soc.spimemio.xfer.xfer_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26594 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_dspi[0:0] -> \soc.spimemio.xfer.xfer_dspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26595 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_clk[0:0] -> \soc.spimemio.xfer.flash_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$26596 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_csb[0:0] -> \soc.spimemio.xfer.flash_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9246 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [0] -> \clock.counterO [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9247 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [1] -> \clock.counterO [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9248 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [2] -> \clock.counterO [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9249 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [3] -> \clock.counterO [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9250 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [4] -> \clock.counterO [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9251 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [5] -> \clock.counterO [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9252 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [6] -> \clock.counterO [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9253 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [7] -> \clock.counterO [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9254 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [8] -> \clock.counterO [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9255 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [9] -> \clock.counterO [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9256 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [10] -> \clock.counterO [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9257 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [11] -> \clock.counterO [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9258 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [12] -> \clock.counterO [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9259 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [13] -> \clock.counterO [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9260 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [14] -> \clock.counterO [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9261 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [15] -> \clock.counterO [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9262 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [16] -> \clock.counterO [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9263 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [17] -> \clock.counterO [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9264 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [18] -> \clock.counterO [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9265 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [19] -> \clock.counterO [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9266 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [20] -> \clock.counterO [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9267 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [21] -> \clock.counterO [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9268 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [22] -> \clock.counterO [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9269 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [23] -> \clock.counterO [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9270 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [24] -> \clock.counterO [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9271 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [25] -> \clock.counterO [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9272 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [26] -> \clock.counterO [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9273 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [27] -> \clock.counterO [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9274 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [28] -> \clock.counterO [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9275 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [29] -> \clock.counterO [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9276 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [30] -> \clock.counterO [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9277 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [31] -> \clock.counterO [31].

9.35. Executing TECHMAP pass (map to technology primitives).

9.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

9.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~2024 debug messages>

9.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~6216 debug messages>

9.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7598.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7601.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7604.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7607.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7610.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7613.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7616.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7619.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7622.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7625.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7628.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7631.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7634.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7637.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7640.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7643.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7649.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7655.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7693.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7696.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7705.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7708.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7711.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7714.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7732.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7732.slice[22].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7735.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7738.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7741.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7744.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7747.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$14276.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$25957.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$25986.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$25993.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26001.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26008.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26015.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26023.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26048.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26055.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26063.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26090.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26097.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26105.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26112.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$26141.slice[0].fadd ($lut).

9.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in hardware.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11092 (SB_DFFE): \pwmDB.count_temp [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10348 (SB_DFFE): \pwm_connectorIF [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10349 (SB_DFFE): \pwm_connectorIF [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10350 (SB_DFFE): \pwm_connectorIF [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10351 (SB_DFFE): \pwm_connectorIF [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10352 (SB_DFFE): \pwm_connectorIF [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10353 (SB_DFFE): \pwm_connectorIF [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10354 (SB_DFFE): \pwm_connectorIF [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10355 (SB_DFFE): \pwm_connectorIF [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10356 (SB_DFFE): \pwm_connectorIF [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10357 (SB_DFFE): \pwm_connectorIF [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10358 (SB_DFFE): \pwm_connectorIF [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10359 (SB_DFFE): \pwm_connectorIF [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10360 (SB_DFFE): \pwm_connectorIF [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10361 (SB_DFFE): \pwm_connectorIF [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10362 (SB_DFFE): \pwm_connectorIF [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10363 (SB_DFFE): \pwm_connectorIF [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10364 (SB_DFFE): \pwm_connectorIF [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10365 (SB_DFFE): \pwm_connectorIF [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10366 (SB_DFFE): \pwm_connectorIF [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10367 (SB_DFFE): \pwm_connectorIF [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10368 (SB_DFFE): \pwm_connectorIF [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10369 (SB_DFFE): \pwm_connectorIF [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10370 (SB_DFFE): \pwm_connectorIF [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10371 (SB_DFFE): \pwm_connectorIF [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10372 (SB_DFFE): \pwm_connectorIF [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10373 (SB_DFFE): \pwm_connectorIF [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10374 (SB_DFFE): \pwm_connectorIF [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10375 (SB_DFFE): \pwm_connectorIF [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10376 (SB_DFFE): \pwm_connectorIF [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10377 (SB_DFFE): \pwm_connectorIF [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10378 (SB_DFFE): \pwm_connectorIF [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10380 (SB_DFFE): \pwm_connectorIB [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10347 (SB_DFFE): \pwm_connectorIF [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10381 (SB_DFFE): \pwm_connectorIB [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10382 (SB_DFFE): \pwm_connectorIB [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10383 (SB_DFFE): \pwm_connectorIB [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10384 (SB_DFFE): \pwm_connectorIB [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10385 (SB_DFFE): \pwm_connectorIB [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10386 (SB_DFFE): \pwm_connectorIB [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10387 (SB_DFFE): \pwm_connectorIB [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10388 (SB_DFFE): \pwm_connectorIB [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10389 (SB_DFFE): \pwm_connectorIB [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10390 (SB_DFFE): \pwm_connectorIB [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10391 (SB_DFFE): \pwm_connectorIB [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10392 (SB_DFFE): \pwm_connectorIB [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10393 (SB_DFFE): \pwm_connectorIB [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10394 (SB_DFFE): \pwm_connectorIB [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10395 (SB_DFFE): \pwm_connectorIB [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10396 (SB_DFFE): \pwm_connectorIB [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10397 (SB_DFFE): \pwm_connectorIB [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10398 (SB_DFFE): \pwm_connectorIB [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10399 (SB_DFFE): \pwm_connectorIB [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10400 (SB_DFFE): \pwm_connectorIB [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10401 (SB_DFFE): \pwm_connectorIB [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10402 (SB_DFFE): \pwm_connectorIB [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10403 (SB_DFFE): \pwm_connectorIB [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10404 (SB_DFFE): \pwm_connectorIB [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10405 (SB_DFFE): \pwm_connectorIB [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10406 (SB_DFFE): \pwm_connectorIB [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10407 (SB_DFFE): \pwm_connectorIB [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10408 (SB_DFFE): \pwm_connectorIB [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10409 (SB_DFFE): \pwm_connectorIB [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10410 (SB_DFFE): \pwm_connectorIB [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10412 (SB_DFFE): \pwm_connectorDF [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10379 (SB_DFFE): \pwm_connectorIB [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10413 (SB_DFFE): \pwm_connectorDF [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10414 (SB_DFFE): \pwm_connectorDF [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10415 (SB_DFFE): \pwm_connectorDF [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10416 (SB_DFFE): \pwm_connectorDF [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10417 (SB_DFFE): \pwm_connectorDF [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10418 (SB_DFFE): \pwm_connectorDF [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10419 (SB_DFFE): \pwm_connectorDF [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10420 (SB_DFFE): \pwm_connectorDF [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10421 (SB_DFFE): \pwm_connectorDF [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10422 (SB_DFFE): \pwm_connectorDF [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10423 (SB_DFFE): \pwm_connectorDF [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10424 (SB_DFFE): \pwm_connectorDF [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10425 (SB_DFFE): \pwm_connectorDF [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10426 (SB_DFFE): \pwm_connectorDF [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10427 (SB_DFFE): \pwm_connectorDF [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10428 (SB_DFFE): \pwm_connectorDF [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10429 (SB_DFFE): \pwm_connectorDF [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10430 (SB_DFFE): \pwm_connectorDF [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10431 (SB_DFFE): \pwm_connectorDF [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10432 (SB_DFFE): \pwm_connectorDF [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10433 (SB_DFFE): \pwm_connectorDF [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10434 (SB_DFFE): \pwm_connectorDF [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10435 (SB_DFFE): \pwm_connectorDF [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10436 (SB_DFFE): \pwm_connectorDF [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10437 (SB_DFFE): \pwm_connectorDF [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10438 (SB_DFFE): \pwm_connectorDF [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10439 (SB_DFFE): \pwm_connectorDF [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10440 (SB_DFFE): \pwm_connectorDF [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10441 (SB_DFFE): \pwm_connectorDF [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10442 (SB_DFFE): \pwm_connectorDF [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10444 (SB_DFFE): \pwm_connectorDB [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10411 (SB_DFFE): \pwm_connectorDF [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10445 (SB_DFFE): \pwm_connectorDB [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10446 (SB_DFFE): \pwm_connectorDB [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10447 (SB_DFFE): \pwm_connectorDB [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10448 (SB_DFFE): \pwm_connectorDB [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10449 (SB_DFFE): \pwm_connectorDB [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10450 (SB_DFFE): \pwm_connectorDB [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10451 (SB_DFFE): \pwm_connectorDB [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10452 (SB_DFFE): \pwm_connectorDB [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10453 (SB_DFFE): \pwm_connectorDB [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10454 (SB_DFFE): \pwm_connectorDB [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10455 (SB_DFFE): \pwm_connectorDB [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10456 (SB_DFFE): \pwm_connectorDB [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10457 (SB_DFFE): \pwm_connectorDB [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10458 (SB_DFFE): \pwm_connectorDB [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10459 (SB_DFFE): \pwm_connectorDB [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10460 (SB_DFFE): \pwm_connectorDB [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10461 (SB_DFFE): \pwm_connectorDB [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10462 (SB_DFFE): \pwm_connectorDB [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10463 (SB_DFFE): \pwm_connectorDB [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10464 (SB_DFFE): \pwm_connectorDB [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10465 (SB_DFFE): \pwm_connectorDB [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10466 (SB_DFFE): \pwm_connectorDB [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10467 (SB_DFFE): \pwm_connectorDB [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10468 (SB_DFFE): \pwm_connectorDB [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10469 (SB_DFFE): \pwm_connectorDB [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10470 (SB_DFFE): \pwm_connectorDB [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10471 (SB_DFFE): \pwm_connectorDB [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10472 (SB_DFFE): \pwm_connectorDB [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10473 (SB_DFFE): \pwm_connectorDB [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10474 (SB_DFFE): \pwm_connectorDB [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10510 (SB_DFFE): \encoderDataI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10443 (SB_DFFE): \pwm_connectorDB [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10475 (SB_DFFE): \pinTest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10507 (SB_DFFE): \writeEncoderI = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10508 (SB_DFFE): \writeEncoderD = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10511 (SB_DFFE): \encoderDataI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10512 (SB_DFFE): \encoderDataI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10513 (SB_DFFE): \encoderDataI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10514 (SB_DFFE): \encoderDataI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10515 (SB_DFFE): \encoderDataI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10516 (SB_DFFE): \encoderDataI [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10517 (SB_DFFE): \encoderDataI [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10518 (SB_DFFE): \encoderDataI [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10519 (SB_DFFE): \encoderDataI [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10520 (SB_DFFE): \encoderDataI [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10521 (SB_DFFE): \encoderDataI [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10522 (SB_DFFE): \encoderDataI [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10523 (SB_DFFE): \encoderDataI [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10524 (SB_DFFE): \encoderDataI [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10525 (SB_DFFE): \encoderDataI [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10526 (SB_DFFE): \encoderDataI [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10527 (SB_DFFE): \encoderDataI [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10528 (SB_DFFE): \encoderDataI [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10529 (SB_DFFE): \encoderDataI [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10530 (SB_DFFE): \encoderDataI [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10531 (SB_DFFE): \encoderDataI [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10532 (SB_DFFE): \encoderDataI [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10533 (SB_DFFE): \encoderDataI [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10534 (SB_DFFE): \encoderDataI [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10535 (SB_DFFE): \encoderDataI [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10536 (SB_DFFE): \encoderDataI [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10537 (SB_DFFE): \encoderDataI [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10538 (SB_DFFE): \encoderDataI [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10539 (SB_DFFE): \encoderDataI [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10540 (SB_DFFE): \encoderDataI [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10542 (SB_DFFE): \encoderDataD [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10509 (SB_DFFE): \encoderDataI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10543 (SB_DFFE): \encoderDataD [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10544 (SB_DFFE): \encoderDataD [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10545 (SB_DFFE): \encoderDataD [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10546 (SB_DFFE): \encoderDataD [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10547 (SB_DFFE): \encoderDataD [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10548 (SB_DFFE): \encoderDataD [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10549 (SB_DFFE): \encoderDataD [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10550 (SB_DFFE): \encoderDataD [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10551 (SB_DFFE): \encoderDataD [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10552 (SB_DFFE): \encoderDataD [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10553 (SB_DFFE): \encoderDataD [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10554 (SB_DFFE): \encoderDataD [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10555 (SB_DFFE): \encoderDataD [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10556 (SB_DFFE): \encoderDataD [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10557 (SB_DFFE): \encoderDataD [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10558 (SB_DFFE): \encoderDataD [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10559 (SB_DFFE): \encoderDataD [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10560 (SB_DFFE): \encoderDataD [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10561 (SB_DFFE): \encoderDataD [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10562 (SB_DFFE): \encoderDataD [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10563 (SB_DFFE): \encoderDataD [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10564 (SB_DFFE): \encoderDataD [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10565 (SB_DFFE): \encoderDataD [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10566 (SB_DFFE): \encoderDataD [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10567 (SB_DFFE): \encoderDataD [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10568 (SB_DFFE): \encoderDataD [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10569 (SB_DFFE): \encoderDataD [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10570 (SB_DFFE): \encoderDataD [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10571 (SB_DFFE): \encoderDataD [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10572 (SB_DFFE): \encoderDataD [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10574 (SB_DFF): \reset_cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10541 (SB_DFFE): \encoderDataD [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10575 (SB_DFF): \reset_cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10576 (SB_DFF): \reset_cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10577 (SB_DFF): \reset_cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10578 (SB_DFF): \reset_cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10580 (SB_DFFE): \pwmIF.count_temp [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10573 (SB_DFF): \reset_cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10581 (SB_DFFE): \pwmIF.count_temp [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10582 (SB_DFFE): \pwmIF.count_temp [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10583 (SB_DFFE): \pwmIF.count_temp [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10584 (SB_DFFE): \pwmIF.count_temp [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10585 (SB_DFFE): \pwmIF.count_temp [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10586 (SB_DFFE): \pwmIF.count_temp [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10587 (SB_DFFE): \pwmIF.count_temp [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10588 (SB_DFFE): \pwmIF.count_temp [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10591 (SB_DFF): \pwmIF.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10579 (SB_DFFE): \pwmIF.count_temp [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10589 (SB_DFF): \pwmIF.pwm_counter = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10592 (SB_DFF): \pwmIF.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10593 (SB_DFF): \pwmIF.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10594 (SB_DFF): \pwmIF.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10595 (SB_DFF): \pwmIF.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10596 (SB_DFF): \pwmIF.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10776 (SB_DFFE): \pwmIB.count_temp [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10590 (SB_DFF): \pwmIF.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10622 (SB_DFF): \pwmIF.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10777 (SB_DFFE): \pwmIB.count_temp [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10778 (SB_DFFE): \pwmIB.count_temp [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10779 (SB_DFFE): \pwmIB.count_temp [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10780 (SB_DFFE): \pwmIB.count_temp [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10781 (SB_DFFE): \pwmIB.count_temp [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10782 (SB_DFFE): \pwmIB.count_temp [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10783 (SB_DFFE): \pwmIB.count_temp [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10784 (SB_DFFE): \pwmIB.count_temp [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10787 (SB_DFF): \pwmIB.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10775 (SB_DFFE): \pwmIB.count_temp [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10785 (SB_DFF): \pwmIB.pwm_counter = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10788 (SB_DFF): \pwmIB.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10789 (SB_DFF): \pwmIB.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10790 (SB_DFF): \pwmIB.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10791 (SB_DFF): \pwmIB.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10792 (SB_DFF): \pwmIB.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10931 (SB_DFFE): \pwmDF.count_temp [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10786 (SB_DFF): \pwmIB.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10933 (SB_DFFE): \pwmDF.count_temp [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11278 (SB_DFF): \encoderL.encoderCount [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10818 (SB_DFF): \pwmIB.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10934 (SB_DFFE): \pwmDF.count_temp [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10935 (SB_DFFE): \pwmDF.count_temp [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10936 (SB_DFFE): \pwmDF.count_temp [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10937 (SB_DFFE): \pwmDF.count_temp [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10938 (SB_DFFE): \pwmDF.count_temp [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10939 (SB_DFFE): \pwmDF.count_temp [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10942 (SB_DFF): \pwmDF.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10930 (SB_DFFE): \pwmDF.count_temp [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10940 (SB_DFF): \pwmDF.pwm_counter = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10943 (SB_DFF): \pwmDF.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10944 (SB_DFF): \pwmDF.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10945 (SB_DFF): \pwmDF.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10946 (SB_DFF): \pwmDF.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10947 (SB_DFF): \pwmDF.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9292 (SB_DFF): \clock.counterI [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10941 (SB_DFF): \pwmDF.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11277 (SB_DFF): \encoderL.encoderCount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11094 (SB_DFFE): \pwmDB.count_temp [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11091 (SB_DFFE): \pwmDB.count_temp [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10973 (SB_DFF): \pwmDF.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11095 (SB_DFFE): \pwmDB.count_temp [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11096 (SB_DFFE): \pwmDB.count_temp [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11097 (SB_DFFE): \pwmDB.count_temp [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11098 (SB_DFFE): \pwmDB.count_temp [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11099 (SB_DFFE): \pwmDB.count_temp [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11102 (SB_DFF): \pwmDB.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11090 (SB_DFFE): \pwmDB.count_temp [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11100 (SB_DFF): \pwmDB.pwm_counter = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11103 (SB_DFF): \pwmDB.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11104 (SB_DFF): \pwmDB.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11105 (SB_DFF): \pwmDB.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11106 (SB_DFF): \pwmDB.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11107 (SB_DFF): \pwmDB.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11101 (SB_DFF): \pwmDB.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11276 (SB_DFF): \encoderL.encoderCount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11242 (SB_DFFE): \encoderL.pinEncoderFPrev = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11244 (SB_DFF): \encoderL.encoderCounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11245 (SB_DFFE): \encoderL.encoderCounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11243 (SB_DFFE): \encoderL.encoderCounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11246 (SB_DFFE): \encoderL.encoderCounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11248 (SB_DFF): \encoderL.encoderCount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11249 (SB_DFF): \encoderL.encoderCount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11133 (SB_DFF): \pwmDB.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11253 (SB_DFF): \encoderL.encoderCount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11256 (SB_DFF): \encoderL.encoderCount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11257 (SB_DFF): \encoderL.encoderCount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11258 (SB_DFF): \encoderL.encoderCount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11259 (SB_DFF): \encoderL.encoderCount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11260 (SB_DFF): \encoderL.encoderCount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11261 (SB_DFF): \encoderL.encoderCount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11262 (SB_DFF): \encoderL.encoderCount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11263 (SB_DFF): \encoderL.encoderCount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11264 (SB_DFF): \encoderL.encoderCount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11265 (SB_DFF): \encoderL.encoderCount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11266 (SB_DFF): \encoderL.encoderCount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11267 (SB_DFF): \encoderL.encoderCount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11268 (SB_DFF): \encoderL.encoderCount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11269 (SB_DFF): \encoderL.encoderCount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11273 (SB_DFF): \encoderL.encoderCount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11472 (SB_DFF): \encoderR.encoderCount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11475 (SB_DFF): \encoderR.encoderCount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11247 (SB_DFF): \encoderL.encoderCount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11251 (SB_DFF): \encoderL.encoderCount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11093 (SB_DFFE): \pwmDB.count_temp [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10932 (SB_DFFE): \pwmDF.count_temp [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11274 (SB_DFF): \encoderL.encoderCount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11467 (SB_DFFE): \encoderR.pinEncoderFPrev = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11477 (SB_DFF): \encoderR.encoderCount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11469 (SB_DFF): \encoderR.encoderCounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11470 (SB_DFFE): \encoderR.encoderCounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11468 (SB_DFFE): \encoderR.encoderCounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9289 (SB_DFF): \clock.counterI [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11473 (SB_DFF): \encoderR.encoderCount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11275 (SB_DFF): \encoderL.encoderCount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11474 (SB_DFF): \encoderR.encoderCount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11484 (SB_DFF): \encoderR.encoderCount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11476 (SB_DFF): \encoderR.encoderCount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9288 (SB_DFF): \clock.counterI [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11481 (SB_DFF): \encoderR.encoderCount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11482 (SB_DFF): \encoderR.encoderCount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11483 (SB_DFF): \encoderR.encoderCount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11490 (SB_DFF): \encoderR.encoderCount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11486 (SB_DFF): \encoderR.encoderCount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11478 (SB_DFF): \encoderR.encoderCount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11488 (SB_DFF): \encoderR.encoderCount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11485 (SB_DFF): \encoderR.encoderCount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11489 (SB_DFF): \encoderR.encoderCount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11480 (SB_DFF): \encoderR.encoderCount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11492 (SB_DFF): \encoderR.encoderCount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11487 (SB_DFF): \encoderR.encoderCount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11494 (SB_DFF): \encoderR.encoderCount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11491 (SB_DFF): \encoderR.encoderCount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11495 (SB_DFF): \encoderR.encoderCount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11496 (SB_DFF): \encoderR.encoderCount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11497 (SB_DFF): \encoderR.encoderCount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11498 (SB_DFF): \encoderR.encoderCount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11499 (SB_DFF): \encoderR.encoderCount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11502 (SB_DFF): \encoderR.encoderCount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11493 (SB_DFF): \encoderR.encoderCount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11500 (SB_DFF): \encoderR.encoderCount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11250 (SB_DFF): \encoderL.encoderCount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11501 (SB_DFF): \encoderR.encoderCount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9303 (SB_DFF): \clock.counterI [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9302 (SB_DFF): \clock.counterI [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9278 (SB_DFF): \clock.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11271 (SB_DFF): \encoderL.encoderCount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11270 (SB_DFF): \encoderL.encoderCount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11255 (SB_DFF): \encoderL.encoderCount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11254 (SB_DFF): \encoderL.encoderCount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11252 (SB_DFF): \encoderL.encoderCount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9267 (SB_DFFE): \clock.counterO [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9269 (SB_DFFE): \clock.counterO [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9306 (SB_DFF): \clock.counterI [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9247 (SB_DFFE): \clock.counterO [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9304 (SB_DFF): \clock.counterI [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9294 (SB_DFF): \clock.counterI [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9298 (SB_DFF): \clock.counterI [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9300 (SB_DFF): \clock.counterI [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9299 (SB_DFF): \clock.counterI [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9301 (SB_DFF): \clock.counterI [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11471 (SB_DFFE): \encoderR.encoderCounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9256 (SB_DFFE): \clock.counterO [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9254 (SB_DFFE): \clock.counterO [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9275 (SB_DFFE): \clock.counterO [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9258 (SB_DFFE): \clock.counterO [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9270 (SB_DFFE): \clock.counterO [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9259 (SB_DFFE): \clock.counterO [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9260 (SB_DFFE): \clock.counterO [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9261 (SB_DFFE): \clock.counterO [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9262 (SB_DFFE): \clock.counterO [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9263 (SB_DFFE): \clock.counterO [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9264 (SB_DFFE): \clock.counterO [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9265 (SB_DFFE): \clock.counterO [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11479 (SB_DFF): \encoderR.encoderCount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9257 (SB_DFFE): \clock.counterO [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9268 (SB_DFFE): \clock.counterO [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11503 (SB_DFF): \encoderR.encoderCount [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9266 (SB_DFFE): \clock.counterO [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9271 (SB_DFFE): \clock.counterO [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9272 (SB_DFFE): \clock.counterO [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9273 (SB_DFFE): \clock.counterO [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9274 (SB_DFFE): \clock.counterO [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9255 (SB_DFFE): \clock.counterO [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9276 (SB_DFFE): \clock.counterO [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9246 (SB_DFFE): \clock.counterO [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9277 (SB_DFFE): \clock.counterO [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9279 (SB_DFF): \clock.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9280 (SB_DFF): \clock.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9281 (SB_DFF): \clock.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9282 (SB_DFF): \clock.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9283 (SB_DFF): \clock.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9284 (SB_DFF): \clock.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9285 (SB_DFF): \clock.counterI [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9286 (SB_DFF): \clock.counterI [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9287 (SB_DFF): \clock.counterI [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9253 (SB_DFFE): \clock.counterO [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9249 (SB_DFFE): \clock.counterO [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9290 (SB_DFF): \clock.counterI [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9291 (SB_DFF): \clock.counterI [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9250 (SB_DFFE): \clock.counterO [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9295 (SB_DFF): \clock.counterI [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9296 (SB_DFF): \clock.counterI [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9297 (SB_DFF): \clock.counterI [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9248 (SB_DFFE): \clock.counterO [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9251 (SB_DFFE): \clock.counterO [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9293 (SB_DFF): \clock.counterI [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9252 (SB_DFFE): \clock.counterO [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9305 (SB_DFF): \clock.counterI [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11272 (SB_DFF): \encoderL.encoderCount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9307 (SB_DFF): \clock.counterI [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9308 (SB_DFF): \clock.counterI [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9309 (SB_DFF): \clock.counterI [31] = 0

9.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in hardware.
  Merging $auto$simplemap.cc:277:simplemap_mux$11141 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10312 (A=$procmux$6820_Y, B=1'1, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10314 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10243 (A=$procmux$6799_Y [2], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10317 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10244 (A=$procmux$6799_Y [3], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10318 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10245 (A=$procmux$6799_Y [4], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10319 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10246 (A=$procmux$6799_Y [5], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10247 (A=$procmux$6799_Y [6], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10248 (A=$procmux$6799_Y [7], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10249 (A=$procmux$6799_Y [8], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10250 (A=$procmux$6799_Y [9], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10251 (A=$procmux$6799_Y [10], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10252 (A=$procmux$6799_Y [11], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10326 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10253 (A=$procmux$6799_Y [12], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10327 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10254 (A=$procmux$6799_Y [13], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10328 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10255 (A=$procmux$6799_Y [14], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10329 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10256 (A=$procmux$6799_Y [15], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10330 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10257 (A=$procmux$6799_Y [16], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10331 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10258 (A=$procmux$6799_Y [17], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10332 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10259 (A=$procmux$6799_Y [18], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10333 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10260 (A=$procmux$6799_Y [19], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10334 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10261 (A=$procmux$6799_Y [20], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10335 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10262 (A=$procmux$6799_Y [21], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10336 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10263 (A=$procmux$6799_Y [22], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10337 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10264 (A=$procmux$6799_Y [23], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10265 (A=$procmux$6799_Y [24], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10266 (A=$procmux$6799_Y [25], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10267 (A=$procmux$6799_Y [26], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10268 (A=$procmux$6799_Y [27], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10269 (A=$procmux$6799_Y [28], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10343 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10270 (A=$procmux$6799_Y [29], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10344 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10271 (A=$procmux$6799_Y [30], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10272 (A=$procmux$6799_Y [31], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10346 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10241 (A=$procmux$6799_Y [0], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10315 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9999 (A=1'0, B=$auto$simplemap.cc:168:logic_reduce$11774, S=$logic_and$hardware.v:149$14_Y) into $auto$simplemap.cc:420:simplemap_dff$10507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9997 (A=1'0, B=$auto$simplemap.cc:168:logic_reduce$11774, S=$logic_and$hardware.v:159$19_Y) into $auto$simplemap.cc:420:simplemap_dff$10508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10629 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10580 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10630 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10581 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10631 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10582 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10632 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10583 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10633 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10584 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10634 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10585 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10635 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10586 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10636 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10637 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10659 (A=1'0, B=$techmap\pwmIF.$procmux$2703_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10591 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10628 (A=1'0, B=$techmap\pwmIF.$procmux$2711_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10579 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10623 (A=1'1, B=$techmap\pwmIF.$procmux$2724_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10589 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10660 (A=1'0, B=$techmap\pwmIF.$procmux$2703_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10592 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10661 (A=1'0, B=$techmap\pwmIF.$procmux$2703_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10593 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10662 (A=1'0, B=$techmap\pwmIF.$procmux$2703_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10594 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10663 (A=1'0, B=$techmap\pwmIF.$procmux$2703_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10595 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10664 (A=1'0, B=$techmap\pwmIF.$procmux$2703_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10596 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10825 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10776 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10658 (A=1'0, B=$techmap\pwmIF.$procmux$2703_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10590 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10722 (A=1'0, B=$techmap\pwmIF.$3\state[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10826 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10777 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10827 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10778 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10828 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10779 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10829 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10780 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10830 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10781 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10831 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10782 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10832 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10783 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10833 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10784 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10855 (A=1'0, B=$techmap\pwmIB.$procmux$2703_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10787 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10824 (A=1'0, B=$techmap\pwmIB.$procmux$2711_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10775 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10819 (A=1'1, B=$techmap\pwmIB.$procmux$2724_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10785 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10856 (A=1'0, B=$techmap\pwmIB.$procmux$2703_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10788 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10857 (A=1'0, B=$techmap\pwmIB.$procmux$2703_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10789 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10858 (A=1'0, B=$techmap\pwmIB.$procmux$2703_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10790 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10859 (A=1'0, B=$techmap\pwmIB.$procmux$2703_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10791 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10860 (A=1'0, B=$techmap\pwmIB.$procmux$2703_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10792 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10980 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10931 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10854 (A=1'0, B=$techmap\pwmIB.$procmux$2703_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10786 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10982 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10933 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11310 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11278 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10918 (A=1'0, B=$techmap\pwmIB.$3\state[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10818 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10983 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10934 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10984 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10935 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10985 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10936 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10986 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10937 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10987 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10938 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10988 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10939 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11010 (A=1'0, B=$techmap\pwmDF.$procmux$2703_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10942 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10979 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10930 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10974 (A=1'1, B=$techmap\pwmDF.$procmux$2724_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10940 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11011 (A=1'0, B=$techmap\pwmDF.$procmux$2703_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10943 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11012 (A=1'0, B=$techmap\pwmDF.$procmux$2703_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10944 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11013 (A=1'0, B=$techmap\pwmDF.$procmux$2703_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10945 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11014 (A=1'0, B=$techmap\pwmDF.$procmux$2703_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10946 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11015 (A=1'0, B=$techmap\pwmDF.$procmux$2703_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10947 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9356 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [14], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9292 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11009 (A=1'0, B=$techmap\pwmDF.$procmux$2703_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10941 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11309 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11277 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11143 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11094 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11140 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11073 (A=1'0, B=$techmap\pwmDF.$3\state[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10973 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11144 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11095 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11145 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11096 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11146 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11097 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11147 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11098 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11148 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11099 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11170 (A=1'0, B=$techmap\pwmDB.$procmux$2703_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11102 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11139 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11134 (A=1'1, B=$techmap\pwmDB.$procmux$2724_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11100 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11171 (A=1'0, B=$techmap\pwmDB.$procmux$2703_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11103 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11172 (A=1'0, B=$techmap\pwmDB.$procmux$2703_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11104 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11173 (A=1'0, B=$techmap\pwmDB.$procmux$2703_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11105 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11174 (A=1'0, B=$techmap\pwmDB.$procmux$2703_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11106 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11175 (A=1'0, B=$techmap\pwmDB.$procmux$2703_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11107 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12196 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$26638) into $auto$simplemap.cc:420:simplemap_dff$12138 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11169 (A=1'0, B=$techmap\pwmDB.$procmux$2703_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11101 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19685 (A=1'0, B=\soc.cpu.cpu_state [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15915 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11308 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11276 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11440 (A=1'0, B=$techmap\encoderL.$procmux$2670_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11244 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11441 (A=1'0, B=$techmap\encoderL.$procmux$2670_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11439 (A=1'0, B=$techmap\encoderL.$procmux$2670_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11442 (A=1'0, B=$techmap\encoderL.$procmux$2670_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11280 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11248 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11281 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11249 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11233 (A=1'0, B=$techmap\pwmDB.$3\state[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11133 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11285 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11253 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11288 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11256 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11289 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11257 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11290 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11258 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11291 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11259 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11292 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11260 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11293 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11261 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11294 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11262 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11295 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11263 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11296 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11264 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11297 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11265 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11298 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11266 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11299 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11267 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11300 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11268 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11301 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11269 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17063 (A=1'0, B=$techmap\soc.cpu.$procmux$4675_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15293 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16427 (A=$techmap$techmap\soc.cpu.$procmux$5283.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16421_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2103_Y) into $auto$simplemap.cc:420:simplemap_dff$15292 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11305 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11273 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11504 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11472 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11507 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11475 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11279 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11247 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11283 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11251 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11142 (A=1'0, B=$techmap\pwmDB.$procmux$2711_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11093 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10981 (A=1'0, B=$techmap\pwmDF.$procmux$2711_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$10932 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11306 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11274 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11509 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11477 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11665 (A=1'0, B=$techmap\encoderR.$procmux$2670_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11469 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11666 (A=1'0, B=$techmap\encoderR.$procmux$2670_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11470 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11664 (A=1'0, B=$techmap\encoderR.$procmux$2670_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11468 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9353 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [11], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9289 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11505 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11473 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11307 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11275 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11506 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11474 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11516 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11484 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11508 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11476 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9352 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [10], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9288 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11513 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11481 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11514 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11482 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11515 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11483 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11522 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11490 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11518 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11486 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11510 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11478 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11520 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11488 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11517 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11485 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11521 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11489 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11512 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11480 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11524 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11492 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11519 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11487 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11526 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11494 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11523 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11491 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11527 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11495 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11528 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11496 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11529 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11497 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11530 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11498 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11531 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11499 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11534 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11502 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11525 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11493 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11532 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11500 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11282 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11250 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11533 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11501 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9367 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [25], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9303 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10242 (A=$procmux$6799_Y [1], B=1'0, S=$logic_and$hardware.v:213$44_Y) into $auto$simplemap.cc:420:simplemap_dff$10316 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9366 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [24], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9302 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15948 (A=1'0, B=$techmap\soc.cpu.$procmux$5551_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15171 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18736 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18749 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18656 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18657 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19307 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15533 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19320 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19322 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19332 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9342 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$70454, S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9278 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11303 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11271 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16605 (A=$techmap\soc.cpu.$procmux$5207_Y, B=1'0, S=\soc.cpu.clear_prefetched_high_word) into $auto$simplemap.cc:420:simplemap_dff$15220 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16602 (A=\soc.cpu.mem_la_read, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2103_Y) into $auto$simplemap.cc:420:simplemap_dff$15221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16578 (A=$techmap$techmap\soc.cpu.$procmux$5225.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16598_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2103_Y) into $auto$simplemap.cc:420:simplemap_dff$15222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18720 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15723 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18721 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15724 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18722 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15725 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18723 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15726 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18724 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15727 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18725 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15728 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18726 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15729 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18727 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15730 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18728 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15731 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18729 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15732 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18730 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18731 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15734 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18732 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15735 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18733 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15736 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18734 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18735 (A=1'1, B=$techmap\soc.cpu.$procmux$4268_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18737 (A=1'1, B=$techmap\soc.cpu.$procmux$4268_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18738 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18739 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18740 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18741 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18743 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18744 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18745 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18747 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18748 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18750 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18659 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18660 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11302 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11270 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11287 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11255 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17078 (A=1'0, B=$techmap\soc.cpu.$procmux$4632_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15296 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11286 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11254 (SB_DFF).
  Merging $auto$simplemap.cc:311:simplemap_lut$14782 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$14778 [1], S=\soc.cpu.mem_rdata_latched [1]) into $auto$simplemap.cc:420:simplemap_dff$15304 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18661 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18662 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15761 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18664 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15763 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18665 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15764 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18666 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15765 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18667 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15766 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18668 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15767 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18670 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15769 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18671 (A=1'1, B=$auto$alumacc.cc:474:replace_alu$7652.AA [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15770 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18672 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15771 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18673 (A=1'1, B=$auto$alumacc.cc:474:replace_alu$7652.AA [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15772 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18675 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15774 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18676 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15775 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18677 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15776 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18678 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15777 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18679 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15778 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18681 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15780 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18683 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15782 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18684 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15783 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18685 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15784 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18686 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15785 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18336 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15787 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18337 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15788 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18338 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15789 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18339 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15790 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18340 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15791 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18341 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15792 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18342 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15793 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18343 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15794 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18344 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15795 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18345 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15796 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27978 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17032_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18346 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15797 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18347 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15798 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18348 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15799 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18349 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15800 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18350 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15801 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18351 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15802 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18352 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15803 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18353 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15804 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18354 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15805 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18356 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15807 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27989 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17043_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15349 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18358 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15809 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27991 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17045_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15351 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18359 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15810 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18360 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15811 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18361 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15812 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18362 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15813 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18363 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15814 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18364 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15815 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18366 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15817 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27999 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17053_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15359 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18368 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15819 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28001 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17055_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15361 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18370 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15821 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28003 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17057_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15363 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18372 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15823 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18373 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15824 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18374 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15825 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18376 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15827 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18377 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15828 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18378 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15829 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18379 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15830 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18380 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15831 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18381 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15832 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18382 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15833 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18383 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15834 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18384 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15835 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18385 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15836 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18387 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15838 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18388 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15839 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18389 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15840 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18390 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15841 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18391 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15842 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16825 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1058$2304_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15398 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16823 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1057$2300_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15399 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16821 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1056$2296_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15400 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16819 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1055$2292_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15401 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16817 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1054$2288_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15402 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16815 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1053$2284_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15403 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16813 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1052$2280_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15404 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16811 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1051$2276_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15405 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16809 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1050$2272_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15406 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16807 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1049$2268_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15407 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16802 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1043$2252_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15411 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16800 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1042$2250_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15412 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16798 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1041$2248_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15413 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16796 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1040$2246_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15414 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16794 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1039$2244_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15415 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16792 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1038$2242_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15416 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16782 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1026$2224_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15425 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16780 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1025$2222_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15426 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16778 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1024$2220_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15427 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16776 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1023$2218_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15428 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16774 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1022$2216_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15429 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16772 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1021$2214_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15430 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18392 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15843 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18393 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15844 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18394 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15845 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18395 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15846 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18396 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15847 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20402 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15854 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20403 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15855 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20413 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15865 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20414 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15866 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20415 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15867 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20416 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15868 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20417 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15869 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20418 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15870 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18277 (A=$techmap\soc.cpu.$1\clear_prefetched_high_word[0:0], B=1'1, S=$techmap\soc.cpu.$logic_or$picorv32.v:1277$2432_Y) into $auto$simplemap.cc:420:simplemap_dff$15467 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20419 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15871 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20420 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15872 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20421 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15873 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20422 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15874 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20423 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15875 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20424 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15876 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20425 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15877 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20426 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15878 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20427 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15879 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20428 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15880 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20429 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15881 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20430 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15882 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20431 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15883 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20432 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15884 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20433 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15885 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20434 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15886 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20435 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15887 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20436 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15888 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20437 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15889 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20439 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15891 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20440 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15892 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20441 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15893 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20443 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15895 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20444 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15896 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20445 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15897 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20446 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15898 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20447 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15899 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20448 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15900 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20449 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15901 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11284 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11252 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19728 (A=1'0, B=$techmap\soc.cpu.$procmux$3305_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15500 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19733 (A=1'0, B=$techmap\soc.cpu.$logic_not$picorv32.v:1401$2470_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15501 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20450 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15902 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20451 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15903 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20452 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15904 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19677 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$70796, S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2467_Y) into $auto$simplemap.cc:420:simplemap_dff$15502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20453 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15905 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20455 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15907 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20456 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15908 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19661 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3552.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16192_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20457 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15909 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19658 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3552.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16189_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19655 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3578.$and$/usr/local/bin/../share/yosys/techmap.v:434$16405_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19652 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3591.$and$/usr/local/bin/../share/yosys/techmap.v:434$16405_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15513 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19643 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3649.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16421_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15515 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19641 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3685.$and$/usr/local/bin/../share/yosys/techmap.v:434$16405_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15516 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19635 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3692.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$19475_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15517 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20458 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15910 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19629 (A=1'0, B=$techmap\soc.cpu.$eq$picorv32.v:1518$2516_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15518 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19725 (A=1'0, B=$techmap\soc.cpu.$procmux$3316_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15520 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19738 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_wdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15522 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19737 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_rdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15523 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19460 (A=$techmap\soc.cpu.$procmux$4040_Y, B=1'1, S=$techmap\soc.cpu.$0\set_mem_do_rinst[0:0]) into $auto$simplemap.cc:420:simplemap_dff$15524 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19453 (A=$techmap\soc.cpu.$logic_and$picorv32.v:1551$2533_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:1920$2648_Y) into $auto$simplemap.cc:420:simplemap_dff$15525 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20459 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15911 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20461 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15913 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19303 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15529 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19304 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15530 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19305 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15531 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19306 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15532 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19308 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15534 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19309 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15535 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19310 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15536 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19311 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15537 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19312 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15538 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19313 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15539 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19314 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15540 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19315 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19316 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15542 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19317 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15543 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19318 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19319 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19321 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19323 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19324 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19325 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19326 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19327 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19328 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19329 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19330 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19331 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19302 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15528 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19333 (A=1'0, B=$techmap\soc.cpu.$procmux$4112_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19740 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16404_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15561 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19742 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15563 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19743 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15564 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19744 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15565 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19745 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15566 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19746 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15567 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19747 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15568 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19748 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15569 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19749 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15570 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19750 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15571 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19751 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15572 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19752 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15573 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19753 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19754 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15575 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19755 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15576 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19756 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15577 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19757 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15578 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19758 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15579 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19759 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15580 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19760 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15581 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19761 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15582 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19762 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15583 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19763 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15584 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19764 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15585 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19765 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15586 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19766 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19767 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19768 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19769 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15590 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19739 (A=1'0, B=$techmap\soc.cpu.$5\next_irq_pending[31:0] [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19770 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2495_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15591 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19207 (A=1'1, B=\soc.cpu.cpuregs_rs1 [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15593 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19208 (A=1'1, B=\soc.cpu.cpuregs_rs1 [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15594 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19209 (A=1'1, B=\soc.cpu.cpuregs_rs1 [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15595 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19210 (A=1'1, B=\soc.cpu.cpuregs_rs1 [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15596 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19211 (A=1'1, B=\soc.cpu.cpuregs_rs1 [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15597 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19212 (A=1'1, B=\soc.cpu.cpuregs_rs1 [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15598 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19213 (A=1'1, B=\soc.cpu.cpuregs_rs1 [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15599 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19214 (A=1'1, B=\soc.cpu.cpuregs_rs1 [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15600 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19215 (A=1'1, B=\soc.cpu.cpuregs_rs1 [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15601 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19216 (A=1'1, B=\soc.cpu.cpuregs_rs1 [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15602 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19217 (A=1'1, B=\soc.cpu.cpuregs_rs1 [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15603 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19218 (A=1'1, B=\soc.cpu.cpuregs_rs1 [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15604 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19219 (A=1'1, B=\soc.cpu.cpuregs_rs1 [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15605 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19220 (A=1'1, B=\soc.cpu.cpuregs_rs1 [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15606 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19221 (A=1'1, B=\soc.cpu.cpuregs_rs1 [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15607 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19222 (A=1'1, B=\soc.cpu.cpuregs_rs1 [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15608 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19223 (A=1'1, B=\soc.cpu.cpuregs_rs1 [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15609 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19224 (A=1'1, B=\soc.cpu.cpuregs_rs1 [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15610 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19225 (A=1'1, B=\soc.cpu.cpuregs_rs1 [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15611 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19226 (A=1'1, B=\soc.cpu.cpuregs_rs1 [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15612 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19227 (A=1'1, B=\soc.cpu.cpuregs_rs1 [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15613 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19228 (A=1'1, B=\soc.cpu.cpuregs_rs1 [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15614 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19229 (A=1'1, B=\soc.cpu.cpuregs_rs1 [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15615 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19230 (A=1'1, B=\soc.cpu.cpuregs_rs1 [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15616 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19231 (A=1'1, B=\soc.cpu.cpuregs_rs1 [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15617 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19232 (A=1'1, B=\soc.cpu.cpuregs_rs1 [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15618 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19233 (A=1'1, B=\soc.cpu.cpuregs_rs1 [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19234 (A=1'1, B=\soc.cpu.cpuregs_rs1 [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15620 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19235 (A=1'1, B=\soc.cpu.cpuregs_rs1 [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19236 (A=1'1, B=\soc.cpu.cpuregs_rs1 [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19206 (A=1'1, B=\soc.cpu.cpuregs_rs1 [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15592 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19203 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4149.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16407_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19198 (A=1'0, B=\soc.cpu.irq_active, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19237 (A=1'1, B=\soc.cpu.cpuregs_rs1 [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19689 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19690 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19691 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19692 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15630 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19693 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19694 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19695 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19696 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19697 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19698 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15636 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19699 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19700 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19701 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19702 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19703 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19704 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19705 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15643 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19706 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19707 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15645 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19708 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15646 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19709 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15647 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19710 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15648 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19711 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15649 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19712 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15650 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19713 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15651 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19714 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15652 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19715 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15653 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19716 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15654 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19717 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15655 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19718 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15656 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19688 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19719 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3445.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15657 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16579 (A=$techmap$techmap\soc.cpu.$procmux$5225.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16599_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2103_Y) into $auto$simplemap.cc:420:simplemap_dff$15223 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18742 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18746 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18719 (A=1'0, B=$techmap\soc.cpu.$procmux$4268_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15722 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18658 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18663 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15762 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18669 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15768 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18674 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15773 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18680 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15779 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18682 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7652.AA [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15781 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18655 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7658.BB [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15754 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27979 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17033_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27980 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17034_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27981 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17035_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27982 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17036_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27983 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17037_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15343 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27984 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17038_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15344 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27985 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17039_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27986 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17040_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15346 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27987 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17041_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15347 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27988 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17042_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15348 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18355 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15806 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27990 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17044_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15350 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18357 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15808 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27992 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17046_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15352 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27993 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17047_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15353 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27994 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17048_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15354 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27995 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17049_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15355 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27996 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17050_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15356 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27997 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17051_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15357 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$27998 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17052_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15358 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18365 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15816 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28000 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17054_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15360 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18367 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15818 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28002 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17056_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15362 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18369 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15820 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28004 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17058_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15364 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18371 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15822 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28005 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17059_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15365 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28006 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17060_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15366 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28007 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17061_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15367 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18375 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15826 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$28008 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17062_Y, S=$techmap$techmap\soc.cpu.$procmux$4680.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$17024_Y) into $auto$simplemap.cc:420:simplemap_dff$15368 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16953 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4698.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16185_Y [5], S=$auto$simplemap.cc:309:simplemap_lut$14781) into $auto$simplemap.cc:420:simplemap_dff$15374 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18386 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15837 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17217 (A=$techmap\soc.cpu.$procmux$4444_Y, B=1'0, S=$auto$simplemap.cc:309:simplemap_lut$14781) into $auto$simplemap.cc:420:simplemap_dff$15380 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18397 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15848 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18335 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$70777, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15786 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18398 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2529_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15849 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20399 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15851 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20400 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15852 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20401 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15853 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20404 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15856 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20405 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15857 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20406 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15858 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20407 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15859 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20408 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15860 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20409 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15861 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20410 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15862 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20411 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15863 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20412 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15864 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20438 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15890 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20442 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15894 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19678 (A=1'1, B=$auto$wreduce.cc:454:run$7244 [1], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2467_Y) into $auto$simplemap.cc:420:simplemap_dff$15503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19679 (A=1'1, B=$auto$wreduce.cc:454:run$7244 [2], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2467_Y) into $auto$simplemap.cc:420:simplemap_dff$15504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19680 (A=1'1, B=$auto$wreduce.cc:454:run$7244 [3], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2467_Y) into $auto$simplemap.cc:420:simplemap_dff$15505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19659 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3552.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16190_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20454 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15906 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19660 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3552.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16191_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19662 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3552.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16193_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19663 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3552.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$16194_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19630 (A=1'0, B=$techmap\soc.cpu.$ternary$picorv32.v:1519$2519_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15519 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20460 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2471_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15912 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20398 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$70758, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15850 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18328 (A=1'0, B=$techmap\soc.cpu.$procmux$4342_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15914 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22301 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22169 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22302 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22170 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22303 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22171 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22304 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22172 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22305 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22173 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22306 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22174 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22307 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22175 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22316 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22176 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22317 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22177 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22318 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22178 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22319 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22179 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22320 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22321 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22322 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22323 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22332 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22184 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22333 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22334 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22335 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22336 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22337 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22338 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22339 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22348 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22349 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22193 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22350 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22351 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22352 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22196 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22353 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22354 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22300 (A=1'1, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22168 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22432 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5840_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22200 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22355 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22409 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22410 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22411 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22412 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22413 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22414 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22408 (A=1'0, B=\soc.simpleuart.recv_pattern [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22415 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22385 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22386 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22387 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22388 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22389 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22390 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22215 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22384 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22391 (A=1'0, B=\uart_in, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22216 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22437 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22438 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22439 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22440 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22441 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22442 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22443 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22224 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22444 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22225 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22445 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22226 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22446 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22227 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22447 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22228 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22448 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22229 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22449 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22230 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22450 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22231 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22451 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22232 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22452 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22233 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22453 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22234 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22454 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22235 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22455 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22236 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22456 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22237 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22457 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22238 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22458 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22239 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22459 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22240 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22460 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22241 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22461 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22242 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22462 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22243 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22463 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22244 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22464 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22245 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22465 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22246 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22466 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22247 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22436 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22467 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5826.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$18292_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22248 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22365 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5868.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16238_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22250 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22366 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5868.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16238_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22251 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22364 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5868.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16238_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22249 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22595 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5796_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22253 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22367 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5868.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16238_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22252 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22599 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22255 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22600 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22256 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22601 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22257 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22602 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22258 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22603 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22259 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22604 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22260 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22605 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22261 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22606 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22262 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22607 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22263 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22608 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22264 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22609 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22265 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22610 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22266 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22611 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22267 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22612 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22268 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22613 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22269 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22614 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22270 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22615 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22271 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22616 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22272 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22617 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22273 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22618 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22274 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22619 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22275 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22620 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22276 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22621 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22277 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22622 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22278 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22623 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22279 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22624 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22280 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22625 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22281 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22626 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22282 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22627 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22283 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22628 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22284 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22598 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22254 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22629 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5788_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22285 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22580 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5807_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22287 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22581 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5807_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22288 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22579 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5807_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22286 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22582 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5807_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22289 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22540 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22291 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22541 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22292 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22542 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22293 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22543 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22294 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22544 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22295 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22545 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22296 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22546 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22297 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22547 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22298 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22539 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5818_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22290 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23219 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23220 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9370 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [28], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9306 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23216 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23214 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23068 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23221 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23207 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23070 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23208 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23071 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23206 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23069 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23209 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23072 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23199 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23074 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23200 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23198 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23073 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23196 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23194 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23192 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23079 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23190 (A=1'1, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23080 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23226 (A=1'1, B=$techmap\soc.spimemio.$logic_or$spimemio.v:100$67_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23081 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$26603 (A=$techmap\soc.spimemio.xfer.$2\flash_io3_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$26940) into $auto$simplemap.cc:420:simplemap_dff$23082 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$26601 (A=$techmap\soc.spimemio.xfer.$2\flash_io2_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$26940) into $auto$simplemap.cc:420:simplemap_dff$23083 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$26600 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$6190.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16404_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$26940) into $auto$simplemap.cc:420:simplemap_dff$23084 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$26598 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$6138.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16404_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$26940) into $auto$simplemap.cc:420:simplemap_dff$23085 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$23201 (A=1'1, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23483 (A=$techmap\soc.spimemio.$procmux$6325_Y [1], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23087 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23484 (A=$techmap\soc.spimemio.$procmux$6325_Y [2], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23088 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23482 (A=$techmap\soc.spimemio.$procmux$6325_Y [0], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23086 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23479 (A=$techmap\soc.spimemio.$procmux$6340_Y, B=1'0, S=\soc.spimemio.jump) into $auto$simplemap.cc:420:simplemap_dff$23090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23476 (A=\soc.spimemio.rd_inc, B=1'0, S=\soc.spimemio.valid) into $auto$simplemap.cc:420:simplemap_dff$23091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23472 (A=$techmap\soc.spimemio.$procmux$6356_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23485 (A=$techmap\soc.spimemio.$procmux$6325_Y [3], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23413 (A=$techmap\soc.spimemio.$procmux$6415_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23141 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23408 (A=$techmap\soc.spimemio.$procmux$6434_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23142 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23403 (A=$techmap\soc.spimemio.$procmux$6453_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23143 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23380 (A=$techmap$techmap\soc.spimemio.$procmux$6463.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$23396_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23145 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23381 (A=$techmap$techmap\soc.spimemio.$procmux$6463.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$23397_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23146 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23379 (A=$techmap$techmap\soc.spimemio.$procmux$6463.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$23395_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23144 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23382 (A=$techmap$techmap\soc.spimemio.$procmux$6463.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$23398_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23147 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23417 (A=$techmap$techmap\soc.spimemio.$procmux$6370.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16417_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23611 (A=$techmap\soc.spimemio.$procmux$6273_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$89_Y) into $auto$simplemap.cc:420:simplemap_dff$23157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24055 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$14330, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1070_Y) into $auto$simplemap.cc:420:simplemap_dff$23852 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24054 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$14340, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1070_Y) into $auto$simplemap.cc:420:simplemap_dff$23853 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24053 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$14350, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1070_Y) into $auto$simplemap.cc:420:simplemap_dff$23854 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24052 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$14860, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1070_Y) into $auto$simplemap.cc:420:simplemap_dff$23855 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24597 (A=1'0, B=\soc.cpu.pcpi_div.start, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23859 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24534 (A=\soc.cpu.pcpi_div.quotient_msk [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23861 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24535 (A=\soc.cpu.pcpi_div.quotient_msk [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23862 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24536 (A=\soc.cpu.pcpi_div.quotient_msk [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23863 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24537 (A=\soc.cpu.pcpi_div.quotient_msk [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23864 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24538 (A=\soc.cpu.pcpi_div.quotient_msk [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23865 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24539 (A=\soc.cpu.pcpi_div.quotient_msk [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23866 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24540 (A=\soc.cpu.pcpi_div.quotient_msk [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23867 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24541 (A=\soc.cpu.pcpi_div.quotient_msk [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23868 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24542 (A=\soc.cpu.pcpi_div.quotient_msk [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23869 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24543 (A=\soc.cpu.pcpi_div.quotient_msk [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23870 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24544 (A=\soc.cpu.pcpi_div.quotient_msk [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23871 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24545 (A=\soc.cpu.pcpi_div.quotient_msk [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23872 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24546 (A=\soc.cpu.pcpi_div.quotient_msk [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23873 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24547 (A=\soc.cpu.pcpi_div.quotient_msk [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23874 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24548 (A=\soc.cpu.pcpi_div.quotient_msk [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23875 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24549 (A=\soc.cpu.pcpi_div.quotient_msk [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23876 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24550 (A=\soc.cpu.pcpi_div.quotient_msk [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23877 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24551 (A=\soc.cpu.pcpi_div.quotient_msk [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23878 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24552 (A=\soc.cpu.pcpi_div.quotient_msk [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23879 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24553 (A=\soc.cpu.pcpi_div.quotient_msk [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23880 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24554 (A=\soc.cpu.pcpi_div.quotient_msk [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23881 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24555 (A=\soc.cpu.pcpi_div.quotient_msk [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23882 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24556 (A=\soc.cpu.pcpi_div.quotient_msk [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23883 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24557 (A=\soc.cpu.pcpi_div.quotient_msk [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23884 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24558 (A=\soc.cpu.pcpi_div.quotient_msk [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23885 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24559 (A=\soc.cpu.pcpi_div.quotient_msk [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23886 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24560 (A=\soc.cpu.pcpi_div.quotient_msk [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23887 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24561 (A=\soc.cpu.pcpi_div.quotient_msk [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23888 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24562 (A=\soc.cpu.pcpi_div.quotient_msk [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23889 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24563 (A=\soc.cpu.pcpi_div.quotient_msk [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23890 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24533 (A=\soc.cpu.pcpi_div.quotient_msk [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23860 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24406 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23893 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24407 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23894 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24408 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23895 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24409 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23896 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24410 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23897 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24411 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23898 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24412 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23899 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24413 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23900 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24414 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23901 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24415 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23902 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24416 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23903 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24417 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23904 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24418 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23905 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24419 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23906 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24420 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23907 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24421 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23908 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24422 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23909 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24423 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23910 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24424 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23911 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24425 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23912 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24426 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23913 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24427 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23914 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24428 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23915 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24429 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23916 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24430 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23917 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24431 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23918 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24432 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23919 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24433 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23920 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24434 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23921 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24435 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23922 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24405 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [0], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23892 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24436 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1101_Y [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23923 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24248 (A=\soc.cpu.pcpi_div.divisor [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23925 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24249 (A=\soc.cpu.pcpi_div.divisor [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23926 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24250 (A=\soc.cpu.pcpi_div.divisor [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23927 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24251 (A=\soc.cpu.pcpi_div.divisor [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23928 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24252 (A=\soc.cpu.pcpi_div.divisor [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23929 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24253 (A=\soc.cpu.pcpi_div.divisor [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23930 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24254 (A=\soc.cpu.pcpi_div.divisor [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23931 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24255 (A=\soc.cpu.pcpi_div.divisor [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23932 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24256 (A=\soc.cpu.pcpi_div.divisor [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23933 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24257 (A=\soc.cpu.pcpi_div.divisor [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23934 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24258 (A=\soc.cpu.pcpi_div.divisor [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23935 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24259 (A=\soc.cpu.pcpi_div.divisor [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23936 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24260 (A=\soc.cpu.pcpi_div.divisor [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23937 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24261 (A=\soc.cpu.pcpi_div.divisor [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23938 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24262 (A=\soc.cpu.pcpi_div.divisor [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23939 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24263 (A=\soc.cpu.pcpi_div.divisor [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23940 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24264 (A=\soc.cpu.pcpi_div.divisor [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23941 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24265 (A=\soc.cpu.pcpi_div.divisor [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23942 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24266 (A=\soc.cpu.pcpi_div.divisor [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23943 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24267 (A=\soc.cpu.pcpi_div.divisor [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23944 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24268 (A=\soc.cpu.pcpi_div.divisor [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23945 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24269 (A=\soc.cpu.pcpi_div.divisor [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23946 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24270 (A=\soc.cpu.pcpi_div.divisor [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23947 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24271 (A=\soc.cpu.pcpi_div.divisor [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23948 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24272 (A=\soc.cpu.pcpi_div.divisor [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23949 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24273 (A=\soc.cpu.pcpi_div.divisor [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23950 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24274 (A=\soc.cpu.pcpi_div.divisor [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23951 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24275 (A=\soc.cpu.pcpi_div.divisor [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23952 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24276 (A=\soc.cpu.pcpi_div.divisor [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23953 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24277 (A=\soc.cpu.pcpi_div.divisor [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23954 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24247 (A=\soc.cpu.pcpi_div.divisor [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23924 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24309 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$shl$picorv32.v:2403$1085_Y [62], S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$23986 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25402 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$14298, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$978_Y) into $auto$simplemap.cc:420:simplemap_dff$25090 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25401 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$14308, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$978_Y) into $auto$simplemap.cc:420:simplemap_dff$25091 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25400 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$14318, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$978_Y) into $auto$simplemap.cc:420:simplemap_dff$25092 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24604 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$procmux$5605_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$24051 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25394 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$5772_Y, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$978_Y) into $auto$simplemap.cc:420:simplemap_dff$25093 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25885 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$5705_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$25095 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25882 (A=1'1, B=$techmap\soc.cpu.pcpi_mul.$procmux$5713_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$25096 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25876 (A=$auto$wreduce.cc:454:run$7258 [1], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25098 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25877 (A=$auto$wreduce.cc:454:run$7258 [2], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25099 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25878 (A=$auto$wreduce.cc:454:run$7258 [3], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25100 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25879 (A=$auto$wreduce.cc:454:run$7258 [4], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25101 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25875 (A=$auto$simplemap.cc:309:simplemap_lut$71024, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25097 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25881 (A=$auto$wreduce.cc:454:run$7258 [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25103 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25853 (A=\soc.cpu.pcpi_mul.next_rdt [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25854 (A=\soc.cpu.pcpi_mul.next_rdt [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25112 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25855 (A=\soc.cpu.pcpi_mul.next_rdt [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25116 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25856 (A=\soc.cpu.pcpi_mul.next_rdt [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25120 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25857 (A=\soc.cpu.pcpi_mul.next_rdt [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25124 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25858 (A=\soc.cpu.pcpi_mul.next_rdt [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25128 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25859 (A=\soc.cpu.pcpi_mul.next_rdt [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25132 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25860 (A=\soc.cpu.pcpi_mul.next_rdt [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25136 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25861 (A=\soc.cpu.pcpi_mul.next_rdt [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25140 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25862 (A=\soc.cpu.pcpi_mul.next_rdt [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25144 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25863 (A=\soc.cpu.pcpi_mul.next_rdt [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25148 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25864 (A=\soc.cpu.pcpi_mul.next_rdt [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25152 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25865 (A=\soc.cpu.pcpi_mul.next_rdt [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25156 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25866 (A=\soc.cpu.pcpi_mul.next_rdt [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25160 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25867 (A=\soc.cpu.pcpi_mul.next_rdt [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25164 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25726 (A=\soc.cpu.pcpi_mul.next_rd [1], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25169 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25727 (A=\soc.cpu.pcpi_mul.next_rd [2], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25170 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25728 (A=\soc.cpu.pcpi_mul.next_rd [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25171 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25729 (A=$auto$simplemap.cc:309:simplemap_lut$71176, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25172 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25730 (A=\soc.cpu.pcpi_mul.next_rd [5], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25173 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25731 (A=\soc.cpu.pcpi_mul.next_rd [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25174 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25732 (A=\soc.cpu.pcpi_mul.next_rd [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25175 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25733 (A=$auto$simplemap.cc:309:simplemap_lut$71100, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25176 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25734 (A=\soc.cpu.pcpi_mul.next_rd [9], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25177 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25735 (A=\soc.cpu.pcpi_mul.next_rd [10], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25178 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25736 (A=\soc.cpu.pcpi_mul.next_rd [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25179 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25737 (A=$auto$simplemap.cc:309:simplemap_lut$71195, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25738 (A=\soc.cpu.pcpi_mul.next_rd [13], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25739 (A=\soc.cpu.pcpi_mul.next_rd [14], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25740 (A=\soc.cpu.pcpi_mul.next_rd [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25741 (A=$auto$simplemap.cc:309:simplemap_lut$71233, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25184 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25742 (A=\soc.cpu.pcpi_mul.next_rd [17], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25743 (A=\soc.cpu.pcpi_mul.next_rd [18], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25744 (A=\soc.cpu.pcpi_mul.next_rd [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25745 (A=$auto$simplemap.cc:309:simplemap_lut$71214, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25746 (A=\soc.cpu.pcpi_mul.next_rd [21], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25747 (A=\soc.cpu.pcpi_mul.next_rd [22], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25748 (A=\soc.cpu.pcpi_mul.next_rd [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25749 (A=$auto$simplemap.cc:309:simplemap_lut$71271, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25750 (A=\soc.cpu.pcpi_mul.next_rd [25], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25193 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25751 (A=\soc.cpu.pcpi_mul.next_rd [26], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25752 (A=\soc.cpu.pcpi_mul.next_rd [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25753 (A=$auto$simplemap.cc:309:simplemap_lut$71252, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25196 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25754 (A=\soc.cpu.pcpi_mul.next_rd [29], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25755 (A=\soc.cpu.pcpi_mul.next_rd [30], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25756 (A=\soc.cpu.pcpi_mul.next_rd [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25757 (A=$auto$simplemap.cc:309:simplemap_lut$71290, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25758 (A=\soc.cpu.pcpi_mul.next_rd [33], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25759 (A=\soc.cpu.pcpi_mul.next_rd [34], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25760 (A=\soc.cpu.pcpi_mul.next_rd [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25761 (A=$auto$simplemap.cc:309:simplemap_lut$71328, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25762 (A=\soc.cpu.pcpi_mul.next_rd [37], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25763 (A=\soc.cpu.pcpi_mul.next_rd [38], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25764 (A=\soc.cpu.pcpi_mul.next_rd [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25765 (A=$auto$simplemap.cc:309:simplemap_lut$71081, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25766 (A=\soc.cpu.pcpi_mul.next_rd [41], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25767 (A=\soc.cpu.pcpi_mul.next_rd [42], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25768 (A=\soc.cpu.pcpi_mul.next_rd [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25769 (A=$auto$simplemap.cc:309:simplemap_lut$71043, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25770 (A=\soc.cpu.pcpi_mul.next_rd [45], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25771 (A=\soc.cpu.pcpi_mul.next_rd [46], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25772 (A=\soc.cpu.pcpi_mul.next_rd [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25215 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25773 (A=$auto$simplemap.cc:309:simplemap_lut$71062, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25216 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25774 (A=\soc.cpu.pcpi_mul.next_rd [49], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25217 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25775 (A=\soc.cpu.pcpi_mul.next_rd [50], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25218 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25776 (A=\soc.cpu.pcpi_mul.next_rd [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25219 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25777 (A=$auto$simplemap.cc:309:simplemap_lut$71309, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25220 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25778 (A=\soc.cpu.pcpi_mul.next_rd [53], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25779 (A=\soc.cpu.pcpi_mul.next_rd [54], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25780 (A=\soc.cpu.pcpi_mul.next_rd [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25223 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25781 (A=$auto$simplemap.cc:309:simplemap_lut$71138, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25224 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25782 (A=\soc.cpu.pcpi_mul.next_rd [57], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25783 (A=\soc.cpu.pcpi_mul.next_rd [58], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25784 (A=\soc.cpu.pcpi_mul.next_rd [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25785 (A=$auto$simplemap.cc:309:simplemap_lut$71157, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25228 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25786 (A=\soc.cpu.pcpi_mul.next_rd [61], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25229 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25787 (A=\soc.cpu.pcpi_mul.next_rd [62], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25230 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25725 (A=$auto$simplemap.cc:309:simplemap_lut$71119, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25168 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25788 (A=\soc.cpu.pcpi_mul.next_rd [63], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25596 (A=1'0, B=\soc.cpu.reg_op2 [0], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25530 (A=1'0, B=$auto$wreduce.cc:454:run$7256 [63], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$25359 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26304 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$26312) into $auto$simplemap.cc:420:simplemap_dff$26302 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$26872 (A=1'0, B=\soc.spimemio.din_tag [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26563 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26873 (A=1'0, B=\soc.spimemio.din_tag [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26564 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26874 (A=1'0, B=\soc.spimemio.din_tag [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26565 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26875 (A=1'0, B=\soc.spimemio.din_tag [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26566 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26782 (A=1'0, B=\soc.spimemio.xfer.din_ddr, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26593 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26881 (A=1'1, B=$auto$wreduce.cc:454:run$7269 [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$26880 (A=1'1, B=\soc.spimemio.xfer.next_fetch, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$26870 (A=1'0, B=\soc.spimemio.din_rd, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26567 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26868 (A=1'0, B=\soc.spimemio.din_qspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26568 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26857 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5928_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26570 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26858 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5928_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26571 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26856 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5928_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26569 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26859 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5928_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26572 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26841 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5938_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26842 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5938_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26575 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26840 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5938_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26573 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26843 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5938_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26576 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9368 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [26], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9304 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$26780 (A=1'0, B=\soc.spimemio.xfer.din_dspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26594 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$26776 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5976_Y, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$26595 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9358 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [16], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9294 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9362 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [20], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9298 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9364 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [22], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9300 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9363 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [21], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9299 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9365 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [23], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9301 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11667 (A=1'0, B=$techmap\encoderR.$procmux$2670_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11471 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11511 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11479 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11535 (A=1'0, B=$techmap\encoderR.$procmux$2683_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11503 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9343 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9279 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9344 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9280 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9345 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9281 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9346 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [4], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9282 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9347 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [5], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9283 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9348 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [6], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9284 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9349 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [7], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9285 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9350 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [8], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9286 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9351 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [9], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9287 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9354 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [12], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9290 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9355 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [13], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9291 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9359 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [17], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9295 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9360 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [18], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9296 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9361 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [19], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9297 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9357 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [15], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9293 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9369 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [27], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9305 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11304 (A=1'0, B=$techmap\encoderL.$procmux$2683_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11272 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9371 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [29], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9307 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15950 (A=1'0, B=$techmap\soc.$logic_and$picosoc.v:189$1219_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$15170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23218 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$23063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9372 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [30], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9308 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9373 (A=1'0, B=$techmap\clock.$add$clock.v:17$1136_Y [31], S=$auto$simplemap.cc:256:simplemap_eqne$9411) into $auto$simplemap.cc:420:simplemap_dff$9309 (SB_DFF).

9.40. Executing ICE40_OPT pass (performing simple optimizations).

9.40.1. Running ICE40 specific optimizations.

9.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~1876 debug messages>

9.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~23244 debug messages>
Removed a total of 7748 cells.

9.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

9.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 999 unused cells and 19118 unused wires.
<suppressed ~1000 debug messages>

9.40.6. Rerunning OPT passes. (Removed registers in this run.)

9.40.7. Running ICE40 specific optimizations.

9.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~6 debug messages>

9.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

9.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.40.12. Rerunning OPT passes. (Removed registers in this run.)

9.40.13. Running ICE40 specific optimizations.

9.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

9.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.40.18. Finished OPT passes. (There is nothing left to do.)

9.41. Executing TECHMAP pass (map to technology primitives).

9.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

9.41.2. Continuing TECHMAP pass.
No more expansions possible.

9.42. Executing ABC pass (technology mapping using ABC).

9.42.1. Extracting gate netlist of module `\hardware' to `<abc-temp-dir>/input.blif'..
Extracted 10348 gates and 13146 wires to a netlist network with 2796 inputs and 1975 outputs.

9.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    3153.
ABC: Participating nodes from both networks       =    6682.
ABC: Participating nodes from the first network   =    3161. (  70.12 % of nodes)
ABC: Participating nodes from the second network  =    3521. (  78.11 % of nodes)
ABC: Node pairs (any polarity)                    =    3161. (  70.12 % of names can be moved)
ABC: Node pairs (same polarity)                   =    2323. (  51.53 % of names can be moved)
ABC: Total runtime =     0.53 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

9.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     4506
ABC RESULTS:        internal signals:     8375
ABC RESULTS:           input signals:     2796
ABC RESULTS:          output signals:     1975
Removing temp directory.

9.43. Executing TECHMAP pass (map to technology primitives).

9.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

9.43.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110 for cells of type $__ICE40_CARRY_WRAPPER.
No more expansions possible.
<suppressed ~1607 debug messages>
Removed 658 unused cells and 17188 unused wires.

9.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     5501
  1-LUT              433
  2-LUT              599
  3-LUT             2531
  4-LUT             1938
  with \SB_CARRY     941

Eliminating LUTs.
Number of LUTs:     5501
  1-LUT              433
  2-LUT              599
  3-LUT             2531
  4-LUT             1938
  with \SB_CARRY     941

Combining LUTs.
Number of LUTs:     5382
  1-LUT              430
  2-LUT              484
  3-LUT             2431
  4-LUT             2037
  with \SB_CARRY     941

Eliminated 0 LUTs.
Combined 119 LUTs.
<suppressed ~33278 debug messages>

9.45. Executing TECHMAP pass (map to technology primitives).

9.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

9.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111101110110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110011001100 for cells of type $lut.
No more expansions possible.
<suppressed ~7813 debug messages>
Removed 0 unused cells and 10882 unused wires.

9.46. Executing HIERARCHY pass (managing design hierarchy).

9.46.1. Analyzing design hierarchy..
Top module:  \hardware

9.46.2. Analyzing design hierarchy..
Top module:  \hardware
Removed 0 unused modules.

9.47. Printing statistics.

=== hardware ===

   Number of wires:               5553
   Number of wire bits:          11920
   Number of public wires:         467
   Number of public wire bits:    4630
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8970
     SB_CARRY                     1540
     SB_DFF                        159
     SB_DFFE                       852
     SB_DFFESR                     591
     SB_DFFESS                      62
     SB_DFFNSR                       4
     SB_DFFSR                      346
     SB_DFFSS                       10
     SB_IO                           4
     SB_LUT4                      5382
     SB_RAM40_4K                    20

9.48. Executing CHECK pass (checking for obvious problems).
checking module hardware..
found and reported 0 problems.

9.49. Executing BLIF backend.

End of script. Logfile hash: c75f153293
CPU: user 28.00s system 0.06s, MEM: 142.02 MB total, 107.75 MB resident
Yosys 0.9+36 (git sha1 4a7bc8c7, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 29% 37x opt_expr (8 sec), 23% 31x opt_merge (6 sec), 22% 35x opt_clean (6 sec), ...
