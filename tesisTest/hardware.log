
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+36 (git sha1 4a7bc8c7, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `hardware.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: hardware.v
Parsing Verilog input from `hardware.v' to AST representation.
Generating RTLIL representation for module `\hardware'.
Successfully finished Verilog frontend.

-- Parsing `spimemio.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: spimemio.v
Parsing Verilog input from `spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

-- Parsing `simpleuart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: simpleuart.v
Parsing Verilog input from `simpleuart.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Successfully finished Verilog frontend.

-- Parsing `picosoc.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: picosoc.v
Parsing Verilog input from `picosoc.v' to AST representation.
Generating RTLIL representation for module `\picosoc'.
Generating RTLIL representation for module `\picosoc_regs'.
Generating RTLIL representation for module `\picosoc_mem'.
Successfully finished Verilog frontend.

-- Parsing `picorv32.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: picorv32.v
Parsing Verilog input from `picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

-- Parsing `clock.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: clock.v
Parsing Verilog input from `clock.v' to AST representation.
Generating RTLIL representation for module `\clock'.
Successfully finished Verilog frontend.

-- Parsing `pwm.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: pwm.v
Parsing Verilog input from `pwm.v' to AST representation.
Generating RTLIL representation for module `\pwm'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top hardware -blif hardware.blif' --

8. Executing SYNTH_ICE40 pass.

8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

8.2. Executing HIERARCHY pass (managing design hierarchy).

8.2.1. Analyzing design hierarchy..
Top module:  \hardware
Used module:     \picosoc
Used module:         \picosoc_mem
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \pwm
Used module:     \clock

8.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc'.
Parameter \MEM_WORDS = 2048
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Generating RTLIL representation for module `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696'.

8.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_mem'.
Parameter \WORDS = 256
Generating RTLIL representation for module `$paramod\picosoc_mem\WORDS=256'.

8.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1
Parameter \ENABLE_DIV = 1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Parameter \STACKADDR = 1024
Generating RTLIL representation for module `$paramod$ec5c1c222cb66c54ad2fd64df033c03563be8a28\picorv32'.

8.2.5. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         \picosoc_mem
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \pwm
Used module:     \clock

8.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_mem'.
Parameter \WORDS = 2048
Generating RTLIL representation for module `$paramod\picosoc_mem\WORDS=2048'.

8.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1
Parameter \ENABLE_DIV = 1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Parameter \STACKADDR = 8192
Generating RTLIL representation for module `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32'.

8.2.8. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         $paramod\picosoc_mem\WORDS=2048
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs
Used module:     \pwm
Used module:     \clock

8.2.9. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         $paramod\picosoc_mem\WORDS=2048
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs
Used module:     \pwm
Used module:     \clock
Removing unused module `$paramod$ec5c1c222cb66c54ad2fd64df033c03563be8a28\picorv32'.
Removing unused module `$paramod\picosoc_mem\WORDS=256'.
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removing unused module `\picosoc_mem'.
Removing unused module `\picosoc'.
Removed 10 unused modules.

8.3. Executing PROC pass (convert processes to netlists).

8.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
Found and cleaned up 1 empty switch in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2408'.
Found and cleaned up 6 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:529$2050'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:529$2050'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
Cleaned up 24 empty switches.

8.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$pwm.v:23$1117 in module pwm.
Marked 1 switch rules as full_case in process $proc$clock.v:16$1110 in module clock.
Marked 41 switch rules as full_case in process $proc$picorv32.v:1374$2422 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1287$2391 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1273$2386 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1164$2351 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:839$2090 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:790$2088 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:759$2084 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 47 switch rules as full_case in process $proc$picorv32.v:683$2083 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:548$2059 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:413$2019 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:384$2016 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:384$2016 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:373$2011 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:308$1937 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:2392$1048 in module picorv32_pcpi_div.
Marked 4 switch rules as full_case in process $proc$picorv32.v:2201$992 in module picorv32_pcpi_mul.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$147 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$138 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$136 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$spimemio.v:535$116 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$spimemio.v:447$92 in module spimemio_xfer.
Marked 3 switch rules as full_case in process $proc$spimemio.v:207$62 in module spimemio.
Marked 1 switch rules as full_case in process $proc$spimemio.v:99$40 in module spimemio.
Marked 1 switch rules as full_case in process $proc$hardware.v:102$6 in module hardware.
Removed a total of 2 dead cases.

8.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 122 assignments to connections.

8.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\pwm.$proc$pwm.v:19$1133'.
  Set init value: \state = 1'0
Found init rule in `\pwm.$proc$pwm.v:17$1132'.
  Set init value: \count_temp = 10'0000000000
Found init rule in `\pwm.$proc$pwm.v:15$1131'.
  Set init value: \pwm_counter = 1'0
Found init rule in `\pwm.$proc$pwm.v:13$1130'.
  Set init value: \counterI = 0
Found init rule in `\clock.$proc$clock.v:12$1116'.
  Set init value: \counterO = 32'11111111111111111111111111111111
Found init rule in `\clock.$proc$clock.v:10$1115'.
  Set init value: \counterI = 0
Found init rule in `\hardware.$proc$hardware.v:97$30'.
  Set init value: \pwm_connector = 0
Found init rule in `\hardware.$proc$hardware.v:93$29'.
  Set init value: \clockO = 0
Found init rule in `\hardware.$proc$hardware.v:54$28'.
  Set init value: \reset_cnt = 6'000000

8.3.5. Executing PROC_ARST pass (detect async resets in processes).

8.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\pwm.$proc$pwm.v:19$1133'.
Creating decoders for process `\pwm.$proc$pwm.v:17$1132'.
Creating decoders for process `\pwm.$proc$pwm.v:15$1131'.
Creating decoders for process `\pwm.$proc$pwm.v:13$1130'.
Creating decoders for process `\pwm.$proc$pwm.v:23$1117'.
     1/6: $3\state[0:0]
     2/6: $2\state[0:0]
     3/6: $1\state[0:0]
     4/6: $0\counterI[31:0]
     5/6: $0\count_temp[9:0]
     6/6: $0\pwm_counter[0:0]
Creating decoders for process `\clock.$proc$clock.v:12$1116'.
Creating decoders for process `\clock.$proc$clock.v:10$1115'.
Creating decoders for process `\clock.$proc$clock.v:16$1110'.
     1/2: $0\counterI[31:0]
     2/2: $0\counterO[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
     1/85: $23\next_irq_pending[2:2]
     2/85: $22\next_irq_pending[2:2]
     3/85: $21\next_irq_pending[2:2]
     4/85: $20\next_irq_pending[2:2]
     5/85: $19\next_irq_pending[2:2]
     6/85: $18\next_irq_pending[2:2]
     7/85: $17\next_irq_pending[2:2]
     8/85: $5\next_irq_pending[31:0] [31:2]
     9/85: $3\set_mem_do_rdata[0:0]
    10/85: $5\next_irq_pending[31:0] [1]
    11/85: $3\set_mem_do_wdata[0:0]
    12/85: $5\next_irq_pending[31:0] [0]
    13/85: $4\set_mem_do_rinst[0:0]
    14/85: $3\set_mem_do_rinst[0:0]
    15/85: $4\set_mem_do_wdata[0:0]
    16/85: $15\next_irq_pending[1:1]
    17/85: $14\next_irq_pending[1:1]
    18/85: $13\next_irq_pending[1:1]
    19/85: $4\set_mem_do_rdata[0:0]
    20/85: $11\next_irq_pending[1:1]
    21/85: $10\next_irq_pending[1:1]
    22/85: $9\next_irq_pending[1:1]
    23/85: $8\next_irq_pending[1:1]
    24/85: $7\next_irq_pending[1:1]
    25/85: $16\next_irq_pending[1:1]
    26/85: $5\set_mem_do_rinst[0:0]
    27/85: $12\next_irq_pending[1:1]
    28/85: $6\next_irq_pending[31:0]
    29/85: $3\current_pc[31:0]
    30/85: $2\current_pc[31:0]
    31/85: $2\set_mem_do_wdata[0:0]
    32/85: $2\set_mem_do_rdata[0:0]
    33/85: $2\set_mem_do_rinst[0:0]
    34/85: $4\next_irq_pending[31:0]
    35/85: $1\current_pc[31:0]
    36/85: $1\set_mem_do_wdata[0:0]
    37/85: $1\set_mem_do_rdata[0:0]
    38/85: $1\set_mem_do_rinst[0:0]
    39/85: $0\trace_data[35:0]
    40/85: $3\next_irq_pending[31:0]
    41/85: $2\next_irq_pending[0:0]
    42/85: $1\next_irq_pending[0:0]
    43/85: $0\count_cycle[63:0]
    44/85: $0\pcpi_timeout[0:0]
    45/85: $0\trace_valid[0:0]
    46/85: $0\do_waitirq[0:0]
    47/85: $0\decoder_pseudo_trigger[0:0]
    48/85: $0\decoder_trigger[0:0]
    49/85: $0\alu_wait_2[0:0]
    50/85: $0\alu_wait[0:0]
    51/85: $0\reg_out[31:0]
    52/85: $0\reg_sh[4:0]
    53/85: $0\trap[0:0]
    54/85: $0\pcpi_timeout_counter[3:0]
    55/85: $0\latched_rd[5:0]
    56/85: $0\latched_is_lb[0:0]
    57/85: $0\latched_is_lh[0:0]
    58/85: $0\latched_is_lu[0:0]
    59/85: $0\latched_trace[0:0]
    60/85: $0\latched_compr[0:0]
    61/85: $0\latched_branch[0:0]
    62/85: $0\latched_stalu[0:0]
    63/85: $0\latched_store[0:0]
    64/85: $0\irq_state[1:0]
    65/85: $0\cpu_state[7:0]
    66/85: $0\dbg_rs2val_valid[0:0]
    67/85: $0\dbg_rs1val_valid[0:0]
    68/85: $0\dbg_rs2val[31:0]
    69/85: $0\dbg_rs1val[31:0]
    70/85: $0\mem_do_wdata[0:0]
    71/85: $0\mem_do_rdata[0:0]
    72/85: $0\mem_do_rinst[0:0]
    73/85: $0\mem_do_prefetch[0:0]
    74/85: $0\mem_wordsize[1:0]
    75/85: $0\timer[31:0]
    76/85: $0\irq_mask[31:0]
    77/85: $0\irq_active[0:0]
    78/85: $0\irq_delay[0:0]
    79/85: $0\reg_op2[31:0]
    80/85: $0\reg_op1[31:0]
    81/85: $0\reg_next_pc[31:0]
    82/85: $0\reg_pc[31:0]
    83/85: $0\count_instr[63:0]
    84/85: $0\eoi[31:0]
    85/85: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2408'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2391'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2386'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2385'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2363'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2351'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
     1/76: $0\decoded_rs1[5:0] [5]
     2/76: $0\decoded_imm_uj[31:0] [10]
     3/76: $0\decoded_imm_uj[31:0] [7]
     4/76: $0\decoded_imm_uj[31:0] [6]
     5/76: $0\decoded_imm_uj[31:0] [3:1]
     6/76: $0\decoded_imm_uj[31:0] [5]
     7/76: $0\decoded_imm_uj[31:0] [9:8]
     8/76: $0\decoded_imm_uj[31:0] [31:20]
     9/76: $0\decoded_imm_uj[31:0] [4]
    10/76: $0\decoded_imm_uj[31:0] [11]
    11/76: $0\decoded_imm_uj[31:0] [0]
    12/76: $0\decoded_rs1[5:0] [4:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[5:0]
    26/76: $0\decoded_imm_uj[31:0] [19:12]
    27/76: $0\decoded_rd[5:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2083'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2019'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2016'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2011'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1937'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
     1/12: $0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909
     2/12: $0$memwr$\mem$picosoc.v:234$1902_DATA[31:0]$1908
     3/12: $0$memwr$\mem$picosoc.v:234$1902_ADDR[21:0]$1907
     4/12: $0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912
     5/12: $0$memwr$\mem$picosoc.v:235$1903_DATA[31:0]$1911
     6/12: $0$memwr$\mem$picosoc.v:235$1903_ADDR[21:0]$1910
     7/12: $0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915
     8/12: $0$memwr$\mem$picosoc.v:236$1904_DATA[31:0]$1914
     9/12: $0$memwr$\mem$picosoc.v:236$1904_ADDR[21:0]$1913
    10/12: $0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918
    11/12: $0$memwr$\mem$picosoc.v:237$1905_DATA[31:0]$1917
    12/12: $0$memwr$\mem$picosoc.v:237$1905_ADDR[21:0]$1916
Creating decoders for process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1175'.
Creating decoders for process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1142'.
Creating decoders for process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
     1/9: $0\pcpi_rd[31:0]
     2/9: $0\pcpi_wr[0:0]
     3/9: $0\pcpi_ready[0:0]
     4/9: $0\outsign[0:0]
     5/9: $0\running[0:0]
     6/9: $0\quotient_msk[31:0]
     7/9: $0\quotient[31:0]
     8/9: $0\divisor[62:0]
     9/9: $0\dividend[31:0]
Creating decoders for process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
     1/4: $0\instr_remu[0:0]
     2/4: $0\instr_rem[0:0]
     3/4: $0\instr_divu[0:0]
     4/4: $0\instr_div[0:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$997'.
     1/3: $0\pcpi_ready[0:0]
     2/3: $0\pcpi_wr[0:0]
     3/3: $0\pcpi_rd[31:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
     1/7: $0\mul_finish[0:0]
     2/7: $0\mul_waiting[0:0]
     3/7: $0\mul_counter[6:0]
     4/7: $0\rdx[63:0]
     5/7: $0\rd[63:0]
     6/7: $0\rs2[63:0]
     7/7: $0\rs1[63:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
     1/4: $0\instr_mulhu[0:0]
     2/4: $0\instr_mulhsu[0:0]
     3/4: $0\instr_mulh[0:0]
     4/4: $0\instr_mul[0:0]
Creating decoders for process `\picosoc_regs.$proc$picosoc.v:214$202'.
     1/3: $0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205
     2/3: $0$memwr$\regs$picosoc.v:215$201_DATA[31:0]$204
     3/3: $0$memwr$\regs$picosoc.v:215$201_ADDR[4:0]$203
Creating decoders for process `\simpleuart.$proc$simpleuart.v:109$147'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:66$138'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:55$136'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:535$116'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:447$92'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io3_oe[0:0]
    18/33: $2\flash_io2_do[0:0]
    19/33: $2\flash_io2_oe[0:0]
    20/33: $2\flash_io1_do[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io3_oe[0:0]
    28/33: $1\flash_io2_do[0:0]
    29/33: $1\flash_io2_oe[0:0]
    30/33: $1\flash_io1_do[0:0]
    31/33: $1\flash_io1_oe[0:0]
    32/33: $1\flash_io0_do[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:436$83'.
Creating decoders for process `\spimemio.$proc$spimemio.v:207$62'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:151$44'.
Creating decoders for process `\spimemio.$proc$spimemio.v:99$40'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\hardware.$proc$hardware.v:97$30'.
Creating decoders for process `\hardware.$proc$hardware.v:93$29'.
Creating decoders for process `\hardware.$proc$hardware.v:54$28'.
Creating decoders for process `\hardware.$proc$hardware.v:102$6'.
     1/18: $0\pwm_connector[31:0] [31:24]
     2/18: $0\pwm_connector[31:0] [23:16]
     3/18: $0\pwm_connector[31:0] [15:8]
     4/18: $0\pwm_connector[31:0] [7:0]
     5/18: $0\clockO[31:0] [23:16]
     6/18: $0\clockO[31:0] [15:8]
     7/18: $0\clockO[31:0] [7:0]
     8/18: $0\leds[31:0] [23:16]
     9/18: $0\leds[31:0] [15:8]
    10/18: $0\leds[31:0] [7:0]
    11/18: $0\gpio[31:0] [23:16]
    12/18: $0\gpio[31:0] [15:8]
    13/18: $0\gpio[31:0] [7:0]
    14/18: $0\gpio[31:0] [31:24]
    15/18: $0\clockO[31:0] [31:24]
    16/18: $0\leds[31:0] [31:24]
    17/18: $0\iomem_rdata[31:0]
    18/18: $0\iomem_ready[0:0]
Creating decoders for process `\hardware.$proc$hardware.v:57$2'.

8.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_rs1' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2408'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_rs2' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2408'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2408'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_write' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2391'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_wrdata' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2391'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\clear_prefetched_high_word' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2386'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2363'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_0' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2363'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_ascii_state' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2351'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_opcode' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_ascii_instr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_imm' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rs1' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rs2' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rd' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\new_ascii_instr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2083'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_add_sub' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_shl' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_shr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_eq' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_ltu' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_lts' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_wdata' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2016'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_wstrb' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2016'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_rdata_word' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2016'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_wr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1937'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_rd' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1937'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_wait' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1937'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_ready' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1937'.
No latch inferred for signal `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.\irq' from process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1142'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs1' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\picorv32_pcpi_mul.\this_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rd' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdx' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdt' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\picorv32_pcpi_mul.\i' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\picorv32_pcpi_mul.\j' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$spimemio.v:447$92'.

8.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\pwm.\state' using process `\pwm.$proc$pwm.v:23$1117'.
  created $dff cell `$procdff$6629' with positive edge clock.
Creating register for signal `\pwm.\counterI' using process `\pwm.$proc$pwm.v:23$1117'.
  created $dff cell `$procdff$6630' with positive edge clock.
Creating register for signal `\pwm.\pwm_counter' using process `\pwm.$proc$pwm.v:23$1117'.
  created $dff cell `$procdff$6631' with positive edge clock.
Creating register for signal `\pwm.\count_temp' using process `\pwm.$proc$pwm.v:23$1117'.
  created $dff cell `$procdff$6632' with positive edge clock.
Creating register for signal `\clock.\counterI' using process `\clock.$proc$clock.v:16$1110'.
  created $dff cell `$procdff$6633' with positive edge clock.
Creating register for signal `\clock.\counterO' using process `\clock.$proc$clock.v:16$1110'.
  created $dff cell `$procdff$6634' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trap' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6635' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6636' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\eoi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6637' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trace_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6638' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trace_data' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6639' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\count_cycle' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6640' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\count_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6641' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6642' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_next_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6643' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_op1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6644' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_op2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6645' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_out' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6646' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_sh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6647' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_delay' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6648' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_active' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6649' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_mask' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6650' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_pending' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6651' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\timer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6652' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wordsize' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6653' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_prefetch' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6654' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_rinst' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6655' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_rdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6656' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6657' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_trigger' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6658' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_trigger_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6659' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_pseudo_trigger' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6660' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6661' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs1val' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6662' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs2val' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6663' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs1val_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6664' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs2val_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6665' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpu_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6666' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6667' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_rinst' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6668' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_rdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6669' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6670' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_store' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6671' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_stalu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6672' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_branch' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6673' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_compr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6674' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_trace' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6675' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6676' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6677' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6678' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6679' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\current_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6680' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_timeout_counter' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6681' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_timeout' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6682' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\next_irq_pending' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6683' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\do_waitirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6684' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6685' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_0_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6686' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_wait' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6687' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_wait_2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
  created $dff cell `$procdff$6688' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\clear_prefetched_high_word_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2385'.
  created $dff cell `$procdff$6689' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_insn' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6690' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lui' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6691' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_auipc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6692' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_jal' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6693' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_jalr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6694' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_beq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6695' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bne' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6696' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_blt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6697' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bge' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6698' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6699' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bgeu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6700' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6701' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6702' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6703' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lbu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6704' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lhu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6705' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6706' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6707' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6708' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_addi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6709' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slti' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6710' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sltiu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6711' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_xori' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6712' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_ori' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6713' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_andi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6714' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slli' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6715' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srli' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6716' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srai' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6717' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_add' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6718' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sub' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6719' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sll' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6720' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6721' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6722' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_xor' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6723' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srl' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6724' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sra' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6725' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_or' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6726' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_and' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6727' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdcycle' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6728' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdcycleh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6729' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdinstr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6730' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdinstrh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6731' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_ecall_ebreak' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6732' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_getq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6733' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_setq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6734' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_retirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6735' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_maskirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6736' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_waitirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6737' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_timer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6738' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6739' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6740' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6741' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6742' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_imm_uj' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6743' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\compressed_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6744' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lui_auipc_jal' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6745' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6746' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_slli_srli_srai' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6747' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6748' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sb_sh_sw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6749' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sll_srl_sra' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6750' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6751' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_slti_blt_slt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6752' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6753' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6754' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lbu_lhu_lw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6755' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_alu_reg_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6756' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_alu_reg_reg' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6757' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_compare' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
  created $dff cell `$procdff$6758' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_addr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6759' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_ascii_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6760' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6761' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6762' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6763' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6764' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6765' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_next' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6766' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_valid_insn' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6767' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_ascii_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6768' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6769' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6770' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6771' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6772' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
  created $dff cell `$procdff$6773' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6774' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6775' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_addr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6776' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6777' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wstrb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6778' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6779' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_secondword' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6780' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\prefetched_high_word' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6781' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_16bit_buffer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
  created $dff cell `$procdff$6782' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\next_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2019'.
  created $dff cell `$procdff$6783' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_rdata_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2019'.
  created $dff cell `$procdff$6784' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_firstword_reg' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2011'.
  created $dff cell `$procdff$6785' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\last_mem_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2011'.
  created $dff cell `$procdff$6786' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.\rdata' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6787' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1902_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6788' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1902_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6789' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1902_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6790' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1903_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6791' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1903_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6792' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1903_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6793' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1904_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6794' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1904_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6795' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1904_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6796' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1905_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6797' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1905_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6798' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1905_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
  created $dff cell `$procdff$6799' with positive edge clock.
Creating register for signal `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.\ram_ready' using process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1175'.
  created $dff cell `$procdff$6800' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wr' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6801' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_rd' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6802' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_ready' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6803' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\dividend' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6804' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\divisor' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6805' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6806' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient_msk' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6807' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\running' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6808' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\outsign' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
  created $dff cell `$procdff$6809' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
  created $dff cell `$procdff$6810' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait_q' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
  created $dff cell `$procdff$6811' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_div' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
  created $dff cell `$procdff$6812' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_divu' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
  created $dff cell `$procdff$6813' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_rem' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
  created $dff cell `$procdff$6814' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_remu' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
  created $dff cell `$procdff$6815' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wr' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$997'.
  created $dff cell `$procdff$6816' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$997'.
  created $dff cell `$procdff$6817' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_ready' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$997'.
  created $dff cell `$procdff$6818' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs1' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
  created $dff cell `$procdff$6819' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs2' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
  created $dff cell `$procdff$6820' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
  created $dff cell `$procdff$6821' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rdx' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
  created $dff cell `$procdff$6822' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_counter' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
  created $dff cell `$procdff$6823' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_waiting' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
  created $dff cell `$procdff$6824' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_finish' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
  created $dff cell `$procdff$6825' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
  created $dff cell `$procdff$6826' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mul' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
  created $dff cell `$procdff$6827' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulh' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
  created $dff cell `$procdff$6828' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhsu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
  created $dff cell `$procdff$6829' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
  created $dff cell `$procdff$6830' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait_q' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
  created $dff cell `$procdff$6831' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$201_ADDR' using process `\picosoc_regs.$proc$picosoc.v:214$202'.
  created $dff cell `$procdff$6832' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$201_DATA' using process `\picosoc_regs.$proc$picosoc.v:214$202'.
  created $dff cell `$procdff$6833' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$201_EN' using process `\picosoc_regs.$proc$picosoc.v:214$202'.
  created $dff cell `$procdff$6834' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$simpleuart.v:109$147'.
  created $dff cell `$procdff$6835' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$simpleuart.v:109$147'.
  created $dff cell `$procdff$6836' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$simpleuart.v:109$147'.
  created $dff cell `$procdff$6837' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$simpleuart.v:109$147'.
  created $dff cell `$procdff$6838' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$simpleuart.v:66$138'.
  created $dff cell `$procdff$6839' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$simpleuart.v:66$138'.
  created $dff cell `$procdff$6840' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$simpleuart.v:66$138'.
  created $dff cell `$procdff$6841' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$simpleuart.v:66$138'.
  created $dff cell `$procdff$6842' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$simpleuart.v:66$138'.
  created $dff cell `$procdff$6843' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$simpleuart.v:55$136'.
  created $dff cell `$procdff$6844' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6845' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6846' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6847' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6848' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6849' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6850' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6851' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6852' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6853' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6854' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6855' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6856' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6857' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$116'.
  created $dff cell `$procdff$6858' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$spimemio.v:436$83'.
  created $dff cell `$procdff$6859' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$spimemio.v:436$83'.
  created $dff cell `$procdff$6860' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6861' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6862' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6863' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6864' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6865' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6866' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6867' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6868' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6869' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6870' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6871' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6872' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6873' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6874' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$spimemio.v:207$62'.
  created $dff cell `$procdff$6875' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$spimemio.v:151$44'.
  created $dff cell `$procdff$6876' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$spimemio.v:151$44'.
  created $dff cell `$procdff$6877' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$spimemio.v:151$44'.
  created $dff cell `$procdff$6878' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$spimemio.v:151$44'.
  created $dff cell `$procdff$6879' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6880' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6881' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6882' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6883' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6884' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6885' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6886' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6887' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6888' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$spimemio.v:99$40'.
  created $dff cell `$procdff$6889' with positive edge clock.
Creating register for signal `\hardware.\iomem_ready' using process `\hardware.$proc$hardware.v:102$6'.
  created $dff cell `$procdff$6890' with positive edge clock.
Creating register for signal `\hardware.\iomem_rdata' using process `\hardware.$proc$hardware.v:102$6'.
  created $dff cell `$procdff$6891' with positive edge clock.
Creating register for signal `\hardware.\clockO' using process `\hardware.$proc$hardware.v:102$6'.
  created $dff cell `$procdff$6892' with positive edge clock.
Creating register for signal `\hardware.\gpio' using process `\hardware.$proc$hardware.v:102$6'.
  created $dff cell `$procdff$6893' with positive edge clock.
Creating register for signal `\hardware.\leds' using process `\hardware.$proc$hardware.v:102$6'.
  created $dff cell `$procdff$6894' with positive edge clock.
Creating register for signal `\hardware.\pwm_connector' using process `\hardware.$proc$hardware.v:102$6'.
  created $dff cell `$procdff$6895' with positive edge clock.
Creating register for signal `\hardware.\reset_cnt' using process `\hardware.$proc$hardware.v:57$2'.
  created $dff cell `$procdff$6896' with positive edge clock.

8.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `pwm.$proc$pwm.v:19$1133'.
Removing empty process `pwm.$proc$pwm.v:17$1132'.
Removing empty process `pwm.$proc$pwm.v:15$1131'.
Removing empty process `pwm.$proc$pwm.v:13$1130'.
Found and cleaned up 4 empty switches in `\pwm.$proc$pwm.v:23$1117'.
Removing empty process `pwm.$proc$pwm.v:23$1117'.
Removing empty process `clock.$proc$clock.v:12$1116'.
Removing empty process `clock.$proc$clock.v:10$1115'.
Found and cleaned up 2 empty switches in `\clock.$proc$clock.v:16$1110'.
Removing empty process `clock.$proc$clock.v:16$1110'.
Found and cleaned up 60 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2422'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2408'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2391'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2391'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2386'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2386'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2385'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2363'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2363'.
Found and cleaned up 8 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2351'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2351'.
Found and cleaned up 22 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2090'.
Found and cleaned up 3 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2088'.
Found and cleaned up 5 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2084'.
Found and cleaned up 47 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2083'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2083'.
Found and cleaned up 16 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2059'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2608'.
Found and cleaned up 19 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2019'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2019'.
Found and cleaned up 3 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2016'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2016'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2011'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2011'.
Found and cleaned up 1 empty switch in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1937'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1937'.
Found and cleaned up 4 empty switches in `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
Removing empty process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1906'.
Removing empty process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1175'.
Removing empty process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1142'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
Removing empty process `picorv32_pcpi_div.$proc$picorv32.v:2392$1048'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
Removing empty process `picorv32_pcpi_div.$proc$picorv32.v:2366$1038'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2235$997'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2235$997'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2201$992'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2177$954'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2149$948'.
Found and cleaned up 1 empty switch in `\picosoc_regs.$proc$picosoc.v:214$202'.
Removing empty process `picosoc_regs.$proc$picosoc.v:214$202'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:109$147'.
Removing empty process `simpleuart.$proc$simpleuart.v:109$147'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$simpleuart.v:66$138'.
Removing empty process `simpleuart.$proc$simpleuart.v:66$138'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:55$136'.
Removing empty process `simpleuart.$proc$simpleuart.v:55$136'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$spimemio.v:535$116'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:535$116'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$spimemio.v:447$92'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:447$92'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:436$83'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$spimemio.v:207$62'.
Removing empty process `spimemio.$proc$spimemio.v:207$62'.
Removing empty process `spimemio.$proc$spimemio.v:151$44'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$spimemio.v:99$40'.
Removing empty process `spimemio.$proc$spimemio.v:99$40'.
Removing empty process `hardware.$proc$hardware.v:97$30'.
Removing empty process `hardware.$proc$hardware.v:93$29'.
Removing empty process `hardware.$proc$hardware.v:54$28'.
Found and cleaned up 22 empty switches in `\hardware.$proc$hardware.v:102$6'.
Removing empty process `hardware.$proc$hardware.v:102$6'.
Removing empty process `hardware.$proc$hardware.v:57$2'.
Cleaned up 296 empty switches.

8.4. Executing FLATTEN pass (flatten design).
Using template clock for cells of type clock.
Using template pwm for cells of type pwm.
Using template $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696 for cells of type $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.
Using template $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32 for cells of type $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Using template $paramod\picosoc_mem\WORDS=2048 for cells of type $paramod\picosoc_mem\WORDS=2048.
Using template simpleuart for cells of type simpleuart.
Using template spimemio for cells of type spimemio.
Using template picorv32_pcpi_div for cells of type picorv32_pcpi_div.
Using template picorv32_pcpi_mul for cells of type picorv32_pcpi_mul.
Using template picosoc_regs for cells of type picosoc_regs.
Using template spimemio_xfer for cells of type spimemio_xfer.
<suppressed ~11 debug messages>
No more expansions possible.
Deleting now unused module pwm.
Deleting now unused module clock.
Deleting now unused module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Deleting now unused module $paramod\picosoc_mem\WORDS=2048.
Deleting now unused module $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.
Deleting now unused module picorv32_pcpi_div.
Deleting now unused module picorv32_pcpi_mul.
Deleting now unused module picosoc_regs.
Deleting now unused module simpleuart.
Deleting now unused module spimemio_xfer.
Deleting now unused module spimemio.

8.5. Executing TRIBUF pass.

8.6. Executing DEMINOUT pass (demote inout ports to input or output).

8.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~708 debug messages>

8.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 293 unused cells and 2280 unused wires.
<suppressed ~359 debug messages>

8.9. Executing CHECK pass (checking for obvious problems).
checking module hardware..
found and reported 0 problems.

8.10. Executing OPT pass (performing simple optimizations).

8.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~1671 debug messages>
Removed a total of 557 cells.

8.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\soc.cpu.$procmux$4628: { \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [6:2] } -> { 1'0 \soc.cpu.mem_rdata_latched [6:2] }
      Replacing known input bits on port A of cell $techmap\soc.cpu.pcpi_mul.$procmux$5643: \soc.cpu.pcpi_mul.mul_waiting -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2670.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2680.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2682.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2688.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2695.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2697.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2703.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2719.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2725.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2728.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2741.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2748.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2751.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2764.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2776.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2779.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2788.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2791.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2799.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2801.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2804.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2818.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2820.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2822.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2825.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2838.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2840.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2843.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2855.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2858.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2865.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2867.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2870.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2893.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2895.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2897.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2900.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2922.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2924.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2927.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2946.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2948.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2951.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2970.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2972.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2975.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2996.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2999.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3013.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3016.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3018.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3020.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3023.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3033.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3038.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3041.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3064.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3067.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3069.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3071.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3074.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3086.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3089.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3132.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3145.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3158.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3198.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$3441.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$3716.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3731.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$3735.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$3919.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3931.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$3935.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$4120.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4311.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4320.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5457.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5464.
    dead port 3/4 on $pmux $techmap\soc.cpu.$procmux$5490.
    dead port 2/2 on $mux $techmap\pwm.$procmux$2623.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5937.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5939.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5939.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5939.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5943.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5950.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5952.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5952.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5952.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5956.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5976.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5978.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5987.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5989.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6011.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6013.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6023.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6025.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6035.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6045.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6055.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6065.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6075.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6085.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6093.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6101.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6109.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6117.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6127.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6137.
Removed 111 multiplexer ports.
<suppressed ~314 debug messages>

8.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:491$101: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$94: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2143$944: { \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2142$943: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2141$942: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh \soc.cpu.pcpi_mul.instr_mul }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$picorv32.v:2404$1063: { \soc.cpu.reg_op2 [0] \soc.cpu.reg_op2 [1] \soc.cpu.reg_op2 [2] \soc.cpu.reg_op2 [3] \soc.cpu.reg_op2 [4] \soc.cpu.reg_op2 [5] \soc.cpu.reg_op2 [6] \soc.cpu.reg_op2 [7] \soc.cpu.reg_op2 [8] \soc.cpu.reg_op2 [9] \soc.cpu.reg_op2 [10] \soc.cpu.reg_op2 [11] \soc.cpu.reg_op2 [12] \soc.cpu.reg_op2 [13] \soc.cpu.reg_op2 [14] \soc.cpu.reg_op2 [15] \soc.cpu.reg_op2 [16] \soc.cpu.reg_op2 [17] \soc.cpu.reg_op2 [18] \soc.cpu.reg_op2 [19] \soc.cpu.reg_op2 [20] \soc.cpu.reg_op2 [21] \soc.cpu.reg_op2 [22] \soc.cpu.reg_op2 [23] \soc.cpu.reg_op2 [24] \soc.cpu.reg_op2 [25] \soc.cpu.reg_op2 [26] \soc.cpu.reg_op2 [27] \soc.cpu.reg_op2 [28] \soc.cpu.reg_op2 [29] \soc.cpu.reg_op2 [30] \soc.cpu.reg_op2 [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$picorv32.v:2361$1035: { \soc.cpu.pcpi_div.instr_remu \soc.cpu.pcpi_div.instr_rem \soc.cpu.pcpi_div.instr_divu \soc.cpu.pcpi_div.instr_div }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:887$2128: { \soc.cpu.mem_rdata_latched [5] \soc.cpu.mem_rdata_latched [6] \soc.cpu.mem_rdata_latched [7] \soc.cpu.mem_rdata_latched [8] \soc.cpu.mem_rdata_latched [9] \soc.cpu.mem_rdata_latched [10] \soc.cpu.mem_rdata_latched [11] \soc.cpu.mem_rdata_latched [12] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:845$2096: { \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu \soc.cpu.instr_sltu \soc.cpu.instr_slt \soc.cpu.instr_sltiu \soc.cpu.instr_slti }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:844$2095: { \soc.cpu.instr_lhu \soc.cpu.instr_lbu \soc.cpu.instr_lw }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:843$2094: { \soc.cpu.instr_sltu \soc.cpu.instr_sltiu \soc.cpu.instr_bltu }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:842$2093: { \soc.cpu.instr_slt \soc.cpu.instr_slti \soc.cpu.instr_blt }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:841$2092: { \soc.cpu.instr_sub \soc.cpu.instr_add \soc.cpu.instr_addi \soc.cpu.instr_jalr \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:840$2091: { \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:670$2082: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:359$1966: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:312$1945: { \soc.cpu.pcpi_div.pcpi_ready \soc.cpu.pcpi_mul.pcpi_ready }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:311$1941: { \soc.cpu.pcpi_div.pcpi_wait \soc.cpu.pcpi_mul.pcpi_wait }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1516$2470: { $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [0] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [1] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [2] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [3] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [4] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [5] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [6] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [7] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [8] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [9] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [10] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [11] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [12] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [13] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [14] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [15] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [16] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [17] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [18] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [19] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [20] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [21] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [22] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [23] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [24] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [25] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [26] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [27] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [28] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [29] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [30] $techmap\soc.cpu.$and$picorv32.v:1307$2402_Y [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1105$2349: { \soc.cpu.is_alu_reg_imm \soc.cpu.is_lb_lh_lw_lbu_lhu \soc.cpu.instr_jalr }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1103$2347: { \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1088$2333: { $techmap\soc.cpu.$eq$picorv32.v:1040$2203_Y $techmap\soc.cpu.$eq$picorv32.v:1030$2187_Y $techmap\soc.cpu.$eq$picorv32.v:1026$2181_Y $techmap\soc.cpu.$eq$picorv32.v:1025$2179_Y $techmap\soc.cpu.$eq$picorv32.v:1023$2175_Y $techmap\soc.cpu.$eq$picorv32.v:1021$2171_Y }
    New input vector for $reduce_or cell $techmap\soc.cpu.$procmux$3442_ANY: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:593$2075: { \soc.cpu.mem_rdata [0] \soc.cpu.mem_rdata [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:360$1976: { \soc.cpu.mem_rdata_latched [0] \soc.cpu.mem_rdata_latched [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:359$1971: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New input vector for $reduce_and cell $reduce_and$hardware.v:55$1: { \reset_cnt [0] \reset_cnt [1] \reset_cnt [2] \reset_cnt [3] \reset_cnt [4] \reset_cnt [5] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2709: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $auto$opt_reduce.cc:132:opt_mux$6898 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2731: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2714_CMP $auto$opt_reduce.cc:132:opt_mux$6900 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2754: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $auto$opt_reduce.cc:132:opt_mux$6902 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3122: { $techmap\soc.cpu.$procmux$2711_CMP $auto$opt_reduce.cc:132:opt_mux$6904 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3135: { $auto$opt_reduce.cc:132:opt_mux$6906 $techmap\soc.cpu.$procmux$2710_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3148: { $techmap\soc.cpu.$procmux$2713_CMP $auto$opt_reduce.cc:132:opt_mux$6908 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3398: { \soc.cpu.instr_trap \soc.cpu.is_rdcycle_rdcycleh_rdinstr_rdinstrh $auto$opt_reduce.cc:132:opt_mux$6910 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3441: $auto$opt_reduce.cc:132:opt_mux$6912
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3625: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2713_CMP $auto$opt_reduce.cc:132:opt_mux$6914 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3648: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$6916 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3735: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$6920 $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y $auto$opt_reduce.cc:132:opt_mux$6918 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3909: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2712_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3935: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$6924 $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y $auto$opt_reduce.cc:132:opt_mux$6922 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4120: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$6926 $techmap\soc.cpu.$procmux$3442_CTRL }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4170: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$6928 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4306: $auto$opt_reduce.cc:132:opt_mux$6930
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4390: { $techmap\soc.cpu.$procmux$4399_CMP $auto$opt_reduce.cc:132:opt_mux$6932 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4405: $auto$opt_reduce.cc:132:opt_mux$6934
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4473: { $techmap\soc.cpu.$procmux$4470_CMP $techmap\soc.cpu.$procmux$4488_CMP $techmap\soc.cpu.$procmux$4399_CMP $auto$opt_reduce.cc:132:opt_mux$6936 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4491: { $techmap\soc.cpu.$procmux$4470_CMP $auto$opt_reduce.cc:132:opt_mux$6938 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4539: { $auto$opt_reduce.cc:132:opt_mux$6940 $techmap\soc.cpu.$procmux$4488_CMP $techmap\soc.cpu.$procmux$4399_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4560: $auto$opt_reduce.cc:132:opt_mux$6942
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4681: { $techmap\soc.cpu.$procmux$4689_CMP $auto$opt_reduce.cc:132:opt_mux$6944 $techmap\soc.cpu.$procmux$4488_CMP $techmap\soc.cpu.$procmux$4399_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4693: $auto$opt_reduce.cc:132:opt_mux$6946
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4849: $auto$opt_reduce.cc:132:opt_mux$6948
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5236: { $techmap\soc.cpu.$procmux$4399_CMP $auto$opt_reduce.cc:132:opt_mux$6950 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5251: { $techmap\soc.cpu.$procmux$4399_CMP $auto$opt_reduce.cc:132:opt_mux$6952 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5269: $auto$opt_reduce.cc:132:opt_mux$6954
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5282: $auto$opt_reduce.cc:132:opt_mux$6956
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5307: { $auto$opt_reduce.cc:132:opt_mux$6958 $techmap\soc.cpu.$procmux$4488_CMP $techmap\soc.cpu.$procmux$4399_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5342: { $techmap\soc.cpu.$procmux$4470_CMP $techmap\soc.cpu.$procmux$4399_CMP $auto$opt_reduce.cc:132:opt_mux$6960 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5357: { $techmap\soc.cpu.$procmux$4488_CMP $techmap\soc.cpu.$procmux$4399_CMP $auto$opt_reduce.cc:132:opt_mux$6962 $techmap\soc.cpu.$procmux$4391_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5384: { $techmap\soc.cpu.$procmux$4470_CMP $auto$opt_reduce.cc:132:opt_mux$6964 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5397: $auto$opt_reduce.cc:132:opt_mux$6966
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5423: { $auto$opt_reduce.cc:132:opt_mux$6970 $techmap\soc.cpu.$procmux$4488_CMP $techmap\soc.cpu.$procmux$4399_CMP $auto$opt_reduce.cc:132:opt_mux$6968 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5442: { $techmap\soc.cpu.$procmux$4470_CMP $auto$opt_reduce.cc:132:opt_mux$6972 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.cpuregs.$procmux$5709:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0]
      New connections: $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [31:1] = { $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$201_EN[31:0]$205 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5498:
      Old ports: A=0, B=255, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0]
      New connections: $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [31:1] = { 24'000000000000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5504:
      Old ports: A=0, B=65280, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [31:9] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [7:0] } = { 16'0000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5510:
      Old ports: A=0, B=16711680, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [31:17] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [15:0] } = { 8'00000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5516:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [31:25] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [23:0] } = { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_EN[31:0]$1918 [24] 24'000000000000000000000000 }
    New ctrl vector for $pmux cell $techmap\soc.simpleuart.$procmux$5789: $auto$opt_reduce.cc:132:opt_mux$6974
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6396: { $techmap\soc.spimemio.$procmux$6239_CMP $auto$opt_reduce.cc:132:opt_mux$6976 $techmap\soc.spimemio.$procmux$6225_CMP $techmap\soc.spimemio.$procmux$6222_CMP $techmap\soc.spimemio.$procmux$6219_CMP $techmap\soc.spimemio.$procmux$6216_CMP }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5926: $auto$opt_reduce.cc:132:opt_mux$6978
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6071: { $techmap\soc.spimemio.xfer.$procmux$5929_CMP $auto$opt_reduce.cc:132:opt_mux$6980 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6081: { $techmap\soc.spimemio.xfer.$procmux$5929_CMP $auto$opt_reduce.cc:132:opt_mux$6982 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6090: $auto$opt_reduce.cc:132:opt_mux$6984
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6098: $auto$opt_reduce.cc:132:opt_mux$6986
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6106: $auto$opt_reduce.cc:132:opt_mux$6988
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6114: $auto$opt_reduce.cc:132:opt_mux$6990
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6123: { $techmap\soc.spimemio.xfer.$procmux$5929_CMP $auto$opt_reduce.cc:132:opt_mux$6992 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6133: { $techmap\soc.spimemio.xfer.$procmux$5929_CMP $auto$opt_reduce.cc:132:opt_mux$6994 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6903: { $techmap\soc.cpu.$procmux$2717_CMP $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2713_CMP $techmap\soc.cpu.$procmux$2712_CMP $techmap\soc.cpu.$procmux$2710_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6905: { $techmap\soc.cpu.$procmux$2717_CMP $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2713_CMP $techmap\soc.cpu.$procmux$2712_CMP $techmap\soc.cpu.$procmux$2711_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6907: { $techmap\soc.cpu.$procmux$2717_CMP $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2712_CMP $techmap\soc.cpu.$procmux$2711_CMP $techmap\soc.cpu.$procmux$2710_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6909: { \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6911: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6915: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6917: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6919: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6921: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6923: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6925: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6927: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6929: { $techmap\soc.cpu.$logic_and$picorv32.v:1298$2396_Y \soc.cpu.latched_branch \soc.cpu.irq_state [0] \soc.cpu.irq_state [1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6947: { $techmap\soc.cpu.$procmux$4850_CMP $techmap\soc.cpu.$procmux$4689_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6951: { $techmap\soc.cpu.$procmux$4488_CMP $techmap\soc.cpu.$procmux$4470_CMP $techmap\soc.cpu.$procmux$4407_CMP $techmap\soc.cpu.$procmux$4392_CMP $techmap\soc.cpu.$procmux$4391_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6911: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6915: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6919: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6923: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6925: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6927: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
  Optimizing cells in module \hardware.
Performed a total of 100 changes.

8.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~234 debug messages>
Removed a total of 78 cells.

8.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \clockO = 0 to constant driver in module hardware.
Promoted 1 init specs to constant drivers.

8.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 730 unused wires.
<suppressed ~1 debug messages>

8.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.10.9. Rerunning OPT passes. (Maybe there is more to do..)

8.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $techmap\soc.cpu.$procmux$5495: { \soc.cpu.pcpi_mul.pcpi_wr \soc.cpu.pcpi_div.pcpi_wr } -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~321 debug messages>

8.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2731: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $auto$opt_reduce.cc:132:opt_mux$6996 $auto$opt_reduce.cc:132:opt_mux$6900 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3249: $auto$opt_reduce.cc:132:opt_mux$6998
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3266: { $techmap\soc.cpu.$procmux$2713_CMP $auto$opt_reduce.cc:132:opt_mux$7000 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3694: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2713_CMP $techmap\soc.cpu.$procmux$2712_CMP $auto$opt_reduce.cc:132:opt_mux$7002 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4279: $auto$opt_reduce.cc:132:opt_mux$7004
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4575: $auto$opt_reduce.cc:132:opt_mux$7006
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5280: { $techmap\soc.cpu.$procmux$4404_CMP $auto$opt_reduce.cc:132:opt_mux$7008 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5495: $auto$opt_reduce.cc:132:opt_mux$7010
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6201: $auto$opt_reduce.cc:132:opt_mux$7012
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6303: { $techmap\soc.spimemio.$procmux$6239_CMP $auto$opt_reduce.cc:132:opt_mux$7014 $techmap\soc.spimemio.$procmux$6216_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7005: { $techmap\soc.cpu.$procmux$4472_CMP $techmap\soc.cpu.$procmux$4408_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7007: { $techmap\soc.cpu.$procmux$4472_CMP $techmap\soc.cpu.$procmux$4408_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$7009: { \soc.cpu.pcpi_div.pcpi_wr \soc.cpu.pcpi_mul.pcpi_wr }
  Optimizing cells in module \hardware.
Performed a total of 13 changes.

8.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

8.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

8.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

8.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.10.16. Rerunning OPT passes. (Maybe there is more to do..)

8.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~321 debug messages>

8.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

8.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

8.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.10.23. Rerunning OPT passes. (Maybe there is more to do..)

8.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5495.
Removed 1 multiplexer ports.
<suppressed ~321 debug messages>

8.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

8.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

8.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.10.30. Rerunning OPT passes. (Maybe there is more to do..)

8.10.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~321 debug messages>

8.10.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

8.10.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.10.34. Executing OPT_RMDFF pass (remove dff with constant values).

8.10.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.10.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.10.37. Finished OPT passes. (There is nothing left to do.)

8.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 11 address bits (of 22) from memory read port hardware.$techmap\soc.memory.$memrd$\mem$picosoc.v:233$1919 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1920 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1921 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1922 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1923 (soc.memory.mem).
Removed top 5 bits (of 6) from port B of cell hardware.$add$hardware.v:58$4 ($add).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:111$10 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:120$14 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:130$18 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:139$22 ($eq).
Removed top 5 bits (of 8) from port B of cell hardware.$eq$hardware.v:152$26 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\clock.$add$clock.v:24$1114 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\clock.$add$clock.v:21$1112 ($add).
Removed cell hardware.$techmap\pwm.$procmux$2629 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwm.$gt$pwm.v:39$1128 ($gt).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwm.$add$pwm.v:32$1121 ($add).
Removed top 22 bits (of 32) from port Y of cell hardware.$techmap\pwm.$add$pwm.v:32$1121 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\pwm.$add$pwm.v:30$1119 ($add).
Removed top 18 bits (of 32) from port B of cell hardware.$techmap\soc.$lt$picosoc.v:189$1178 ($lt).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$lt$picosoc.v:142$1168 ($lt).
Removed top 18 bits (of 32) from port B of cell hardware.$techmap\soc.$ge$picosoc.v:142$1166 ($ge).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:105$1149 ($eq).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:102$1147 ($eq).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:99$1145 ($eq).
Removed top 7 bits (of 8) from port B of cell hardware.$techmap\soc.$gt$picosoc.v:94$1143 ($gt).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$procmux$5461 ($pmux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$5455_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$procmux$5452 ($pmux).
Removed top 2 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$5436 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$5121_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4689_CMP0 ($eq).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4685 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4667 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4664 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4656 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4628 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4623 ($mux).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4488_CMP0 ($eq).
Removed top 3 bits (of 5) from mux cell hardware.$techmap\soc.cpu.$procmux$4465 ($mux).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4407_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$4404_CMP0 ($eq).
Removed cell hardware.$techmap\soc.cpu.$procmux$4323 ($mux).
Removed top 4 bits (of 8) from mux cell hardware.$techmap\soc.cpu.$procmux$3731 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3454 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3441 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3435 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3422 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3419 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3417 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3391 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3389 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3381 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3376 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3374 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3106 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3103 ($mux).
Removed top 2 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2715_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2714_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2713_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2712_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2711_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2710_CMP0 ($eq).
Removed top 1 bits (of 33) from port Y of cell hardware.$techmap\soc.cpu.$sshr$picorv32.v:1223$2618 ($sshr).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1901$2585 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2560 ($sub).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2560 ($sub).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2553 ($sub).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2553 ($sub).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$ge$picorv32.v:1813$2545 ($ge).
Removed top 26 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2505 ($or).
Removed top 26 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2505 ($or).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$add$picorv32.v:1542$2487 ($add).
Removed top 29 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:1530$2483 ($mux).
Removed top 26 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2478 ($or).
Removed top 26 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2478 ($or).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1519$2475 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1415$2435 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$add$picorv32.v:1405$2429 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2427 ($sub).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2427 ($sub).
Removed top 29 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:1295$2393 ($mux).
Removed top 1 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1291$2392 ($eq).
Removed top 4 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1073$2312 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1072$2308 ($eq).
Removed top 6 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1071$2303 ($eq).
Removed top 3 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1070$2297 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1047$2221 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1040$2203 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1030$2187 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1022$2173 ($eq).
Removed top 28 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$add$picorv32.v:893$2130 ($add).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$add$picorv32.v:893$2130 ($add).
Removed top 28 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$add$picorv32.v:889$2129 ($add).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$add$picorv32.v:889$2129 ($add).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:859$2116 ($eq).
Removed top 2 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:858$2115 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:857$2114 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:856$2113 ($eq).
Removed top 4 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:853$2109 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:852$2105 ($eq).
Removed top 3 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:852$2104 ($eq).
Removed top 2 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:849$2099 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:848$2098 ($eq).
Removed top 30 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:600$2079 ($mux).
Removed top 1 bits (of 7) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:474$2035 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:471$2031 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:469$2029 ($eq).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:461$2027 ($eq).
Removed top 3 bits (of 5) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:448$2025 ($eq).
Removed top 3 bits (of 4) from port A of cell hardware.$techmap\soc.cpu.$shl$picorv32.v:402$2018 ($shl).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:371$2010 ($mux).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:371$2008 ($mux).
Removed top 7 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6799 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6797 ($dff).
Removed top 8 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6796 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6794 ($dff).
Removed top 16 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6793 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6791 ($dff).
Removed top 24 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6790 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6788 ($dff).
Removed cell hardware.$techmap\soc.memory.$procmux$5520 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5518 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5514 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5512 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5508 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5506 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5502 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5500 ($mux).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.simpleuart.$procmux$5763_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$157 ($sub).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$157 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:112$149 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$146 ($add).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$146 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:74$140 ($add).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6430_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell hardware.$techmap\soc.spimemio.$procmux$6256 ($mux).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6248_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6242_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6239_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6234_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6231_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6205_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6202_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:316$80 ($mux).
Removed top 31 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:310$79 ($mux).
Removed top 8 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:226$75 ($mux).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.spimemio.$add$spimemio.v:226$73 ($add).
Removed top 7 bits (of 32) from port Y of cell hardware.$techmap\soc.spimemio.$add$spimemio.v:226$73 ($add).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:224$71 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:223$69 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:222$67 ($eq).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:221$65 ($eq).
Removed top 7 bits (of 32) from port B of cell hardware.$techmap\soc.spimemio.$ne$spimemio.v:72$37 ($ne).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5532 ($mux).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5529 ($mux).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5526 ($mux).
Removed top 31 bits (of 63) from port Y of cell hardware.$techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1075 ($sub).
Removed top 31 bits (of 63) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1075 ($sub).
Removed top 31 bits (of 63) from mux cell hardware.$techmap\soc.cpu.pcpi_div.$ternary$picorv32.v:2403$1059 ($mux).
Removed top 31 bits (of 63) from port A of cell hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1057 ($neg).
Removed top 31 bits (of 63) from port Y of cell hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1057 ($neg).
Removed top 6 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$eq$picorv32.v:2372$1044 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$eq$picorv32.v:2372$1042 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5699_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5693_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5688_CMP0 ($eq).
Removed top 3 bits (of 64) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5658 ($mux).
Removed top 32 bits (of 64) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2241$1000 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$996 ($sub).
Removed top 25 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$996 ($sub).
Removed top 26 bits (of 32) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$994 ($mux).
Removed top 1 bits (of 5) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988 ($add).
Removed top 1 bits (of 5) from port A of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988 ($add).
Removed top 1 bits (of 5) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987 ($add).
Removed top 31 bits (of 32) from FF cell hardware.$techmap\soc.cpu.cpuregs.$procdff$6834 ($dff).
Removed cell hardware.$techmap\soc.cpu.cpuregs.$procmux$5713 ($mux).
Removed cell hardware.$techmap\soc.cpu.cpuregs.$procmux$5711 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$6001 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5999 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5967 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5965 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5930 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.spimemio.xfer.$procmux$5928_CMP0 ($eq).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5926 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5924 ($mux).
Removed top 28 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$131 ($mux).
Removed top 31 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$119 ($mux).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$114 ($sub).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$102 ($sub).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:471$95 ($sub).
Removed top 7 bits (of 24) from FF cell hardware.$techmap\soc.memory.$procdff$6796 ($dff).
Removed top 7 bits (of 16) from FF cell hardware.$techmap\soc.memory.$procdff$6793 ($dff).
Removed top 7 bits (of 8) from FF cell hardware.$techmap\soc.memory.$procdff$6790 ($dff).
Removed top 5 bits (of 6) from wire hardware.$logic_not$hardware.v:58$3_Y.
Removed top 22 bits (of 32) from wire hardware.$techmap\pwm.$add$pwm.v:32$1121_Y.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.cpu.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.cpu.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$add$picorv32.v:889$2129_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$add$picorv32.v:893$2130_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2478_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2505_Y.
Removed top 4 bits (of 8) from wire hardware.$techmap\soc.cpu.$procmux$3731_Y.
Removed top 3 bits (of 5) from wire hardware.$techmap\soc.cpu.$procmux$4465_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4623_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4628_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4656_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4664_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4667_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4685_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2427_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2553_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2560_Y.
Removed top 29 bits (of 32) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:1295$2393_Y.
Removed top 1 bits (of 7) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:474$2035_Y.
Removed top 30 bits (of 32) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:600$2079_Y.
Removed top 31 bits (of 63) from wire hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1057_Y.
Removed top 1 bits (of 5) from wire hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987_Y.
Removed top 3 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5658_Y.
Removed top 31 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5664_Y.
Removed top 1 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5671_Y.
Removed top 31 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5673_Y.
Removed top 1 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5680_Y.
Removed top 31 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5682_Y.
Removed top 25 bits (of 32) from wire hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$996_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$994_Y.
Removed top 32 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2241$1000_Y.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_ADDR[21:0]$1907.
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_DATA[31:0]$1908.
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1902_EN[31:0]$1909.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_ADDR[21:0]$1910.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_DATA[31:0]$1911.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1903_EN[31:0]$1912.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_ADDR[21:0]$1913.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_DATA[31:0]$1914.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1904_EN[31:0]$1915.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1905_ADDR[21:0]$1916.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1902_ADDR.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$146_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$157_Y.
Removed top 7 bits (of 32) from wire hardware.$techmap\soc.spimemio.$add$spimemio.v:226$73_Y.
Removed top 3 bits (of 4) from wire hardware.$techmap\soc.spimemio.$procmux$6256_Y.
Removed top 10 bits (of 32) from wire hardware.$techmap\soc.spimemio.$ternary$spimemio.v:226$75_Y.
Removed top 31 bits (of 32) from wire hardware.$techmap\soc.spimemio.$ternary$spimemio.v:310$79_Y.
Removed top 3 bits (of 4) from wire hardware.$techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$94_Y.
Removed top 31 bits (of 32) from wire hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$119_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$131_Y.
Removed top 4 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rdt.
Removed top 3 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rdx.
Removed top 1 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rs1.
Removed top 30 bits (of 32) from wire hardware.soc.spimem_rdata.
Removed top 30 bits (of 32) from wire hardware.soc.spimemio.rdata.

8.12. Executing PEEPOPT pass (run peephole optimizers).

8.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 2 unused cells and 96 unused wires.
<suppressed ~3 debug messages>

8.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module hardware that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$207 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$6926 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2411_Y $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$3442_CTRL \resetn }.
    Found 1 candidates: $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206
    Analyzing resource sharing with $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206 ($memrd):
      Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$6916 $auto$opt_reduce.cc:132:opt_mux$6910 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$procmux$2715_CMP \resetn }.
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$207: { $auto$opt_reduce.cc:132:opt_mux$6926 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2411_Y $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$3442_CTRL \resetn } = 6'001101
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$207: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2411_Y $techmap\soc.cpu.$procmux$2714_CMP \resetn } = 3'111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$207: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2411_Y $techmap\soc.cpu.$procmux$2715_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$207: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2411_Y $techmap\soc.cpu.$procmux$2714_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206: { \soc.cpu.instr_retirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$procmux$2715_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206: { $auto$opt_reduce.cc:132:opt_mux$6916 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$procmux$2715_CMP \resetn } = 5'00111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206: { \soc.cpu.instr_maskirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$procmux$2715_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206: { \soc.cpu.instr_timer $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$procmux$2715_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206: { $auto$opt_reduce.cc:132:opt_mux$6910 $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$procmux$2715_CMP \resetn } = 4'1111
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2715_CMP vs. $techmap\soc.cpu.$procmux$2714_CMP
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. $auto$opt_reduce.cc:132:opt_mux$6910
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. $auto$opt_reduce.cc:132:opt_mux$6910
      Adding exclusive control bits: \soc.cpu.instr_retirq vs. $auto$opt_reduce.cc:132:opt_mux$6910
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_timer
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6910
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdinstr
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdcycleh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2715_CMP vs. $techmap\soc.cpu.$procmux$2714_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2715_CMP vs. $techmap\soc.cpu.$procmux$2714_CMP
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6916
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2715_CMP vs. $techmap\soc.cpu.$procmux$2714_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y vs. $auto$opt_reduce.cc:132:opt_mux$6916
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6916
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2715_CMP vs. $techmap\soc.cpu.$procmux$2714_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y vs. $auto$opt_reduce.cc:132:opt_mux$6916
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6916
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sh
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sb
      Adding exclusive control bits: \soc.cpu.instr_sh vs. \soc.cpu.instr_sb
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2715_CMP vs. $techmap\soc.cpu.$procmux$2714_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$3442_CTRL vs. $auto$opt_reduce.cc:132:opt_mux$6926
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$3442_CTRL vs. \soc.cpu.is_lui_auipc_jal
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:132:opt_mux$6926
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:132:opt_mux$6916
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bge
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bne vs. \soc.cpu.instr_beq
      Size of SAT problem: 12 cells, 243 variables, 626 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:132:opt_mux$6916 $auto$opt_reduce.cc:132:opt_mux$6910 $auto$opt_reduce.cc:132:opt_mux$6926 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2411_Y $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$3442_CTRL \resetn } = 13'0000000110101
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206 ($memrd):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$6916 $auto$opt_reduce.cc:132:opt_mux$6910 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2409_Y $techmap\soc.cpu.$procmux$2715_CMP \resetn }.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$sshr$picorv32.v:1223$2618 ($sshr):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$picorv32.v:1260$2384_Y.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$shl$picorv32.v:1222$2615 ($shl):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$picorv32.v:1258$2380_Y.
    No candidates found.

8.15. Executing TECHMAP pass (map to technology primitives).

8.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

8.15.2. Continuing TECHMAP pass.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$a6ffc318e97e2d88e3aa2c740afebfc2ba48d1b1\_90_lut_cmp_ for cells of type $ne.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$dc6060208f0369ff43b26b7eee8e43bf61e4b025\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$efc71e781fe178e08e0b73b60d007d65bb528021\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$64fdb727b8fb55a4fe9731fe5b6468d06ea5e6e3\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$ed69233d74549f287b72a59633b9a76ab6bcc119\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5c2d7617d568809e504489b04c3cf382857f302a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$f697708cd68b7ab769087d4d36092ed6d4550934\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~1407 debug messages>

8.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~4 debug messages>

8.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 190 unused wires.
<suppressed ~1 debug messages>

8.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module hardware:
  creating $macc model for $add$hardware.v:58$4 ($add).
  creating $macc model for $techmap\clock.$add$clock.v:21$1112 ($add).
  creating $macc model for $techmap\clock.$add$clock.v:24$1114 ($add).
  creating $macc model for $techmap\pwm.$add$pwm.v:30$1119 ($add).
  creating $macc model for $techmap\pwm.$add$pwm.v:32$1121 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1218$2610 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1295$2394 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1405$2429 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1530$2484 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1542$2487 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1547$2488 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1784$2536 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1847$2564 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:365$2001 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:889$2129 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:893$2130 ($add).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1218$2609 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1398$2427 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1415$2435 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1820$2553 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1828$2560 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1052 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1057 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1070 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1072 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1075 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$957 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$958 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$959 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$960 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$961 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$962 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$963 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$964 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$965 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$966 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$967 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$968 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$969 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$970 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$971 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$972 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$973 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$974 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$975 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$976 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$977 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$978 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$979 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$980 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$981 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$982 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$984 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$986 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$996 ($sub).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:112$149 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:74$140 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:99$146 ($add).
  creating $macc model for $techmap\soc.simpleuart.$sub$simpleuart.v:132$157 ($sub).
  creating $macc model for $techmap\soc.spimemio.$add$spimemio.v:226$73 ($add).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$95 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$102 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$114 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$124 ($sub).
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$986.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$984.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$981 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$982.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$979 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$980.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$977 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$978.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$975 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$976.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$973 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$974.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$971 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$972.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$969 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$970.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$967 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$968.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$965 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$966.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$963 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$964.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$961 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$962.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$959 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$960.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$957 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$958.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$996.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:112$149.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:74$140.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:99$146.
  creating $alu model for $macc $techmap\soc.simpleuart.$sub$simpleuart.v:132$157.
  creating $alu model for $macc $techmap\soc.spimemio.$add$spimemio.v:226$73.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$95.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$102.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$114.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$124.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1075.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1072.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1070.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1057.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1052.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1828$2560.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1820$2553.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1415$2435.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1398$2427.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1218$2609.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:893$2130.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:889$2129.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:365$2001.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1847$2564.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1784$2536.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1547$2488.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1542$2487.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1530$2484.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1405$2429.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1295$2394.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1218$2610.
  creating $alu model for $macc $techmap\pwm.$add$pwm.v:32$1121.
  creating $alu model for $macc $techmap\pwm.$add$pwm.v:30$1119.
  creating $alu model for $macc $techmap\clock.$add$clock.v:24$1114.
  creating $alu model for $macc $techmap\clock.$add$clock.v:21$1112.
  creating $alu model for $macc $add$hardware.v:58$4.
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$962: $auto$alumacc.cc:354:replace_macc$7158
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$968: $auto$alumacc.cc:354:replace_macc$7159
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$960: $auto$alumacc.cc:354:replace_macc$7160
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$970: $auto$alumacc.cc:354:replace_macc$7161
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$964: $auto$alumacc.cc:354:replace_macc$7162
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$972: $auto$alumacc.cc:354:replace_macc$7163
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$958: $auto$alumacc.cc:354:replace_macc$7164
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$974: $auto$alumacc.cc:354:replace_macc$7165
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$966: $auto$alumacc.cc:354:replace_macc$7166
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$976: $auto$alumacc.cc:354:replace_macc$7167
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988: $auto$alumacc.cc:354:replace_macc$7168
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$978: $auto$alumacc.cc:354:replace_macc$7169
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$984: $auto$alumacc.cc:354:replace_macc$7170
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$980: $auto$alumacc.cc:354:replace_macc$7171
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$986: $auto$alumacc.cc:354:replace_macc$7172
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$982: $auto$alumacc.cc:354:replace_macc$7173
  creating $alu model for $techmap\pwm.$ge$pwm.v:35$1123 ($ge): new $alu
  creating $alu model for $techmap\pwm.$gt$pwm.v:39$1128 ($gt): new $alu
  creating $alu model for $techmap\soc.$ge$picosoc.v:142$1166 ($ge): new $alu
  creating $alu model for $techmap\soc.$gt$picosoc.v:94$1143 ($gt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:142$1168 ($lt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:189$1178 ($lt): merged with $techmap\soc.$ge$picosoc.v:142$1166.
  creating $alu model for $techmap\soc.cpu.$ge$picorv32.v:1813$2545 ($ge): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1220$2613 ($lt): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1221$2614 ($lt): merged with $techmap\soc.cpu.$sub$picorv32.v:1218$2609.
  creating $alu model for $techmap\soc.cpu.pcpi_div.$le$picorv32.v:2426$1074 ($le): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:130$155 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:84$143 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:90$144 ($gt): new $alu
  creating $alu model for $techmap\soc.$eq$picosoc.v:99$1145 ($eq): merged with $techmap\soc.$lt$picosoc.v:142$1168.
  creating $alu model for $techmap\soc.cpu.$eq$picorv32.v:1219$2612 ($eq): merged with $techmap\soc.cpu.$sub$picorv32.v:1218$2609.
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:90$144: $auto$alumacc.cc:474:replace_alu$7185
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:84$143: $auto$alumacc.cc:474:replace_alu$7196
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:130$155: $auto$alumacc.cc:474:replace_alu$7201
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$le$picorv32.v:2426$1074: $auto$alumacc.cc:474:replace_alu$7212
  creating $alu cell for $techmap\soc.cpu.$ge$picorv32.v:1813$2545: $auto$alumacc.cc:474:replace_alu$7225
  creating $alu cell for $techmap\soc.$lt$picosoc.v:142$1168, $techmap\soc.$eq$picosoc.v:99$1145: $auto$alumacc.cc:474:replace_alu$7234
  creating $alu cell for $techmap\soc.$gt$picosoc.v:94$1143: $auto$alumacc.cc:474:replace_alu$7245
  creating $alu cell for $techmap\soc.$ge$picosoc.v:142$1166, $techmap\soc.$lt$picosoc.v:189$1178: $auto$alumacc.cc:474:replace_alu$7250
  creating $alu cell for $techmap\pwm.$gt$pwm.v:39$1128: $auto$alumacc.cc:474:replace_alu$7263
  creating $alu cell for $techmap\pwm.$ge$pwm.v:35$1123: $auto$alumacc.cc:474:replace_alu$7268
  creating $alu cell for $add$hardware.v:58$4: $auto$alumacc.cc:474:replace_alu$7281
  creating $alu cell for $techmap\clock.$add$clock.v:21$1112: $auto$alumacc.cc:474:replace_alu$7284
  creating $alu cell for $techmap\clock.$add$clock.v:24$1114: $auto$alumacc.cc:474:replace_alu$7287
  creating $alu cell for $techmap\pwm.$add$pwm.v:30$1119: $auto$alumacc.cc:474:replace_alu$7290
  creating $alu cell for $techmap\pwm.$add$pwm.v:32$1121: $auto$alumacc.cc:474:replace_alu$7293
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1295$2394: $auto$alumacc.cc:474:replace_alu$7296
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1405$2429: $auto$alumacc.cc:474:replace_alu$7299
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1530$2484: $auto$alumacc.cc:474:replace_alu$7302
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1542$2487: $auto$alumacc.cc:474:replace_alu$7305
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1547$2488: $auto$alumacc.cc:474:replace_alu$7308
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1784$2536: $auto$alumacc.cc:474:replace_alu$7311
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1847$2564: $auto$alumacc.cc:474:replace_alu$7314
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:365$2001: $auto$alumacc.cc:474:replace_alu$7317
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:889$2129: $auto$alumacc.cc:474:replace_alu$7320
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:893$2130: $auto$alumacc.cc:474:replace_alu$7323
  creating $alu cell for $techmap\soc.cpu.$lt$picorv32.v:1220$2613: $auto$alumacc.cc:474:replace_alu$7326
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1218$2610: $auto$alumacc.cc:474:replace_alu$7333
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1218$2609, $techmap\soc.cpu.$lt$picorv32.v:1221$2614, $techmap\soc.cpu.$eq$picorv32.v:1219$2612: $auto$alumacc.cc:474:replace_alu$7336
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1398$2427: $auto$alumacc.cc:474:replace_alu$7343
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1415$2435: $auto$alumacc.cc:474:replace_alu$7346
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1820$2553: $auto$alumacc.cc:474:replace_alu$7349
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1828$2560: $auto$alumacc.cc:474:replace_alu$7352
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1052: $auto$alumacc.cc:474:replace_alu$7355
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1057: $auto$alumacc.cc:474:replace_alu$7358
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1070: $auto$alumacc.cc:474:replace_alu$7361
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1072: $auto$alumacc.cc:474:replace_alu$7364
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1075: $auto$alumacc.cc:474:replace_alu$7367
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$124: $auto$alumacc.cc:474:replace_alu$7370
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$114: $auto$alumacc.cc:474:replace_alu$7373
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$102: $auto$alumacc.cc:474:replace_alu$7376
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$95: $auto$alumacc.cc:474:replace_alu$7379
  creating $alu cell for $techmap\soc.spimemio.$add$spimemio.v:226$73: $auto$alumacc.cc:474:replace_alu$7382
  creating $alu cell for $techmap\soc.simpleuart.$sub$simpleuart.v:132$157: $auto$alumacc.cc:474:replace_alu$7385
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:99$146: $auto$alumacc.cc:474:replace_alu$7388
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:74$140: $auto$alumacc.cc:474:replace_alu$7391
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:112$149: $auto$alumacc.cc:474:replace_alu$7394
  creating $alu cell for $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$996: $auto$alumacc.cc:474:replace_alu$7397
  created 47 $alu and 16 $macc cells.

8.19. Executing OPT pass (performing simple optimizations).

8.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~9 debug messages>

8.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

8.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~312 debug messages>

8.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7275: { $auto$alumacc.cc:490:replace_alu$7269 [0] $auto$alumacc.cc:490:replace_alu$7269 [1] $auto$alumacc.cc:490:replace_alu$7269 [2] $auto$alumacc.cc:490:replace_alu$7269 [3] $auto$alumacc.cc:490:replace_alu$7269 [4] $auto$alumacc.cc:490:replace_alu$7269 [5] $auto$alumacc.cc:490:replace_alu$7269 [6] $auto$alumacc.cc:490:replace_alu$7269 [7] $auto$alumacc.cc:490:replace_alu$7269 [8] $auto$alumacc.cc:490:replace_alu$7269 [9] $auto$alumacc.cc:490:replace_alu$7269 [10] $auto$alumacc.cc:490:replace_alu$7269 [11] $auto$alumacc.cc:490:replace_alu$7269 [12] $auto$alumacc.cc:490:replace_alu$7269 [13] $auto$alumacc.cc:490:replace_alu$7269 [14] $auto$alumacc.cc:490:replace_alu$7269 [15] $auto$alumacc.cc:490:replace_alu$7269 [16] $auto$alumacc.cc:490:replace_alu$7269 [17] $auto$alumacc.cc:490:replace_alu$7269 [18] $auto$alumacc.cc:490:replace_alu$7269 [19] $auto$alumacc.cc:490:replace_alu$7269 [20] $auto$alumacc.cc:490:replace_alu$7269 [21] $auto$alumacc.cc:490:replace_alu$7269 [22] $auto$alumacc.cc:490:replace_alu$7269 [23] $auto$alumacc.cc:490:replace_alu$7269 [24] $auto$alumacc.cc:490:replace_alu$7269 [25] $auto$alumacc.cc:490:replace_alu$7269 [26] $auto$alumacc.cc:490:replace_alu$7269 [27] $auto$alumacc.cc:490:replace_alu$7269 [28] $auto$alumacc.cc:490:replace_alu$7269 [29] $auto$alumacc.cc:490:replace_alu$7269 [30] $auto$alumacc.cc:490:replace_alu$7269 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7341: { $auto$alumacc.cc:490:replace_alu$7337 [0] $auto$alumacc.cc:490:replace_alu$7337 [1] $auto$alumacc.cc:490:replace_alu$7337 [2] $auto$alumacc.cc:490:replace_alu$7337 [3] $auto$alumacc.cc:490:replace_alu$7337 [4] $auto$alumacc.cc:490:replace_alu$7337 [5] $auto$alumacc.cc:490:replace_alu$7337 [6] $auto$alumacc.cc:490:replace_alu$7337 [7] $auto$alumacc.cc:490:replace_alu$7337 [8] $auto$alumacc.cc:490:replace_alu$7337 [9] $auto$alumacc.cc:490:replace_alu$7337 [10] $auto$alumacc.cc:490:replace_alu$7337 [11] $auto$alumacc.cc:490:replace_alu$7337 [12] $auto$alumacc.cc:490:replace_alu$7337 [13] $auto$alumacc.cc:490:replace_alu$7337 [14] $auto$alumacc.cc:490:replace_alu$7337 [15] $auto$alumacc.cc:490:replace_alu$7337 [16] $auto$alumacc.cc:490:replace_alu$7337 [17] $auto$alumacc.cc:490:replace_alu$7337 [18] $auto$alumacc.cc:490:replace_alu$7337 [19] $auto$alumacc.cc:490:replace_alu$7337 [20] $auto$alumacc.cc:490:replace_alu$7337 [21] $auto$alumacc.cc:490:replace_alu$7337 [22] $auto$alumacc.cc:490:replace_alu$7337 [23] $auto$alumacc.cc:490:replace_alu$7337 [24] $auto$alumacc.cc:490:replace_alu$7337 [25] $auto$alumacc.cc:490:replace_alu$7337 [26] $auto$alumacc.cc:490:replace_alu$7337 [27] $auto$alumacc.cc:490:replace_alu$7337 [28] $auto$alumacc.cc:490:replace_alu$7337 [29] $auto$alumacc.cc:490:replace_alu$7337 [30] $auto$alumacc.cc:490:replace_alu$7337 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7192: { $auto$alumacc.cc:490:replace_alu$7186 [0] $auto$alumacc.cc:490:replace_alu$7186 [1] $auto$alumacc.cc:490:replace_alu$7186 [2] $auto$alumacc.cc:490:replace_alu$7186 [3] $auto$alumacc.cc:490:replace_alu$7186 [4] $auto$alumacc.cc:490:replace_alu$7186 [5] $auto$alumacc.cc:490:replace_alu$7186 [6] $auto$alumacc.cc:490:replace_alu$7186 [7] $auto$alumacc.cc:490:replace_alu$7186 [8] $auto$alumacc.cc:490:replace_alu$7186 [9] $auto$alumacc.cc:490:replace_alu$7186 [10] $auto$alumacc.cc:490:replace_alu$7186 [11] $auto$alumacc.cc:490:replace_alu$7186 [12] $auto$alumacc.cc:490:replace_alu$7186 [13] $auto$alumacc.cc:490:replace_alu$7186 [14] $auto$alumacc.cc:490:replace_alu$7186 [15] $auto$alumacc.cc:490:replace_alu$7186 [16] $auto$alumacc.cc:490:replace_alu$7186 [17] $auto$alumacc.cc:490:replace_alu$7186 [18] $auto$alumacc.cc:490:replace_alu$7186 [19] $auto$alumacc.cc:490:replace_alu$7186 [20] $auto$alumacc.cc:490:replace_alu$7186 [21] $auto$alumacc.cc:490:replace_alu$7186 [22] $auto$alumacc.cc:490:replace_alu$7186 [23] $auto$alumacc.cc:490:replace_alu$7186 [24] $auto$alumacc.cc:490:replace_alu$7186 [25] $auto$alumacc.cc:490:replace_alu$7186 [26] $auto$alumacc.cc:490:replace_alu$7186 [27] $auto$alumacc.cc:490:replace_alu$7186 [28] $auto$alumacc.cc:490:replace_alu$7186 [29] $auto$alumacc.cc:490:replace_alu$7186 [30] $auto$alumacc.cc:490:replace_alu$7186 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7208: { $auto$alumacc.cc:490:replace_alu$7202 [0] $auto$alumacc.cc:490:replace_alu$7202 [1] $auto$alumacc.cc:490:replace_alu$7202 [2] $auto$alumacc.cc:490:replace_alu$7202 [3] $auto$alumacc.cc:490:replace_alu$7202 [4] $auto$alumacc.cc:490:replace_alu$7202 [5] $auto$alumacc.cc:490:replace_alu$7202 [6] $auto$alumacc.cc:490:replace_alu$7202 [7] $auto$alumacc.cc:490:replace_alu$7202 [8] $auto$alumacc.cc:490:replace_alu$7202 [9] $auto$alumacc.cc:490:replace_alu$7202 [10] $auto$alumacc.cc:490:replace_alu$7202 [11] $auto$alumacc.cc:490:replace_alu$7202 [12] $auto$alumacc.cc:490:replace_alu$7202 [13] $auto$alumacc.cc:490:replace_alu$7202 [14] $auto$alumacc.cc:490:replace_alu$7202 [15] $auto$alumacc.cc:490:replace_alu$7202 [16] $auto$alumacc.cc:490:replace_alu$7202 [17] $auto$alumacc.cc:490:replace_alu$7202 [18] $auto$alumacc.cc:490:replace_alu$7202 [19] $auto$alumacc.cc:490:replace_alu$7202 [20] $auto$alumacc.cc:490:replace_alu$7202 [21] $auto$alumacc.cc:490:replace_alu$7202 [22] $auto$alumacc.cc:490:replace_alu$7202 [23] $auto$alumacc.cc:490:replace_alu$7202 [24] $auto$alumacc.cc:490:replace_alu$7202 [25] $auto$alumacc.cc:490:replace_alu$7202 [26] $auto$alumacc.cc:490:replace_alu$7202 [27] $auto$alumacc.cc:490:replace_alu$7202 [28] $auto$alumacc.cc:490:replace_alu$7202 [29] $auto$alumacc.cc:490:replace_alu$7202 [30] $auto$alumacc.cc:490:replace_alu$7202 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7219: { $auto$alumacc.cc:490:replace_alu$7213 [0] $auto$alumacc.cc:490:replace_alu$7213 [1] $auto$alumacc.cc:490:replace_alu$7213 [2] $auto$alumacc.cc:490:replace_alu$7213 [3] $auto$alumacc.cc:490:replace_alu$7213 [4] $auto$alumacc.cc:490:replace_alu$7213 [5] $auto$alumacc.cc:490:replace_alu$7213 [6] $auto$alumacc.cc:490:replace_alu$7213 [7] $auto$alumacc.cc:490:replace_alu$7213 [8] $auto$alumacc.cc:490:replace_alu$7213 [9] $auto$alumacc.cc:490:replace_alu$7213 [10] $auto$alumacc.cc:490:replace_alu$7213 [11] $auto$alumacc.cc:490:replace_alu$7213 [12] $auto$alumacc.cc:490:replace_alu$7213 [13] $auto$alumacc.cc:490:replace_alu$7213 [14] $auto$alumacc.cc:490:replace_alu$7213 [15] $auto$alumacc.cc:490:replace_alu$7213 [16] $auto$alumacc.cc:490:replace_alu$7213 [17] $auto$alumacc.cc:490:replace_alu$7213 [18] $auto$alumacc.cc:490:replace_alu$7213 [19] $auto$alumacc.cc:490:replace_alu$7213 [20] $auto$alumacc.cc:490:replace_alu$7213 [21] $auto$alumacc.cc:490:replace_alu$7213 [22] $auto$alumacc.cc:490:replace_alu$7213 [23] $auto$alumacc.cc:490:replace_alu$7213 [24] $auto$alumacc.cc:490:replace_alu$7213 [25] $auto$alumacc.cc:490:replace_alu$7213 [26] $auto$alumacc.cc:490:replace_alu$7213 [27] $auto$alumacc.cc:490:replace_alu$7213 [28] $auto$alumacc.cc:490:replace_alu$7213 [29] $auto$alumacc.cc:490:replace_alu$7213 [30] $auto$alumacc.cc:490:replace_alu$7213 [31] $auto$alumacc.cc:490:replace_alu$7213 [32] $auto$alumacc.cc:490:replace_alu$7213 [33] $auto$alumacc.cc:490:replace_alu$7213 [34] $auto$alumacc.cc:490:replace_alu$7213 [35] $auto$alumacc.cc:490:replace_alu$7213 [36] $auto$alumacc.cc:490:replace_alu$7213 [37] $auto$alumacc.cc:490:replace_alu$7213 [38] $auto$alumacc.cc:490:replace_alu$7213 [39] $auto$alumacc.cc:490:replace_alu$7213 [40] $auto$alumacc.cc:490:replace_alu$7213 [41] $auto$alumacc.cc:490:replace_alu$7213 [42] $auto$alumacc.cc:490:replace_alu$7213 [43] $auto$alumacc.cc:490:replace_alu$7213 [44] $auto$alumacc.cc:490:replace_alu$7213 [45] $auto$alumacc.cc:490:replace_alu$7213 [46] $auto$alumacc.cc:490:replace_alu$7213 [47] $auto$alumacc.cc:490:replace_alu$7213 [48] $auto$alumacc.cc:490:replace_alu$7213 [49] $auto$alumacc.cc:490:replace_alu$7213 [50] $auto$alumacc.cc:490:replace_alu$7213 [51] $auto$alumacc.cc:490:replace_alu$7213 [52] $auto$alumacc.cc:490:replace_alu$7213 [53] $auto$alumacc.cc:490:replace_alu$7213 [54] $auto$alumacc.cc:490:replace_alu$7213 [55] $auto$alumacc.cc:490:replace_alu$7213 [56] $auto$alumacc.cc:490:replace_alu$7213 [57] $auto$alumacc.cc:490:replace_alu$7213 [58] $auto$alumacc.cc:490:replace_alu$7213 [59] $auto$alumacc.cc:490:replace_alu$7213 [60] $auto$alumacc.cc:490:replace_alu$7213 [61] $auto$alumacc.cc:490:replace_alu$7213 [62] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7230: { $auto$alumacc.cc:490:replace_alu$7226 [0] $auto$alumacc.cc:490:replace_alu$7226 [1] $auto$alumacc.cc:490:replace_alu$7226 [2] $auto$alumacc.cc:490:replace_alu$7226 [3] $auto$alumacc.cc:490:replace_alu$7226 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7241: { $auto$alumacc.cc:490:replace_alu$7235 [0] $auto$alumacc.cc:490:replace_alu$7235 [1] $auto$alumacc.cc:490:replace_alu$7235 [2] $auto$alumacc.cc:490:replace_alu$7235 [3] $auto$alumacc.cc:490:replace_alu$7235 [4] $auto$alumacc.cc:490:replace_alu$7235 [5] $auto$alumacc.cc:490:replace_alu$7235 [6] $auto$alumacc.cc:490:replace_alu$7235 [7] $auto$alumacc.cc:490:replace_alu$7235 [8] $auto$alumacc.cc:490:replace_alu$7235 [9] $auto$alumacc.cc:490:replace_alu$7235 [10] $auto$alumacc.cc:490:replace_alu$7235 [11] $auto$alumacc.cc:490:replace_alu$7235 [12] $auto$alumacc.cc:490:replace_alu$7235 [13] $auto$alumacc.cc:490:replace_alu$7235 [14] $auto$alumacc.cc:490:replace_alu$7235 [15] $auto$alumacc.cc:490:replace_alu$7235 [16] $auto$alumacc.cc:490:replace_alu$7235 [17] $auto$alumacc.cc:490:replace_alu$7235 [18] $auto$alumacc.cc:490:replace_alu$7235 [19] $auto$alumacc.cc:490:replace_alu$7235 [20] $auto$alumacc.cc:490:replace_alu$7235 [21] $auto$alumacc.cc:490:replace_alu$7235 [22] $auto$alumacc.cc:490:replace_alu$7235 [23] $auto$alumacc.cc:490:replace_alu$7235 [24] $auto$alumacc.cc:490:replace_alu$7235 [25] $auto$alumacc.cc:490:replace_alu$7235 [26] $auto$alumacc.cc:490:replace_alu$7235 [27] $auto$alumacc.cc:490:replace_alu$7235 [28] $auto$alumacc.cc:490:replace_alu$7235 [29] $auto$alumacc.cc:490:replace_alu$7235 [30] $auto$alumacc.cc:490:replace_alu$7235 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7255: { $auto$alumacc.cc:490:replace_alu$7251 [0] $auto$alumacc.cc:490:replace_alu$7251 [1] $auto$alumacc.cc:490:replace_alu$7251 [2] $auto$alumacc.cc:490:replace_alu$7251 [3] $auto$alumacc.cc:490:replace_alu$7251 [4] $auto$alumacc.cc:490:replace_alu$7251 [5] $auto$alumacc.cc:490:replace_alu$7251 [6] $auto$alumacc.cc:490:replace_alu$7251 [7] $auto$alumacc.cc:490:replace_alu$7251 [8] $auto$alumacc.cc:490:replace_alu$7251 [9] $auto$alumacc.cc:490:replace_alu$7251 [10] $auto$alumacc.cc:490:replace_alu$7251 [11] $auto$alumacc.cc:490:replace_alu$7251 [12] $auto$alumacc.cc:490:replace_alu$7251 [13] $auto$alumacc.cc:490:replace_alu$7251 [14] $auto$alumacc.cc:490:replace_alu$7251 [15] $auto$alumacc.cc:490:replace_alu$7251 [16] $auto$alumacc.cc:490:replace_alu$7251 [17] $auto$alumacc.cc:490:replace_alu$7251 [18] $auto$alumacc.cc:490:replace_alu$7251 [19] $auto$alumacc.cc:490:replace_alu$7251 [20] $auto$alumacc.cc:490:replace_alu$7251 [21] $auto$alumacc.cc:490:replace_alu$7251 [22] $auto$alumacc.cc:490:replace_alu$7251 [23] $auto$alumacc.cc:490:replace_alu$7251 [24] $auto$alumacc.cc:490:replace_alu$7251 [25] $auto$alumacc.cc:490:replace_alu$7251 [26] $auto$alumacc.cc:490:replace_alu$7251 [27] $auto$alumacc.cc:490:replace_alu$7251 [28] $auto$alumacc.cc:490:replace_alu$7251 [29] $auto$alumacc.cc:490:replace_alu$7251 [30] $auto$alumacc.cc:490:replace_alu$7251 [31] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3437: { $auto$opt_reduce.cc:132:opt_mux$7401 $techmap\soc.cpu.$procmux$2712_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4390: { }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4403: { }
  Optimizing cells in module \hardware.
Performed a total of 11 changes.

8.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

8.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 18 unused cells and 42 unused wires.
<suppressed ~19 debug messages>

8.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.19.9. Rerunning OPT passes. (Maybe there is more to do..)

8.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~313 debug messages>

8.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

8.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

8.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.19.16. Rerunning OPT passes. (Maybe there is more to do..)

8.19.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~313 debug messages>

8.19.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

8.19.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.19.20. Executing OPT_RMDFF pass (remove dff with constant values).

8.19.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.19.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.19.23. Finished OPT passes. (There is nothing left to do.)

8.20. Executing FSM pass (extract and optimize FSM).

8.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register hardware.soc.cpu.cpu_state.
Not marking hardware.soc.cpu.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.cpu.mem_wordsize as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.spimemio.state as FSM state register:
    Users of register don't seem to benefit from recoding.

8.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc.cpu.cpu_state' from module `\hardware'.
  found $dff cell for state register: $techmap\soc.cpu.$procdff$6666
  root of input selection tree: $techmap\soc.cpu.$0\cpu_state[7:0]
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1909$2596_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1893$2577_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$6998
  found ctrl input: $techmap\soc.cpu.$procmux$2712_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2713_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2714_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2715_CMP
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y
  found ctrl input: $techmap\soc.cpu.$logic_or$picorv32.v:1835$2562_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1850$2566_Y
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1809$2544_Y
  found ctrl input: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \soc.cpu.mem_done
  found ctrl input: \soc.cpu.is_sb_sh_sw
  found ctrl input: \soc.cpu.instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \soc.cpu.pcpi_int_ready
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1583$2494_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1586$2498_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$6918
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$6916
  found state code: 8'00000001
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1516$2473_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1526$2481_Y
  found ctrl input: \soc.cpu.decoder_trigger
  found ctrl input: \soc.cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1901$2587_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1894$2580_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1896$2584_Y
  found ctrl output: $techmap\soc.cpu.$procmux$2717_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2715_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2714_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2713_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2712_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2711_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2710_CMP
  found ctrl output: $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y
  ctrl inputs: { $auto$opt_reduce.cc:132:opt_mux$6918 $auto$opt_reduce.cc:132:opt_mux$6916 $auto$opt_reduce.cc:132:opt_mux$6998 \soc.cpu.pcpi_int_ready \soc.cpu.mem_done \soc.cpu.instr_jal \soc.cpu.instr_trap \soc.cpu.decoder_trigger \soc.cpu.is_sb_sh_sw \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu $techmap\soc.cpu.$logic_and$picorv32.v:1516$2473_Y $techmap\soc.cpu.$logic_and$picorv32.v:1526$2481_Y $techmap\soc.cpu.$logic_and$picorv32.v:1583$2494_Y $techmap\soc.cpu.$logic_and$picorv32.v:1586$2498_Y $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y $techmap\soc.cpu.$eq$picorv32.v:1809$2544_Y $techmap\soc.cpu.$logic_or$picorv32.v:1835$2562_Y $techmap\soc.cpu.$logic_and$picorv32.v:1850$2566_Y $techmap\soc.cpu.$logic_and$picorv32.v:1893$2577_Y $techmap\soc.cpu.$logic_and$picorv32.v:1894$2580_Y $techmap\soc.cpu.$logic_and$picorv32.v:1896$2584_Y $techmap\soc.cpu.$logic_and$picorv32.v:1901$2587_Y $techmap\soc.cpu.$logic_and$picorv32.v:1909$2596_Y \resetn }
  ctrl outputs: { $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y $techmap\soc.cpu.$0\cpu_state[7:0] $techmap\soc.cpu.$procmux$2710_CMP $techmap\soc.cpu.$procmux$2711_CMP $techmap\soc.cpu.$procmux$2712_CMP $techmap\soc.cpu.$procmux$2713_CMP $techmap\soc.cpu.$procmux$2714_CMP $techmap\soc.cpu.$procmux$2715_CMP $techmap\soc.cpu.$procmux$2717_CMP }
  transition: 8'10000000 24'------------------0---00 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0---01 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------10-000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------10-001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------11000- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------1-010- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'--------------------0-1- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------0-1-10 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0-1-11 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101111 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111111 -> 8'10000000 16'0100000000000001
  transition: 8'01000000 24'------------------0---00 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0---01 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------10-000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------10-001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------11000- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------111000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------1-010- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------101100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'--------------------0-1- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------0-1-10 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0-1-11 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111111 -> 8'01000000 16'1010000000000000
  transition: 8'00100000 24'------------------0---00 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0---01 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0---01 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0---01 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0---01 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------10-000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---10-001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----10-001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----10-001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---10-001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------11000- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------111000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------1-010- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------101100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'--------------------0-1- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------0-1-10 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0-1-11 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0-1-11 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0-1-11 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0-1-11 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111111 -> 8'00001000 16'0000010000000010
  transition: 8'00001000 24'------------------0---00 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0---01 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------10-000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------10-001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------11000- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------111000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------1-010- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------101100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'--------------------0-1- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------0-1-10 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0-1-11 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 24'------------------0---00 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110---01 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------10-000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-10-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1010-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1110-001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------11000- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------111000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------1-010- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------101100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'--------------------0-1- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------0-1-10 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110-1-11 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101111 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111111 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 24'------------------0---00 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110---01 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------10-000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-10-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1010-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1110-001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------11000- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------111000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------1-010- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------101100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'--------------------0-1- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------0-1-10 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110-1-11 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101111 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111111 -> 8'01000000 16'0010000001000000

8.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$7402' from module `\hardware'.
  Merging pattern 24'------------------111001 and 24'------------------111011 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101101 and 24'------------------101111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111101 and 24'------------------111111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111011 and 24'------------------111001 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101111 and 24'------------------101101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111111 and 24'------------------111101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1110-1 and 24'------------------1111-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1111-1 and 24'------------------1110-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111001 and 24'-------0--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111001 and 24'-----1-1--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111001 and 24'----------01------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111001 and 24'----------1-------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101101 and 24'-------0--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101101 and 24'-----1-1--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101101 and 24'----------01------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101101 and 24'----------1-------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111101 and 24'-------0--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111101 and 24'-----1-1--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111101 and 24'----------01------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111101 and 24'----------1-------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111011 and 24'-------0--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111011 and 24'-----1-1--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111011 and 24'----------01------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111011 and 24'----------1-------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101111 and 24'-------0--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101111 and 24'-----1-1--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101111 and 24'----------01------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101111 and 24'----------1-------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111111 and 24'-------0--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111111 and 24'-----1-1--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111111 and 24'----------01------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111111 and 24'----------1-------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1110-1 and 24'-------0--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1110-1 and 24'-----1-1--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1110-1 and 24'----------01------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1110-1 and 24'----------1-------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1111-1 and 24'-------0--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1111-1 and 24'-----1-1--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1111-1 and 24'----------01------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1111-1 and 24'----------1-------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----0-1--00------111001 and 24'-----0-1--00------111011 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101101 and 24'-----0-1--00------101111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111101 and 24'-----0-1--00------111111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111011 and 24'-----0-1--00------111001 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101111 and 24'-----0-1--00------101101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111111 and 24'-----0-1--00------111101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1110-1 and 24'-----0-1--00------1111-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1111-1 and 24'-----0-1--00------1110-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'---0--1-----10----111001 and 24'---0--1-----10----111011 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101101 and 24'---0--1-----10----101111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111101 and 24'---0--1-----10----111111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111011 and 24'---0--1-----10----111001 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101111 and 24'---0--1-----10----101101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111111 and 24'---0--1-----10----111101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1110-1 and 24'---0--1-----10----1111-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1111-1 and 24'---0--1-----10----1110-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111001 and 24'---0--1-----11----111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111001 and 24'---1--1-----------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111001 and 24'-1----------------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101101 and 24'---0--1-----11----101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101101 and 24'---1--1-----------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101101 and 24'-1----------------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111101 and 24'---0--1-----11----111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111101 and 24'---1--1-----------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111101 and 24'-1----------------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111011 and 24'---0--1-----11----111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111011 and 24'---1--1-----------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111011 and 24'-1----------------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101111 and 24'---0--1-----11----101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101111 and 24'---1--1-----------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101111 and 24'-1----------------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111111 and 24'---0--1-----11----111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111111 and 24'---1--1-----------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111111 and 24'-1----------------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1110-1 and 24'---0--1-----11----1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1110-1 and 24'---1--1-----------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1110-1 and 24'-1----------------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1111-1 and 24'---0--1-----11----1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1111-1 and 24'---1--1-----------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1111-1 and 24'-1----------------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----0-----111001 and 24'---0--1-----0-----111011 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101101 and 24'---0--1-----0-----101111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111101 and 24'---0--1-----0-----111111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111011 and 24'---0--1-----0-----111001 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101111 and 24'---0--1-----0-----101101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111111 and 24'---0--1-----0-----111101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1110-1 and 24'---0--1-----0-----1111-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1111-1 and 24'---0--1-----0-----1110-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'00----0-0-----0---111001 and 24'00----0-0-----0---111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111001 and 24'1-----------------111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101101 and 24'00----0-0-----0---101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101101 and 24'1-----------------101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111101 and 24'00----0-0-----0---111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111101 and 24'1-----------------111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111011 and 24'00----0-0-----0---111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111011 and 24'1-----------------111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101111 and 24'00----0-0-----0---101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101111 and 24'1-----------------101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111111 and 24'00----0-0-----0---111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111111 and 24'1-----------------111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1110-1 and 24'00----0-0-----0---1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1110-1 and 24'1-----------------1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1111-1 and 24'00----0-0-----0---1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1111-1 and 24'1-----------------1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00------1-----0---111001 and 24'00------1-----0---111011 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101101 and 24'00------1-----0---101111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111101 and 24'00------1-----0---111111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111011 and 24'00------1-----0---111001 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101111 and 24'00------1-----0---101101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111111 and 24'00------1-----0---111101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1110-1 and 24'00------1-----0---1111-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1111-1 and 24'00------1-----0---1110-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'--------------1---111001 and 24'--------------1---111011 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101101 and 24'--------------1---101111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111101 and 24'--------------1---111111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111011 and 24'--------------1---111001 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101111 and 24'--------------1---101101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111111 and 24'--------------1---111101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1110-1 and 24'--------------1---1111-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1111-1 and 24'--------------1---1110-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111001 and 24'---------0--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111001 and 24'----1----1--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101101 and 24'---------0--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101101 and 24'----1----1--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111101 and 24'---------0--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111101 and 24'----1----1--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111011 and 24'---------0--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111011 and 24'----1----1--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101111 and 24'---------0--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101111 and 24'----1----1--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111111 and 24'---------0--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111111 and 24'----1----1--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1110-1 and 24'---------0--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1110-1 and 24'----1----1--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1111-1 and 24'---------0--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1111-1 and 24'----1----1--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----0----1--------111001 and 24'----0----1--------111011 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101101 and 24'----0----1--------101111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111101 and 24'----0----1--------111111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111011 and 24'----0----1--------111001 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101111 and 24'----0----1--------101101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111111 and 24'----0----1--------111101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1110-1 and 24'----0----1--------1111-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1111-1 and 24'----0----1--------1110-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (5 5 16'0000000011000000).
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$6998.
  Removing unused input signal $techmap\soc.cpu.$eq$picorv32.v:1809$2544_Y.

8.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

8.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$7402' from module `\hardware'.
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [7].

8.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc.cpu.cpu_state$7402' from module `\hardware' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> -----1
  01000000 -> ----1-
  00100000 -> ---1--
  00001000 -> --1---
  00000010 -> -1----
  00000001 -> 1-----

8.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc.cpu.cpu_state$7402' from module `\hardware':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.cpu_state$7402 (\soc.cpu.cpu_state):

  Number of input signals:   22
  Number of output signals:   8
  Number of state bits:       6

  Input signals:
    0: \resetn
    1: $techmap\soc.cpu.$logic_and$picorv32.v:1909$2596_Y
    2: $techmap\soc.cpu.$logic_and$picorv32.v:1901$2587_Y
    3: $techmap\soc.cpu.$logic_and$picorv32.v:1896$2584_Y
    4: $techmap\soc.cpu.$logic_and$picorv32.v:1894$2580_Y
    5: $techmap\soc.cpu.$logic_and$picorv32.v:1893$2577_Y
    6: $techmap\soc.cpu.$logic_and$picorv32.v:1850$2566_Y
    7: $techmap\soc.cpu.$logic_or$picorv32.v:1835$2562_Y
    8: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2513_Y
    9: $techmap\soc.cpu.$logic_and$picorv32.v:1586$2498_Y
   10: $techmap\soc.cpu.$logic_and$picorv32.v:1583$2494_Y
   11: $techmap\soc.cpu.$logic_and$picorv32.v:1526$2481_Y
   12: $techmap\soc.cpu.$logic_and$picorv32.v:1516$2473_Y
   13: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
   14: \soc.cpu.is_sb_sh_sw
   15: \soc.cpu.decoder_trigger
   16: \soc.cpu.instr_trap
   17: \soc.cpu.instr_jal
   18: \soc.cpu.mem_done
   19: \soc.cpu.pcpi_int_ready
   20: $auto$opt_reduce.cc:132:opt_mux$6916
   21: $auto$opt_reduce.cc:132:opt_mux$6918

  Output signals:
    0: $techmap\soc.cpu.$procmux$2717_CMP
    1: $techmap\soc.cpu.$procmux$2715_CMP
    2: $techmap\soc.cpu.$procmux$2714_CMP
    3: $techmap\soc.cpu.$procmux$2713_CMP
    4: $techmap\soc.cpu.$procmux$2712_CMP
    5: $techmap\soc.cpu.$procmux$2711_CMP
    6: $techmap\soc.cpu.$procmux$2710_CMP
    7: $techmap\soc.cpu.$eq$picorv32.v:1291$2392_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 22'----------------10-001   ->     0 8'00000001
      1:     0 22'----------------0---01   ->     0 8'00000001
      2:     0 22'----------------101011   ->     0 8'00000001
      3:     0 22'----------------0-1-11   ->     0 8'00000001
      4:     0 22'----------------1011-1   ->     0 8'00000001
      5:     0 22'----------------111--1   ->     0 8'00000001
      6:     0 22'----------------11000-   ->     0 8'00000001
      7:     0 22'----------------1-010-   ->     0 8'00000001
      8:     0 22'------------------0-1-   ->     0 8'00000001
      9:     0 22'----------------10-000   ->     1 8'00000001
     10:     0 22'----------------0---00   ->     1 8'00000001
     11:     0 22'----------------101010   ->     1 8'00000001
     12:     0 22'----------------0-1-10   ->     1 8'00000001
     13:     0 22'----------------1011-0   ->     1 8'00000001
     14:     0 22'----------------111--0   ->     1 8'00000001
     15:     1 22'----------------11000-   ->     0 8'10000000
     16:     1 22'----------------1-010-   ->     0 8'10000000
     17:     1 22'------------------0-1-   ->     0 8'10000000
     18:     1 22'----------------10-000   ->     1 8'10000000
     19:     1 22'----------------0---00   ->     1 8'10000000
     20:     1 22'----------------101010   ->     1 8'10000000
     21:     1 22'----------------0-1-10   ->     1 8'10000000
     22:     1 22'----------------1011-0   ->     1 8'10000000
     23:     1 22'----------------111--0   ->     1 8'10000000
     24:     1 22'------0--00-----10-001   ->     1 8'10000000
     25:     1 22'----1-1--00-----10-001   ->     1 8'10000000
     26:     1 22'---------01-----10-001   ->     1 8'10000000
     27:     1 22'---------1------10-001   ->     1 8'10000000
     28:     1 22'------0--00-----0---01   ->     1 8'10000000
     29:     1 22'----1-1--00-----0---01   ->     1 8'10000000
     30:     1 22'---------01-----0---01   ->     1 8'10000000
     31:     1 22'---------1------0---01   ->     1 8'10000000
     32:     1 22'------0--00-----101011   ->     1 8'10000000
     33:     1 22'----1-1--00-----101011   ->     1 8'10000000
     34:     1 22'---------01-----101011   ->     1 8'10000000
     35:     1 22'---------1------101011   ->     1 8'10000000
     36:     1 22'------0--00-----0-1-11   ->     1 8'10000000
     37:     1 22'----1-1--00-----0-1-11   ->     1 8'10000000
     38:     1 22'---------01-----0-1-11   ->     1 8'10000000
     39:     1 22'---------1------0-1-11   ->     1 8'10000000
     40:     1 22'------0--00-----1011-1   ->     1 8'10000000
     41:     1 22'----1-1--00-----1011-1   ->     1 8'10000000
     42:     1 22'---------01-----1011-1   ->     1 8'10000000
     43:     1 22'---------1------1011-1   ->     1 8'10000000
     44:     1 22'------0--00-----111--1   ->     1 8'10000000
     45:     1 22'----1-1--00-----111--1   ->     1 8'10000000
     46:     1 22'---------01-----111--1   ->     1 8'10000000
     47:     1 22'---------1------111--1   ->     1 8'10000000
     48:     1 22'----0-1--00-----10-001   ->     2 8'10000000
     49:     1 22'----0-1--00-----0---01   ->     2 8'10000000
     50:     1 22'----0-1--00-----101011   ->     2 8'10000000
     51:     1 22'----0-1--00-----0-1-11   ->     2 8'10000000
     52:     1 22'----0-1--00-----1011-1   ->     2 8'10000000
     53:     1 22'----0-1--00-----111--1   ->     2 8'10000000
     54:     2 22'--0--1-----10---10-001   ->     0 8'00000010
     55:     2 22'--0--1-----10---0---01   ->     0 8'00000010
     56:     2 22'--0--1-----10---101011   ->     0 8'00000010
     57:     2 22'--0--1-----10---0-1-11   ->     0 8'00000010
     58:     2 22'--0--1-----10---1011-1   ->     0 8'00000010
     59:     2 22'--0--1-----10---111--1   ->     0 8'00000010
     60:     2 22'----------------11000-   ->     0 8'00000010
     61:     2 22'----------------1-010-   ->     0 8'00000010
     62:     2 22'------------------0-1-   ->     0 8'00000010
     63:     2 22'----------------10-000   ->     1 8'00000010
     64:     2 22'----------------0---00   ->     1 8'00000010
     65:     2 22'----------------101010   ->     1 8'00000010
     66:     2 22'----------------0-1-10   ->     1 8'00000010
     67:     2 22'----------------1011-0   ->     1 8'00000010
     68:     2 22'----------------111--0   ->     1 8'00000010
     69:     2 22'--0--1-----11---10-001   ->     1 8'00000010
     70:     2 22'--1--1----------10-001   ->     1 8'00000010
     71:     2 22'-1--------------10-001   ->     1 8'00000010
     72:     2 22'--0--1-----11---0---01   ->     1 8'00000010
     73:     2 22'--1--1----------0---01   ->     1 8'00000010
     74:     2 22'-1--------------0---01   ->     1 8'00000010
     75:     2 22'--0--1-----11---101011   ->     1 8'00000010
     76:     2 22'--1--1----------101011   ->     1 8'00000010
     77:     2 22'-1--------------101011   ->     1 8'00000010
     78:     2 22'--0--1-----11---0-1-11   ->     1 8'00000010
     79:     2 22'--1--1----------0-1-11   ->     1 8'00000010
     80:     2 22'-1--------------0-1-11   ->     1 8'00000010
     81:     2 22'--0--1-----11---1011-1   ->     1 8'00000010
     82:     2 22'--1--1----------1011-1   ->     1 8'00000010
     83:     2 22'-1--------------1011-1   ->     1 8'00000010
     84:     2 22'--0--1-----11---111--1   ->     1 8'00000010
     85:     2 22'--1--1----------111--1   ->     1 8'00000010
     86:     2 22'-1--------------111--1   ->     1 8'00000010
     87:     2 22'--0--1-----0----10-001   ->     2 8'00000010
     88:     2 22'--0--1-----0----0---01   ->     2 8'00000010
     89:     2 22'--0--1-----0----101011   ->     2 8'00000010
     90:     2 22'--0--1-----0----0-1-11   ->     2 8'00000010
     91:     2 22'--0--1-----0----1011-1   ->     2 8'00000010
     92:     2 22'--0--1-----0----111--1   ->     2 8'00000010
     93:     2 22'00---0-0-----0--10-001   ->     3 8'00000010
     94:     2 22'1---------------10-001   ->     3 8'00000010
     95:     2 22'00---0-0-----0--0---01   ->     3 8'00000010
     96:     2 22'1---------------0---01   ->     3 8'00000010
     97:     2 22'00---0-0-----0--101011   ->     3 8'00000010
     98:     2 22'1---------------101011   ->     3 8'00000010
     99:     2 22'00---0-0-----0--0-1-11   ->     3 8'00000010
    100:     2 22'1---------------0-1-11   ->     3 8'00000010
    101:     2 22'00---0-0-----0--1011-1   ->     3 8'00000010
    102:     2 22'1---------------1011-1   ->     3 8'00000010
    103:     2 22'00---0-0-----0--111--1   ->     3 8'00000010
    104:     2 22'1---------------111--1   ->     3 8'00000010
    105:     2 22'00-----1-----0--10-001   ->     4 8'00000010
    106:     2 22'00-----1-----0--0---01   ->     4 8'00000010
    107:     2 22'00-----1-----0--101011   ->     4 8'00000010
    108:     2 22'00-----1-----0--0-1-11   ->     4 8'00000010
    109:     2 22'00-----1-----0--1011-1   ->     4 8'00000010
    110:     2 22'00-----1-----0--111--1   ->     4 8'00000010
    111:     2 22'-------------1--10-001   ->     5 8'00000010
    112:     2 22'-------------1--0---01   ->     5 8'00000010
    113:     2 22'-------------1--101011   ->     5 8'00000010
    114:     2 22'-------------1--0-1-11   ->     5 8'00000010
    115:     2 22'-------------1--1011-1   ->     5 8'00000010
    116:     2 22'-------------1--111--1   ->     5 8'00000010
    117:     3 22'----------------11000-   ->     0 8'00001000
    118:     3 22'----------------1-010-   ->     0 8'00001000
    119:     3 22'------------------0-1-   ->     0 8'00001000
    120:     3 22'----------------10-000   ->     1 8'00001000
    121:     3 22'----------------0---00   ->     1 8'00001000
    122:     3 22'----------------101010   ->     1 8'00001000
    123:     3 22'----------------0-1-10   ->     1 8'00001000
    124:     3 22'----------------1011-0   ->     1 8'00001000
    125:     3 22'----------------111--0   ->     1 8'00001000
    126:     3 22'--------0-------10-001   ->     1 8'00001000
    127:     3 22'---1----1-------10-001   ->     1 8'00001000
    128:     3 22'--------0-------0---01   ->     1 8'00001000
    129:     3 22'---1----1-------0---01   ->     1 8'00001000
    130:     3 22'--------0-------101011   ->     1 8'00001000
    131:     3 22'---1----1-------101011   ->     1 8'00001000
    132:     3 22'--------0-------0-1-11   ->     1 8'00001000
    133:     3 22'---1----1-------0-1-11   ->     1 8'00001000
    134:     3 22'--------0-------1011-1   ->     1 8'00001000
    135:     3 22'---1----1-------1011-1   ->     1 8'00001000
    136:     3 22'--------0-------111--1   ->     1 8'00001000
    137:     3 22'---1----1-------111--1   ->     1 8'00001000
    138:     3 22'---0----1-------10-001   ->     3 8'00001000
    139:     3 22'---0----1-------0---01   ->     3 8'00001000
    140:     3 22'---0----1-------101011   ->     3 8'00001000
    141:     3 22'---0----1-------0-1-11   ->     3 8'00001000
    142:     3 22'---0----1-------1011-1   ->     3 8'00001000
    143:     3 22'---0----1-------111--1   ->     3 8'00001000
    144:     4 22'----------------11000-   ->     0 8'00100000
    145:     4 22'----------------1-010-   ->     0 8'00100000
    146:     4 22'------------------0-1-   ->     0 8'00100000
    147:     4 22'----------------10-000   ->     1 8'00100000
    148:     4 22'----------------0---00   ->     1 8'00100000
    149:     4 22'----------------101010   ->     1 8'00100000
    150:     4 22'----------------0-1-10   ->     1 8'00100000
    151:     4 22'----------------1011-0   ->     1 8'00100000
    152:     4 22'----------------111--0   ->     1 8'00100000
    153:     4 22'--------------1110-001   ->     1 8'00100000
    154:     4 22'--------------110---01   ->     1 8'00100000
    155:     4 22'--------------11101011   ->     1 8'00100000
    156:     4 22'--------------110-1-11   ->     1 8'00100000
    157:     4 22'--------------111011-1   ->     1 8'00100000
    158:     4 22'--------------11111--1   ->     1 8'00100000
    159:     4 22'--------------1010-001   ->     4 8'00100000
    160:     4 22'--------------0-10-001   ->     4 8'00100000
    161:     4 22'--------------100---01   ->     4 8'00100000
    162:     4 22'--------------0-0---01   ->     4 8'00100000
    163:     4 22'--------------10101011   ->     4 8'00100000
    164:     4 22'--------------0-101011   ->     4 8'00100000
    165:     4 22'--------------100-1-11   ->     4 8'00100000
    166:     4 22'--------------0-0-1-11   ->     4 8'00100000
    167:     4 22'--------------101011-1   ->     4 8'00100000
    168:     4 22'--------------0-1011-1   ->     4 8'00100000
    169:     4 22'--------------10111--1   ->     4 8'00100000
    170:     4 22'--------------0-111--1   ->     4 8'00100000
    171:     5 22'----------------11000-   ->     0 8'01000000
    172:     5 22'----------------1-010-   ->     0 8'01000000
    173:     5 22'------------------0-1-   ->     0 8'01000000
    174:     5 22'----------------10-000   ->     1 8'01000000
    175:     5 22'----------------0---00   ->     1 8'01000000
    176:     5 22'----------------101010   ->     1 8'01000000
    177:     5 22'----------------0-1-10   ->     1 8'01000000
    178:     5 22'----------------1011-0   ->     1 8'01000000
    179:     5 22'----------------111--0   ->     1 8'01000000
    180:     5 22'--------------1110-001   ->     1 8'01000000
    181:     5 22'--------------110---01   ->     1 8'01000000
    182:     5 22'--------------11101011   ->     1 8'01000000
    183:     5 22'--------------110-1-11   ->     1 8'01000000
    184:     5 22'--------------111011-1   ->     1 8'01000000
    185:     5 22'--------------11111--1   ->     1 8'01000000
    186:     5 22'--------------1010-001   ->     5 8'01000000
    187:     5 22'--------------0-10-001   ->     5 8'01000000
    188:     5 22'--------------100---01   ->     5 8'01000000
    189:     5 22'--------------0-0---01   ->     5 8'01000000
    190:     5 22'--------------10101011   ->     5 8'01000000
    191:     5 22'--------------0-101011   ->     5 8'01000000
    192:     5 22'--------------100-1-11   ->     5 8'01000000
    193:     5 22'--------------0-0-1-11   ->     5 8'01000000
    194:     5 22'--------------101011-1   ->     5 8'01000000
    195:     5 22'--------------0-1011-1   ->     5 8'01000000
    196:     5 22'--------------10111--1   ->     5 8'01000000
    197:     5 22'--------------0-111--1   ->     5 8'01000000

-------------------------------------

8.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc.cpu.cpu_state$7402' from module `\hardware'.

8.21. Executing OPT pass (performing simple optimizations).

8.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~3 debug messages>

8.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

8.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

8.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

8.21.5. Finished fast OPT passes.

8.22. Executing MEMORY pass.

8.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:215$208' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1920' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1921' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1922' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1923' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206' in module `\hardware': merged address $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$207' in module `\hardware': merged address $dff to cell.
Checking cell `$techmap\soc.memory.$memrd$\mem$picosoc.v:233$1919' in module `\hardware': merged data $dff to cell.

8.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 13 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

8.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory hardware.soc.memory.mem by address:
  New clock domain: posedge \clk_16mhz
    Port 0 ($techmap\soc.memory.$memwr$\mem$picosoc.v:234$1920) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\soc.memory.$memwr$\mem$picosoc.v:235$1921) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\soc.memory.$memwr$\mem$picosoc.v:236$1922) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\soc.memory.$memwr$\mem$picosoc.v:237$1923) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

8.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\soc.cpu.cpuregs.regs' in module `\hardware':
  $techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:215$208 ($memwr)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$207 ($memrd)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$206 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\soc.memory.mem' in module `\hardware':
  $techmap\soc.memory.$memwr$\mem$picosoc.v:237$1923 ($memwr)
  $techmap\soc.memory.$memrd$\mem$picosoc.v:233$1919 ($memrd)

8.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing hardware.soc.cpu.cpuregs.regs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 2 rules:
    Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: soc.cpu.cpuregs.regs.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: soc.cpu.cpuregs.regs.0.0.1
        Adding extra logic for transparent port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: soc.cpu.cpuregs.regs.1.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: soc.cpu.cpuregs.regs.1.0.1
        Adding extra logic for transparent port A1.2.
Processing hardware.soc.memory.mem:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: soc.memory.mem.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: soc.memory.mem.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: soc.memory.mem.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: soc.memory.mem.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: soc.memory.mem.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: soc.memory.mem.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: soc.memory.mem.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: soc.memory.mem.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: soc.memory.mem.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: soc.memory.mem.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: soc.memory.mem.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: soc.memory.mem.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: soc.memory.mem.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: soc.memory.mem.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: soc.memory.mem.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: soc.memory.mem.15.0.0

8.25. Executing TECHMAP pass (map to technology primitives).

8.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

8.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~122 debug messages>

8.26. Executing ICE40_BRAMINIT pass.

8.27. Executing OPT pass (performing simple optimizations).

8.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~196 debug messages>

8.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~38 debug messages>
Removed a total of 12 cells.

8.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

8.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 24 unused cells and 631 unused wires.
<suppressed ~28 debug messages>

8.27.5. Finished fast OPT passes.

8.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

8.29. Executing OPT pass (performing simple optimizations).

8.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/6 on $pmux $techmap\soc.cpu.$procmux$3378.
    dead port 4/6 on $pmux $techmap\soc.cpu.$procmux$3378.
    dead port 3/6 on $pmux $techmap\soc.cpu.$procmux$3625.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3641.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3641.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3907.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3907.
    dead port 1/5 on $pmux $techmap\soc.cpu.$procmux$3909.
    dead port 2/5 on $pmux $techmap\soc.cpu.$procmux$3909.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3919.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$3919.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$3919.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4117.
    dead port 3/5 on $pmux $techmap\soc.cpu.$procmux$4142.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4151.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$4151.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$4151.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4156.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$4156.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$4156.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$4160.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4160.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$4163.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4163.
Removed 24 multiplexer ports.
<suppressed ~296 debug messages>

8.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6907: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6903: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [3] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$8003: { $auto$fsm_map.cc:118:implement_pattern_cache$7973 $auto$fsm_map.cc:118:implement_pattern_cache$7969 $auto$fsm_map.cc:118:implement_pattern_cache$7965 $auto$fsm_map.cc:118:implement_pattern_cache$7961 $auto$fsm_map.cc:118:implement_pattern_cache$7957 $auto$fsm_map.cc:118:implement_pattern_cache$7953 $auto$fsm_map.cc:118:implement_pattern_cache$7949 $auto$fsm_map.cc:118:implement_pattern_cache$7945 $auto$fsm_map.cc:118:implement_pattern_cache$7941 $auto$fsm_map.cc:118:implement_pattern_cache$7937 $auto$fsm_map.cc:118:implement_pattern_cache$7933 $auto$fsm_map.cc:118:implement_pattern_cache$7977 $auto$fsm_map.cc:118:implement_pattern_cache$7981 $auto$fsm_map.cc:118:implement_pattern_cache$8001 $auto$fsm_map.cc:118:implement_pattern_cache$7997 $auto$fsm_map.cc:118:implement_pattern_cache$7993 $auto$fsm_map.cc:118:implement_pattern_cache$7985 $auto$fsm_map.cc:118:implement_pattern_cache$7989 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$7735: { $auto$fsm_map.cc:118:implement_pattern_cache$7621 $auto$fsm_map.cc:118:implement_pattern_cache$7533 $auto$fsm_map.cc:118:implement_pattern_cache$7607 $auto$fsm_map.cc:118:implement_pattern_cache$7625 $auto$fsm_map.cc:118:implement_pattern_cache$7733 $auto$fsm_map.cc:118:implement_pattern_cache$7729 $auto$fsm_map.cc:118:implement_pattern_cache$7725 $auto$fsm_map.cc:118:implement_pattern_cache$7721 $auto$fsm_map.cc:118:implement_pattern_cache$7717 $auto$fsm_map.cc:118:implement_pattern_cache$7713 $auto$fsm_map.cc:118:implement_pattern_cache$7709 $auto$fsm_map.cc:118:implement_pattern_cache$7705 $auto$fsm_map.cc:118:implement_pattern_cache$7701 $auto$fsm_map.cc:118:implement_pattern_cache$7697 $auto$fsm_map.cc:118:implement_pattern_cache$7613 $auto$fsm_map.cc:118:implement_pattern_cache$7691 $auto$fsm_map.cc:118:implement_pattern_cache$7687 $auto$fsm_map.cc:118:implement_pattern_cache$7683 $auto$fsm_map.cc:118:implement_pattern_cache$7679 $auto$fsm_map.cc:118:implement_pattern_cache$7675 $auto$fsm_map.cc:118:implement_pattern_cache$7671 $auto$fsm_map.cc:118:implement_pattern_cache$7667 $auto$fsm_map.cc:118:implement_pattern_cache$7663 $auto$fsm_map.cc:118:implement_pattern_cache$7659 $auto$fsm_map.cc:118:implement_pattern_cache$7655 $auto$fsm_map.cc:118:implement_pattern_cache$7649 $auto$fsm_map.cc:118:implement_pattern_cache$7645 $auto$fsm_map.cc:118:implement_pattern_cache$7641 $auto$fsm_map.cc:118:implement_pattern_cache$7637 $auto$fsm_map.cc:118:implement_pattern_cache$7633 $auto$fsm_map.cc:118:implement_pattern_cache$7629 $auto$fsm_map.cc:118:implement_pattern_cache$7515 $auto$fsm_map.cc:118:implement_pattern_cache$7583 $auto$fsm_map.cc:118:implement_pattern_cache$7529 $auto$fsm_map.cc:118:implement_pattern_cache$7579 $auto$fsm_map.cc:118:implement_pattern_cache$7561 $auto$fsm_map.cc:118:implement_pattern_cache$7565 $auto$fsm_map.cc:118:implement_pattern_cache$7557 $auto$fsm_map.cc:118:implement_pattern_cache$7575 $auto$fsm_map.cc:118:implement_pattern_cache$7549 $auto$fsm_map.cc:118:implement_pattern_cache$7553 $auto$fsm_map.cc:118:implement_pattern_cache$7617 $auto$fsm_map.cc:74:implement_pattern_cache$7475 $auto$fsm_map.cc:118:implement_pattern_cache$7603 $auto$fsm_map.cc:118:implement_pattern_cache$7537 $auto$fsm_map.cc:118:implement_pattern_cache$7599 $auto$fsm_map.cc:74:implement_pattern_cache$7473 $auto$fsm_map.cc:74:implement_pattern_cache$7471 $auto$fsm_map.cc:118:implement_pattern_cache$7541 $auto$fsm_map.cc:118:implement_pattern_cache$7587 $auto$fsm_map.cc:118:implement_pattern_cache$7571 $auto$fsm_map.cc:118:implement_pattern_cache$7595 $auto$fsm_map.cc:118:implement_pattern_cache$7491 $auto$fsm_map.cc:118:implement_pattern_cache$7519 $auto$fsm_map.cc:118:implement_pattern_cache$7495 $auto$fsm_map.cc:118:implement_pattern_cache$7545 $auto$fsm_map.cc:118:implement_pattern_cache$7487 $auto$fsm_map.cc:74:implement_pattern_cache$7481 $auto$fsm_map.cc:74:implement_pattern_cache$7479 $auto$fsm_map.cc:74:implement_pattern_cache$7477 $auto$fsm_map.cc:118:implement_pattern_cache$7523 $auto$fsm_map.cc:118:implement_pattern_cache$7511 $auto$fsm_map.cc:118:implement_pattern_cache$7507 $auto$fsm_map.cc:118:implement_pattern_cache$7503 $auto$fsm_map.cc:118:implement_pattern_cache$7499 $auto$fsm_map.cc:118:implement_pattern_cache$7591 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$7470: { $auto$fsm_map.cc:118:implement_pattern_cache$7442 $auto$fsm_map.cc:118:implement_pattern_cache$7438 $auto$fsm_map.cc:118:implement_pattern_cache$7434 $auto$fsm_map.cc:118:implement_pattern_cache$7430 $auto$fsm_map.cc:118:implement_pattern_cache$7426 $auto$fsm_map.cc:118:implement_pattern_cache$7422 $auto$fsm_map.cc:118:implement_pattern_cache$7418 $auto$fsm_map.cc:74:implement_pattern_cache$7468 $auto$fsm_map.cc:74:implement_pattern_cache$7466 $auto$fsm_map.cc:74:implement_pattern_cache$7464 $auto$fsm_map.cc:118:implement_pattern_cache$7462 $auto$fsm_map.cc:118:implement_pattern_cache$7458 $auto$fsm_map.cc:118:implement_pattern_cache$7454 $auto$fsm_map.cc:118:implement_pattern_cache$7450 $auto$fsm_map.cc:118:implement_pattern_cache$7446 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$7696: { \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$8052:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$8055
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$8055 [0]
      New connections: $auto$rtlil.cc:1918:Mux$8055 [15:1] = { $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] $auto$rtlil.cc:1918:Mux$8055 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$8096:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$8016
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$8016 [0]
      New connections: $auto$rtlil.cc:1918:Mux$8016 [15:1] = { $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] $auto$rtlil.cc:1918:Mux$8016 [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$3370:
      Old ports: A=\soc.cpu.mem_rdata_word, B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:0] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7:0] }, Y=$techmap\soc.cpu.$procmux$3370_Y
      New ports: A=\soc.cpu.mem_rdata_word [31:8], B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] }, Y=$techmap\soc.cpu.$procmux$3370_Y [31:8]
      New connections: $techmap\soc.cpu.$procmux$3370_Y [7:0] = \soc.cpu.mem_rdata_word [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$3494:
      Old ports: A=\soc.cpu.latched_rd, B={ 1'1 \soc.cpu.latched_rd [4:0] }, Y=$techmap\soc.cpu.$procmux$3494_Y
      New ports: A=\soc.cpu.latched_rd [5], B=1'1, Y=$techmap\soc.cpu.$procmux$3494_Y [5]
      New connections: $techmap\soc.cpu.$procmux$3494_Y [4:0] = \soc.cpu.latched_rd [4:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4437:
      Old ports: A={ \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4437_Y
      New ports: A=\soc.cpu.mem_rdata_latched [31], B=\soc.cpu.mem_rdata_latched [12], Y=$techmap\soc.cpu.$procmux$4437_Y [0]
      New connections: $techmap\soc.cpu.$procmux$4437_Y [11:1] = { $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] $techmap\soc.cpu.$procmux$4437_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4465:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$7024 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7024 [1]
      New connections: $auto$wreduce.cc:454:run$7024 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4625:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$7025 [4:0] }, B={ 1'0 \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4625_Y
      New ports: A=$auto$wreduce.cc:454:run$7025 [4:0], B=\soc.cpu.mem_rdata_latched [6:2], Y=$techmap\soc.cpu.$procmux$4625_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4625_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4643:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4643_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4643_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4643_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4650:
      Old ports: A=\soc.cpu.mem_rdata_latched [19:12], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4650_Y
      New ports: A=\soc.cpu.mem_rdata_latched [19:13], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4650_Y [7:1]
      New connections: $techmap\soc.cpu.$procmux$4650_Y [0] = \soc.cpu.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4658:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$7027 [4:0] }, B=6'000001, Y=$techmap\soc.cpu.$procmux$4658_Y
      New ports: A=$auto$wreduce.cc:454:run$7027 [4:0], B=5'00001, Y=$techmap\soc.cpu.$procmux$4658_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4658_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4675:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4675_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4675_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4675_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4693:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4693_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4693_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4693_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$5310:
      Old ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 4'0000 }, Y=$techmap\soc.cpu.$procmux$5310_Y
      New ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 1'0 }, Y={ $techmap\soc.cpu.$procmux$5310_Y [4] $techmap\soc.cpu.$procmux$5310_Y [0] }
      New connections: $techmap\soc.cpu.$procmux$5310_Y [3:1] = { $techmap\soc.cpu.$procmux$5310_Y [0] $techmap\soc.cpu.$procmux$5310_Y [0] $techmap\soc.cpu.$procmux$5310_Y [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$5477:
      Old ports: A=\soc.cpu.reg_op2, B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata
      New ports: A=\soc.cpu.reg_op2 [31:8], B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata [31:8]
      New connections: \soc.cpu.mem_la_wdata [7:0] = \soc.cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1295$2393:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$7034 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$7034 [2:1]
      New connections: $auto$wreduce.cc:454:run$7034 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1519$2476:
      Old ports: A=2'00, B=2'10, Y=$techmap\soc.cpu.$ternary$picorv32.v:1519$2476_Y
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.$ternary$picorv32.v:1519$2476_Y [1]
      New connections: $techmap\soc.cpu.$ternary$picorv32.v:1519$2476_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1530$2483:
      Old ports: A=3'100, B=3'010, Y=$techmap\soc.cpu.$ternary$picorv32.v:1530$2483_Y [2:0]
      New ports: A=2'10, B=2'01, Y=$techmap\soc.cpu.$ternary$picorv32.v:1530$2483_Y [2:1]
      New connections: $techmap\soc.cpu.$ternary$picorv32.v:1530$2483_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:365$2002:
      Old ports: A={ \soc.cpu.reg_op1 [31:2] 2'00 }, B={ $techmap\soc.cpu.$add$picorv32.v:365$2001_Y 2'00 }, Y=\soc.cpu.mem_la_addr
      New ports: A=\soc.cpu.reg_op1 [31:2], B=$techmap\soc.cpu.$add$picorv32.v:365$2001_Y, Y=\soc.cpu.mem_la_addr [31:2]
      New connections: \soc.cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:394$2017:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\soc.cpu.$ternary$picorv32.v:394$2017_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\soc.cpu.$ternary$picorv32.v:394$2017_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:394$2017_Y [0] }
      New connections: { $techmap\soc.cpu.$ternary$picorv32.v:394$2017_Y [3] $techmap\soc.cpu.$ternary$picorv32.v:394$2017_Y [1] } = { $techmap\soc.cpu.$ternary$picorv32.v:394$2017_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:394$2017_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:474$2035:
      Old ports: A=6'000000, B=6'100000, Y=$auto$wreduce.cc:454:run$7035 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7035 [5]
      New connections: $auto$wreduce.cc:454:run$7035 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:600$2079:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$7036 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$7036 [0]
      New connections: $auto$wreduce.cc:454:run$7036 [1] = $auto$wreduce.cc:454:run$7036 [0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5658:
      Old ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] 3'000 \soc.cpu.pcpi_mul.next_rdt [55] 3'000 \soc.cpu.pcpi_mul.next_rdt [51] 3'000 \soc.cpu.pcpi_mul.next_rdt [47] 3'000 \soc.cpu.pcpi_mul.next_rdt [43] 3'000 \soc.cpu.pcpi_mul.next_rdt [39] 3'000 \soc.cpu.pcpi_mul.next_rdt [35] 3'000 \soc.cpu.pcpi_mul.next_rdt [31] 3'000 \soc.cpu.pcpi_mul.next_rdt [27] 3'000 \soc.cpu.pcpi_mul.next_rdt [23] 3'000 \soc.cpu.pcpi_mul.next_rdt [19] 3'000 \soc.cpu.pcpi_mul.next_rdt [15] 3'000 \soc.cpu.pcpi_mul.next_rdt [11] 3'000 \soc.cpu.pcpi_mul.next_rdt [7] 3'000 \soc.cpu.pcpi_mul.next_rdt [3] 4'0000 }, B=61'0000000000000000000000000000000000000000000000000000000000000, Y=$auto$wreduce.cc:454:run$7039 [60:0]
      New ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] \soc.cpu.pcpi_mul.next_rdt [55] \soc.cpu.pcpi_mul.next_rdt [51] \soc.cpu.pcpi_mul.next_rdt [47] \soc.cpu.pcpi_mul.next_rdt [43] \soc.cpu.pcpi_mul.next_rdt [39] \soc.cpu.pcpi_mul.next_rdt [35] \soc.cpu.pcpi_mul.next_rdt [31] \soc.cpu.pcpi_mul.next_rdt [27] \soc.cpu.pcpi_mul.next_rdt [23] \soc.cpu.pcpi_mul.next_rdt [19] \soc.cpu.pcpi_mul.next_rdt [15] \soc.cpu.pcpi_mul.next_rdt [11] \soc.cpu.pcpi_mul.next_rdt [7] \soc.cpu.pcpi_mul.next_rdt [3] }, B=15'000000000000000, Y={ $auto$wreduce.cc:454:run$7039 [60] $auto$wreduce.cc:454:run$7039 [56] $auto$wreduce.cc:454:run$7039 [52] $auto$wreduce.cc:454:run$7039 [48] $auto$wreduce.cc:454:run$7039 [44] $auto$wreduce.cc:454:run$7039 [40] $auto$wreduce.cc:454:run$7039 [36] $auto$wreduce.cc:454:run$7039 [32] $auto$wreduce.cc:454:run$7039 [28] $auto$wreduce.cc:454:run$7039 [24] $auto$wreduce.cc:454:run$7039 [20] $auto$wreduce.cc:454:run$7039 [16] $auto$wreduce.cc:454:run$7039 [12] $auto$wreduce.cc:454:run$7039 [8] $auto$wreduce.cc:454:run$7039 [4] }
      New connections: { $auto$wreduce.cc:454:run$7039 [59:57] $auto$wreduce.cc:454:run$7039 [55:53] $auto$wreduce.cc:454:run$7039 [51:49] $auto$wreduce.cc:454:run$7039 [47:45] $auto$wreduce.cc:454:run$7039 [43:41] $auto$wreduce.cc:454:run$7039 [39:37] $auto$wreduce.cc:454:run$7039 [35:33] $auto$wreduce.cc:454:run$7039 [31:29] $auto$wreduce.cc:454:run$7039 [27:25] $auto$wreduce.cc:454:run$7039 [23:21] $auto$wreduce.cc:454:run$7039 [19:17] $auto$wreduce.cc:454:run$7039 [15:13] $auto$wreduce.cc:454:run$7039 [11:9] $auto$wreduce.cc:454:run$7039 [7:5] $auto$wreduce.cc:454:run$7039 [3:0] } = 46'0000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5671:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op2 }, B={ \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 }, Y=$auto$wreduce.cc:454:run$7041
      New ports: A=1'0, B=\soc.cpu.reg_op2 [31], Y=$auto$wreduce.cc:454:run$7041 [32]
      New connections: { $auto$wreduce.cc:454:run$7041 [63:33] $auto$wreduce.cc:454:run$7041 [31:0] } = { $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] $auto$wreduce.cc:454:run$7041 [32] \soc.cpu.reg_op2 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5680:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op1 }, B={ \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 }, Y=$auto$wreduce.cc:454:run$7043
      New ports: A=1'0, B=\soc.cpu.reg_op1 [31], Y=$auto$wreduce.cc:454:run$7043 [32]
      New connections: { $auto$wreduce.cc:454:run$7043 [63:33] $auto$wreduce.cc:454:run$7043 [31:0] } = { $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] $auto$wreduce.cc:454:run$7043 [32] \soc.cpu.reg_op1 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$994:
      Old ports: A=6'011110, B=6'111110, Y=$auto$wreduce.cc:454:run$7046 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7046 [5]
      New connections: $auto$wreduce.cc:454:run$7046 [4:0] = 5'11110
    Consolidated identical input bits for $mux cell $techmap\soc.simpleuart.$ternary$simpleuart.v:53$135:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do [8:0]
      New connections: \soc.simpleuart_reg_dat_do [31:9] = { \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.spimemio.$procmux$6427:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$techmap\soc.spimemio.$procmux$6427_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $techmap\soc.spimemio.$procmux$6427_Y [6] $techmap\soc.spimemio.$procmux$6427_Y [4:1] }
      New connections: { $techmap\soc.spimemio.$procmux$6427_Y [7] $techmap\soc.spimemio.$procmux$6427_Y [5] $techmap\soc.spimemio.$procmux$6427_Y [0] } = { $techmap\soc.spimemio.$procmux$6427_Y [3] $techmap\soc.spimemio.$procmux$6427_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$ternary$spimemio.v:316$80:
      Old ports: A=7'1111111, B=7'0100101, Y=$techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [6:0]
      New ports: A=1'1, B=1'0, Y=$techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [1]
      New connections: { $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [6:2] $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [0] } = { $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [1] 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [1] $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [1] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5922:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$114_Y [3:1] \soc.spimemio.xfer.count [0] }, Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$114_Y [3:1], Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1]
      New connections: $techmap\soc.spimemio.xfer.$5\next_count[3:0] [0] = \soc.spimemio.xfer.count [0]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5963:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$102_Y [3:2] \soc.spimemio.xfer.count [1:0] }, Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:2], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$102_Y [3:2], Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0] [3:2]
      New connections: $techmap\soc.spimemio.xfer.$4\next_count[3:0] [1:0] = \soc.spimemio.xfer.count [1:0]
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.$ternary$picosoc.v:114$1160:
      Old ports: A=0, B=\soc.simpleuart_reg_dat_do, Y=$techmap\soc.$ternary$picosoc.v:114$1160_Y
      New ports: A=9'000000000, B=\soc.simpleuart_reg_dat_do [8:0], Y=$techmap\soc.$ternary$picosoc.v:114$1160_Y [8:0]
      New connections: $techmap\soc.$ternary$picosoc.v:114$1160_Y [31:9] = { $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] $techmap\soc.$ternary$picosoc.v:114$1160_Y [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4621:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7026 [4:0] $techmap\soc.cpu.$procmux$4625_Y 1'0 \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4621_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7026 [4:0] $techmap\soc.cpu.$procmux$4625_Y [4:0] \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4621_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4621_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4660:
      Old ports: A=$techmap\soc.cpu.$procmux$4658_Y, B={ 1'0 \soc.cpu.mem_rdata_latched [11:7] }, Y=$techmap\soc.cpu.$procmux$4660_Y
      New ports: A=$techmap\soc.cpu.$procmux$4658_Y [4:0], B=\soc.cpu.mem_rdata_latched [11:7], Y=$techmap\soc.cpu.$procmux$4660_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4660_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4677:
      Old ports: A=$techmap\soc.cpu.$procmux$4675_Y, B={ 1'0 $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4677_Y
      New ports: A=$techmap\soc.cpu.$procmux$4675_Y [4:0], B={ $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4677_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4677_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$procmux$6417:
      Old ports: A={ 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [6:0] }, B={ 4'0000 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6417_Y
      New ports: A={ 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [1] $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [1] 1'1 $techmap\soc.spimemio.$ternary$spimemio.v:316$80_Y [1] 1'1 }, B={ 2'00 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6417_Y [5:0]
      New connections: $techmap\soc.spimemio.$procmux$6417_Y [7:6] = $techmap\soc.spimemio.$procmux$6417_Y [5:4]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$6039:
      Old ports: A=\soc.spimemio.xfer.count, B=$techmap\soc.spimemio.xfer.$5\next_count[3:0], Y=$techmap\soc.spimemio.xfer.$procmux$6039_Y
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1], Y=$techmap\soc.spimemio.xfer.$procmux$6039_Y [3:1]
      New connections: $techmap\soc.spimemio.xfer.$procmux$6039_Y [0] = \soc.spimemio.xfer.count [0]
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4662:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7029 [4:0] 1'0 $auto$wreduce.cc:454:run$7028 [4:0] $techmap\soc.cpu.$procmux$4660_Y }, Y=$techmap\soc.cpu.$procmux$4662_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7029 [4:0] $auto$wreduce.cc:454:run$7028 [4:0] $techmap\soc.cpu.$procmux$4660_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4662_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4662_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4679:
      Old ports: A=$techmap\soc.cpu.$procmux$4677_Y, B={ 1'0 $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4679_Y
      New ports: A=$techmap\soc.cpu.$procmux$4677_Y [4:0], B={ $auto$wreduce.cc:454:run$7019 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4679_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4679_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4681:
      Old ports: A=6'000000, B={ 7'0000010 \soc.cpu.mem_rdata_latched [11:7] 1'0 $auto$wreduce.cc:454:run$7030 [4:0] $techmap\soc.cpu.$procmux$4679_Y }, Y=$techmap\soc.cpu.$procmux$4681_Y
      New ports: A=5'00000, B={ 5'00001 \soc.cpu.mem_rdata_latched [11:7] $auto$wreduce.cc:454:run$7030 [4:0] $techmap\soc.cpu.$procmux$4679_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4681_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4681_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4670:
      Old ports: A=6'000000, B={ 1'0 $techmap\soc.cpu.$procmux$4693_Y [4:0] $techmap\soc.cpu.$procmux$4681_Y 1'0 $techmap\soc.cpu.$procmux$4662_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4670_Y
      New ports: A=5'00000, B={ $techmap\soc.cpu.$procmux$4693_Y [4:0] $techmap\soc.cpu.$procmux$4681_Y [4:0] $techmap\soc.cpu.$procmux$4662_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4670_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4670_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4697:
      Old ports: A={ 1'0 \soc.cpu.mem_rdata_latched [11:7] }, B=$techmap\soc.cpu.$procmux$4670_Y, Y=$techmap\soc.cpu.$procmux$4697_Y
      New ports: A=\soc.cpu.mem_rdata_latched [11:7], B=$techmap\soc.cpu.$procmux$4670_Y [4:0], Y=$techmap\soc.cpu.$procmux$4697_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4697_Y [5] = 1'0
  Optimizing cells in module \hardware.
Performed a total of 47 changes.

8.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

8.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 6 unused cells and 18 unused wires.
<suppressed ~8 debug messages>

8.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.29.9. Rerunning OPT passes. (Maybe there is more to do..)

8.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~294 debug messages>

8.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4196:
      Old ports: A=$techmap\soc.cpu.$3\current_pc[31:0], B=$techmap\soc.cpu.$add$picorv32.v:1530$2484_Y, Y=$techmap\soc.cpu.$procmux$4196_Y
      New ports: A=$techmap\soc.cpu.$3\current_pc[31:0] [31:1], B=$techmap\soc.cpu.$add$picorv32.v:1530$2484_Y [31:1], Y=$techmap\soc.cpu.$procmux$4196_Y [31:1]
      New connections: $techmap\soc.cpu.$procmux$4196_Y [0] = $techmap\soc.cpu.$3\current_pc[31:0] [0]
  Optimizing cells in module \hardware.
Performed a total of 1 changes.

8.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

8.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.29.16. Rerunning OPT passes. (Maybe there is more to do..)

8.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~294 debug messages>

8.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

8.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

8.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.29.23. Finished OPT passes. (There is nothing left to do.)

8.30. Executing ICE40_WRAPCARRY pass (wrap carries).

8.31. Executing TECHMAP pass (map to technology primitives).

8.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

8.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper maccmap for cells of type $macc.
  add \soc.cpu.pcpi_mul.rd [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [11:8] (4 bits, unsigned)
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=24\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=26\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=63\Y_WIDTH=63 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=13 for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
  add \soc.cpu.pcpi_mul.rd [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [35:32] (4 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=4 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.
<suppressed ~5046 debug messages>

8.32. Executing ICE40_OPT pass (performing simple optimizations).

8.32.1. Running ICE40 specific optimizations.

8.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~3823 debug messages>

8.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~6501 debug messages>
Removed a total of 2167 cells.

8.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

8.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 924 unused cells and 3968 unused wires.
<suppressed ~925 debug messages>

8.32.6. Rerunning OPT passes. (Removed registers in this run.)

8.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7234.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7234.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7245.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7250.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7234.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7263.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7263.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7284.slice[0].fadd: CO=\clock.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7287.slice[0].fadd: CO=\clock.counterO [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7290.slice[0].fadd: CO=\pwm.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7293.slice[0].fadd: CO=\pwm.count_temp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7299.slice[0].fadd: CO=\soc.cpu.count_cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7305.slice[0].fadd: CO=\soc.cpu.count_instr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7343.slice[0].fadd: CO=\soc.cpu.pcpi_timeout_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7346.slice[0].fadd: CO=\soc.cpu.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7355.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7355.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7358.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7326.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7361.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7361.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7364.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7364.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7382.slice[0].fadd: CO=\soc.spimemio.rd_addr [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7382.slice[22].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7385.slice[0].fadd: CO=\soc.simpleuart.send_bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7388.slice[0].fadd: CO=\soc.simpleuart.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7391.slice[0].fadd: CO=\soc.simpleuart.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7394.slice[0].fadd: CO=\soc.simpleuart.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7397.slice[0].fadd: CO=\soc.cpu.pcpi_mul.mul_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$12106.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23831.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23838.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23846.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23873.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23880.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23888.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23895.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23922.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23929.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23937.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23944.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23973.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23980.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23988.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23995.slice[0].fadd: CO=1'0

8.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~64 debug messages>

8.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

8.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 3 unused cells and 1 unused wires.
<suppressed ~4 debug messages>

8.32.12. Rerunning OPT passes. (Removed registers in this run.)

8.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7245.slice[1].fadd: CO=$auto$alumacc.cc:474:replace_alu$7234.BB [25]

8.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

8.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

8.32.18. Rerunning OPT passes. (Removed registers in this run.)

8.32.19. Running ICE40 specific optimizations.

8.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

8.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.32.24. Finished OPT passes. (There is nothing left to do.)

8.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

8.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module hardware:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13092 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [0] -> \soc.cpu.mem_rdata_q [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13093 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [1] -> \soc.cpu.mem_rdata_q [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13094 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [2] -> \soc.cpu.mem_rdata_q [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13095 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [3] -> \soc.cpu.mem_rdata_q [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13096 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [4] -> \soc.cpu.mem_rdata_q [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13097 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [5] -> \soc.cpu.mem_rdata_q [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13098 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [6] -> \soc.cpu.mem_rdata_q [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13124 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [0] -> \soc.cpu.mem_16bit_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13125 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [1] -> \soc.cpu.mem_16bit_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13126 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [2] -> \soc.cpu.mem_16bit_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13127 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [3] -> \soc.cpu.mem_16bit_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13128 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [4] -> \soc.cpu.mem_16bit_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13129 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [5] -> \soc.cpu.mem_16bit_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13130 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [6] -> \soc.cpu.mem_16bit_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13131 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [7] -> \soc.cpu.mem_16bit_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13132 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [8] -> \soc.cpu.mem_16bit_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13133 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [9] -> \soc.cpu.mem_16bit_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13134 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [10] -> \soc.cpu.mem_16bit_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13135 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [11] -> \soc.cpu.mem_16bit_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13136 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [12] -> \soc.cpu.mem_16bit_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13137 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [13] -> \soc.cpu.mem_16bit_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13138 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [14] -> \soc.cpu.mem_16bit_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13139 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [15] -> \soc.cpu.mem_16bit_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13140 to $_DFFE_PP_ for $techmap\soc.cpu.$0\prefetched_high_word[0:0] -> \soc.cpu.prefetched_high_word.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13141 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_la_secondword[0:0] -> \soc.cpu.mem_la_secondword.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13142 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [0] -> \soc.cpu.mem_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13143 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [1] -> \soc.cpu.mem_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13144 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [0] -> \soc.cpu.mem_wstrb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13145 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [1] -> \soc.cpu.mem_wstrb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13146 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [2] -> \soc.cpu.mem_wstrb [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13147 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [3] -> \soc.cpu.mem_wstrb [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13148 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [0] -> \soc.cpu.mem_wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13149 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [1] -> \soc.cpu.mem_wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13150 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [2] -> \soc.cpu.mem_wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13151 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [3] -> \soc.cpu.mem_wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13152 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [4] -> \soc.cpu.mem_wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13153 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [5] -> \soc.cpu.mem_wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13154 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [6] -> \soc.cpu.mem_wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13155 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [7] -> \soc.cpu.mem_wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13156 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [8] -> \soc.cpu.mem_wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13157 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [9] -> \soc.cpu.mem_wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13158 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [10] -> \soc.cpu.mem_wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13159 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [11] -> \soc.cpu.mem_wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13160 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [12] -> \soc.cpu.mem_wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13161 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [13] -> \soc.cpu.mem_wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13162 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [14] -> \soc.cpu.mem_wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13163 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [15] -> \soc.cpu.mem_wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13164 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [16] -> \soc.cpu.mem_wdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13165 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [17] -> \soc.cpu.mem_wdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13166 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [18] -> \soc.cpu.mem_wdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13167 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [19] -> \soc.cpu.mem_wdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13168 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [20] -> \soc.cpu.mem_wdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13169 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [21] -> \soc.cpu.mem_wdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13170 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [22] -> \soc.cpu.mem_wdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13171 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [23] -> \soc.cpu.mem_wdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13172 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [24] -> \soc.cpu.mem_wdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13173 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [25] -> \soc.cpu.mem_wdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13174 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [26] -> \soc.cpu.mem_wdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13175 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [27] -> \soc.cpu.mem_wdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13176 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [28] -> \soc.cpu.mem_wdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13177 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [29] -> \soc.cpu.mem_wdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13178 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [30] -> \soc.cpu.mem_wdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13179 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [31] -> \soc.cpu.mem_wdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13180 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [0] -> \soc.cpu.mem_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13181 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [1] -> \soc.cpu.mem_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13182 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [2] -> \soc.cpu.mem_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13183 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [3] -> \soc.cpu.mem_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13184 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [4] -> \soc.cpu.mem_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13185 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [5] -> \soc.cpu.mem_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13186 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [6] -> \soc.cpu.mem_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13187 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [7] -> \soc.cpu.mem_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13188 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [8] -> \soc.cpu.mem_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13189 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [9] -> \soc.cpu.mem_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13190 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [10] -> \soc.cpu.mem_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13191 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [11] -> \soc.cpu.mem_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13192 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [12] -> \soc.cpu.mem_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13193 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [13] -> \soc.cpu.mem_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13194 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [14] -> \soc.cpu.mem_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13195 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [15] -> \soc.cpu.mem_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13196 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [16] -> \soc.cpu.mem_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13197 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [17] -> \soc.cpu.mem_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13198 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [18] -> \soc.cpu.mem_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13199 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [19] -> \soc.cpu.mem_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13200 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [20] -> \soc.cpu.mem_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13201 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [21] -> \soc.cpu.mem_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13202 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [22] -> \soc.cpu.mem_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13203 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [23] -> \soc.cpu.mem_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13204 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [24] -> \soc.cpu.mem_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13205 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [25] -> \soc.cpu.mem_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13206 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [26] -> \soc.cpu.mem_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13207 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [27] -> \soc.cpu.mem_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13208 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [28] -> \soc.cpu.mem_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13209 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [29] -> \soc.cpu.mem_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13210 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [30] -> \soc.cpu.mem_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13211 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [31] -> \soc.cpu.mem_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13212 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_valid[0:0] -> \soc.cpu.mem_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13214 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_reg[0:0] -> \soc.cpu.is_alu_reg_reg.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13215 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_imm[0:0] -> \soc.cpu.is_alu_reg_imm.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13216 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_beq_bne_blt_bge_bltu_bgeu[0:0] -> \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13219 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_sb_sh_sw[0:0] -> \soc.cpu.is_sb_sh_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13220 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0] -> \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13221 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_slli_srli_srai[0:0] -> \soc.cpu.is_slli_srli_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13222 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_lb_lh_lw_lbu_lhu[0:0] -> \soc.cpu.is_lb_lh_lw_lbu_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13224 to $_DFFE_PP_ for $techmap\soc.cpu.$0\compressed_instr[0:0] -> \soc.cpu.compressed_instr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13225 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [0] -> \soc.cpu.decoded_imm_uj [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13226 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [1] -> \soc.cpu.decoded_imm_uj [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13227 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [2] -> \soc.cpu.decoded_imm_uj [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13228 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [3] -> \soc.cpu.decoded_imm_uj [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13229 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [4] -> \soc.cpu.decoded_imm_uj [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13230 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [5] -> \soc.cpu.decoded_imm_uj [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13231 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [6] -> \soc.cpu.decoded_imm_uj [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13232 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [7] -> \soc.cpu.decoded_imm_uj [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13233 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [8] -> \soc.cpu.decoded_imm_uj [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13234 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [9] -> \soc.cpu.decoded_imm_uj [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13235 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [10] -> \soc.cpu.decoded_imm_uj [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13236 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [11] -> \soc.cpu.decoded_imm_uj [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13237 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [12] -> \soc.cpu.decoded_imm_uj [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13238 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [13] -> \soc.cpu.decoded_imm_uj [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13239 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [14] -> \soc.cpu.decoded_imm_uj [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13240 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [15] -> \soc.cpu.decoded_imm_uj [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13241 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [16] -> \soc.cpu.decoded_imm_uj [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13242 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [17] -> \soc.cpu.decoded_imm_uj [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13243 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [18] -> \soc.cpu.decoded_imm_uj [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13244 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [19] -> \soc.cpu.decoded_imm_uj [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13245 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [20] -> \soc.cpu.decoded_imm_uj [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13246 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [21] -> \soc.cpu.decoded_imm_uj [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13247 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [22] -> \soc.cpu.decoded_imm_uj [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13248 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [23] -> \soc.cpu.decoded_imm_uj [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13249 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [24] -> \soc.cpu.decoded_imm_uj [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13250 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [25] -> \soc.cpu.decoded_imm_uj [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13251 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [26] -> \soc.cpu.decoded_imm_uj [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13252 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [27] -> \soc.cpu.decoded_imm_uj [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13253 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [28] -> \soc.cpu.decoded_imm_uj [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13254 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [29] -> \soc.cpu.decoded_imm_uj [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13255 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [30] -> \soc.cpu.decoded_imm_uj [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13256 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [31] -> \soc.cpu.decoded_imm_uj [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13257 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [0] -> \soc.cpu.decoded_imm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13258 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [1] -> \soc.cpu.decoded_imm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13259 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [2] -> \soc.cpu.decoded_imm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13260 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [3] -> \soc.cpu.decoded_imm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13261 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [4] -> \soc.cpu.decoded_imm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13262 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [5] -> \soc.cpu.decoded_imm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13263 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [6] -> \soc.cpu.decoded_imm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13264 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [7] -> \soc.cpu.decoded_imm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13265 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [8] -> \soc.cpu.decoded_imm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13266 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [9] -> \soc.cpu.decoded_imm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13267 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [10] -> \soc.cpu.decoded_imm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13268 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [11] -> \soc.cpu.decoded_imm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13269 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [12] -> \soc.cpu.decoded_imm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13270 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [13] -> \soc.cpu.decoded_imm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13271 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [14] -> \soc.cpu.decoded_imm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13272 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [15] -> \soc.cpu.decoded_imm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13273 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [16] -> \soc.cpu.decoded_imm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13274 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [17] -> \soc.cpu.decoded_imm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13275 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [18] -> \soc.cpu.decoded_imm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13276 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [19] -> \soc.cpu.decoded_imm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13277 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [20] -> \soc.cpu.decoded_imm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13278 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [21] -> \soc.cpu.decoded_imm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13279 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [22] -> \soc.cpu.decoded_imm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13280 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [23] -> \soc.cpu.decoded_imm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13281 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [24] -> \soc.cpu.decoded_imm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13282 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [25] -> \soc.cpu.decoded_imm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13283 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [26] -> \soc.cpu.decoded_imm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13284 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [27] -> \soc.cpu.decoded_imm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13285 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [28] -> \soc.cpu.decoded_imm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13286 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [29] -> \soc.cpu.decoded_imm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13287 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [30] -> \soc.cpu.decoded_imm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13288 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [31] -> \soc.cpu.decoded_imm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13294 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rs2[5:0] [5] -> \soc.cpu.decoded_rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13300 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rs1[5:0] [5] -> \soc.cpu.decoded_rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13301 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [0] -> \soc.cpu.decoded_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13302 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [1] -> \soc.cpu.decoded_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13303 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [2] -> \soc.cpu.decoded_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13304 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [3] -> \soc.cpu.decoded_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13305 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [4] -> \soc.cpu.decoded_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13306 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [5] -> \soc.cpu.decoded_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13307 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_timer[0:0] -> \soc.cpu.instr_timer.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13308 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_waitirq[0:0] -> \soc.cpu.instr_waitirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13309 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_maskirq[0:0] -> \soc.cpu.instr_maskirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13310 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_retirq[0:0] -> \soc.cpu.instr_retirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13311 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_setq[0:0] -> \soc.cpu.instr_setq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13312 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_getq[0:0] -> \soc.cpu.instr_getq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13313 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ecall_ebreak[0:0] -> \soc.cpu.instr_ecall_ebreak.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13314 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstrh[0:0] -> \soc.cpu.instr_rdinstrh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13315 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstr[0:0] -> \soc.cpu.instr_rdinstr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13316 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycleh[0:0] -> \soc.cpu.instr_rdcycleh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13317 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycle[0:0] -> \soc.cpu.instr_rdcycle.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13318 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_and[0:0] -> \soc.cpu.instr_and.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13319 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_or[0:0] -> \soc.cpu.instr_or.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13320 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sra[0:0] -> \soc.cpu.instr_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13321 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srl[0:0] -> \soc.cpu.instr_srl.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13322 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xor[0:0] -> \soc.cpu.instr_xor.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13323 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltu[0:0] -> \soc.cpu.instr_sltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13324 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slt[0:0] -> \soc.cpu.instr_slt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13325 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sll[0:0] -> \soc.cpu.instr_sll.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13326 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sub[0:0] -> \soc.cpu.instr_sub.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13327 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_add[0:0] -> \soc.cpu.instr_add.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13328 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srai[0:0] -> \soc.cpu.instr_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13329 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srli[0:0] -> \soc.cpu.instr_srli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13330 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slli[0:0] -> \soc.cpu.instr_slli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13331 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_andi[0:0] -> \soc.cpu.instr_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13332 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ori[0:0] -> \soc.cpu.instr_ori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13333 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xori[0:0] -> \soc.cpu.instr_xori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13334 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltiu[0:0] -> \soc.cpu.instr_sltiu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13335 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slti[0:0] -> \soc.cpu.instr_slti.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13336 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_addi[0:0] -> \soc.cpu.instr_addi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13337 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sw[0:0] -> \soc.cpu.instr_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13338 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sh[0:0] -> \soc.cpu.instr_sh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13339 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sb[0:0] -> \soc.cpu.instr_sb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13340 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lhu[0:0] -> \soc.cpu.instr_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13341 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lbu[0:0] -> \soc.cpu.instr_lbu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13342 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lw[0:0] -> \soc.cpu.instr_lw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13343 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lh[0:0] -> \soc.cpu.instr_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13344 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lb[0:0] -> \soc.cpu.instr_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13345 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bgeu[0:0] -> \soc.cpu.instr_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13346 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bltu[0:0] -> \soc.cpu.instr_bltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13347 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bge[0:0] -> \soc.cpu.instr_bge.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13348 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_blt[0:0] -> \soc.cpu.instr_blt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13349 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bne[0:0] -> \soc.cpu.instr_bne.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13350 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_beq[0:0] -> \soc.cpu.instr_beq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13351 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jalr[0:0] -> \soc.cpu.instr_jalr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13352 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jal[0:0] -> \soc.cpu.instr_jal.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13353 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_auipc[0:0] -> \soc.cpu.instr_auipc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13354 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lui[0:0] -> \soc.cpu.instr_lui.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13355 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [0] -> \soc.cpu.pcpi_insn [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13356 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [1] -> \soc.cpu.pcpi_insn [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13357 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [2] -> \soc.cpu.pcpi_insn [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13358 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [3] -> \soc.cpu.pcpi_insn [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13359 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [4] -> \soc.cpu.pcpi_insn [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13360 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [5] -> \soc.cpu.pcpi_insn [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13361 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [6] -> \soc.cpu.pcpi_insn [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13367 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [12] -> \soc.cpu.pcpi_insn [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13368 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [13] -> \soc.cpu.pcpi_insn [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13369 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [14] -> \soc.cpu.pcpi_insn [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13380 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [25] -> \soc.cpu.pcpi_insn [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13381 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [26] -> \soc.cpu.pcpi_insn [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13382 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [27] -> \soc.cpu.pcpi_insn [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13383 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [28] -> \soc.cpu.pcpi_insn [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13384 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [29] -> \soc.cpu.pcpi_insn [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13385 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [30] -> \soc.cpu.pcpi_insn [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13386 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [31] -> \soc.cpu.pcpi_insn [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13422 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [0] -> \soc.cpu.pcpi_timeout_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13423 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [1] -> \soc.cpu.pcpi_timeout_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13424 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [2] -> \soc.cpu.pcpi_timeout_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13425 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [3] -> \soc.cpu.pcpi_timeout_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13426 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [0] -> \soc.cpu.latched_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13427 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [1] -> \soc.cpu.latched_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13428 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [2] -> \soc.cpu.latched_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13429 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [3] -> \soc.cpu.latched_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13430 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [4] -> \soc.cpu.latched_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13431 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [5] -> \soc.cpu.latched_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13432 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lb[0:0] -> \soc.cpu.latched_is_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13433 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lh[0:0] -> \soc.cpu.latched_is_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13434 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_compr[0:0] -> \soc.cpu.latched_compr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13435 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_branch[0:0] -> \soc.cpu.latched_branch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13436 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_stalu[0:0] -> \soc.cpu.latched_stalu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13437 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_store[0:0] -> \soc.cpu.latched_store.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13438 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [0] -> \soc.cpu.irq_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13439 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [1] -> \soc.cpu.irq_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13442 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_wdata[0:0] -> \soc.cpu.mem_do_wdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13443 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rdata[0:0] -> \soc.cpu.mem_do_rdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13444 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rinst[0:0] -> \soc.cpu.mem_do_rinst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13445 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_prefetch[0:0] -> \soc.cpu.mem_do_prefetch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13446 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [0] -> \soc.cpu.mem_wordsize [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13447 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [1] -> \soc.cpu.mem_wordsize [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13481 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [1] -> \soc.cpu.irq_pending [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13483 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [3] -> \soc.cpu.irq_pending [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13484 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [4] -> \soc.cpu.irq_pending [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13485 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [5] -> \soc.cpu.irq_pending [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13486 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [6] -> \soc.cpu.irq_pending [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13487 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [7] -> \soc.cpu.irq_pending [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13488 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [8] -> \soc.cpu.irq_pending [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13489 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [9] -> \soc.cpu.irq_pending [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13490 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [10] -> \soc.cpu.irq_pending [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13491 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [11] -> \soc.cpu.irq_pending [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13492 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [12] -> \soc.cpu.irq_pending [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13493 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [13] -> \soc.cpu.irq_pending [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13494 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [14] -> \soc.cpu.irq_pending [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13495 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [15] -> \soc.cpu.irq_pending [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13496 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [16] -> \soc.cpu.irq_pending [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13497 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [17] -> \soc.cpu.irq_pending [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13498 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [18] -> \soc.cpu.irq_pending [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13499 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [19] -> \soc.cpu.irq_pending [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13500 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [20] -> \soc.cpu.irq_pending [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13501 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [21] -> \soc.cpu.irq_pending [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13502 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [22] -> \soc.cpu.irq_pending [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13503 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [23] -> \soc.cpu.irq_pending [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13504 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [24] -> \soc.cpu.irq_pending [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13505 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [25] -> \soc.cpu.irq_pending [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13506 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [26] -> \soc.cpu.irq_pending [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13507 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [27] -> \soc.cpu.irq_pending [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13508 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [28] -> \soc.cpu.irq_pending [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13509 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [29] -> \soc.cpu.irq_pending [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13510 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [30] -> \soc.cpu.irq_pending [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13511 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [31] -> \soc.cpu.irq_pending [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13512 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [0] -> \soc.cpu.irq_mask [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13513 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [1] -> \soc.cpu.irq_mask [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13514 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [2] -> \soc.cpu.irq_mask [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13515 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [3] -> \soc.cpu.irq_mask [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13516 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [4] -> \soc.cpu.irq_mask [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13517 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [5] -> \soc.cpu.irq_mask [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13518 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [6] -> \soc.cpu.irq_mask [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13519 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [7] -> \soc.cpu.irq_mask [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13520 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [8] -> \soc.cpu.irq_mask [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13521 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [9] -> \soc.cpu.irq_mask [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13522 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [10] -> \soc.cpu.irq_mask [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13523 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [11] -> \soc.cpu.irq_mask [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13524 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [12] -> \soc.cpu.irq_mask [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13525 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [13] -> \soc.cpu.irq_mask [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13526 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [14] -> \soc.cpu.irq_mask [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13527 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [15] -> \soc.cpu.irq_mask [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13528 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [16] -> \soc.cpu.irq_mask [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13529 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [17] -> \soc.cpu.irq_mask [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13530 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [18] -> \soc.cpu.irq_mask [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13531 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [19] -> \soc.cpu.irq_mask [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13532 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [20] -> \soc.cpu.irq_mask [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13533 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [21] -> \soc.cpu.irq_mask [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13534 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [22] -> \soc.cpu.irq_mask [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13535 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [23] -> \soc.cpu.irq_mask [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13536 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [24] -> \soc.cpu.irq_mask [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13537 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [25] -> \soc.cpu.irq_mask [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13538 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [26] -> \soc.cpu.irq_mask [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13539 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [27] -> \soc.cpu.irq_mask [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13540 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [28] -> \soc.cpu.irq_mask [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13541 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [29] -> \soc.cpu.irq_mask [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13542 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [30] -> \soc.cpu.irq_mask [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13543 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [31] -> \soc.cpu.irq_mask [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13544 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_active[0:0] -> \soc.cpu.irq_active.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13545 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_delay[0:0] -> \soc.cpu.irq_delay.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13578 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [0] -> \soc.cpu.reg_op2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13579 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [1] -> \soc.cpu.reg_op2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13580 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [2] -> \soc.cpu.reg_op2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13581 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [3] -> \soc.cpu.reg_op2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13582 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [4] -> \soc.cpu.reg_op2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13583 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [5] -> \soc.cpu.reg_op2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13584 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [6] -> \soc.cpu.reg_op2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13585 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [7] -> \soc.cpu.reg_op2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13586 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [8] -> \soc.cpu.reg_op2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13587 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [9] -> \soc.cpu.reg_op2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13588 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [10] -> \soc.cpu.reg_op2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13589 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [11] -> \soc.cpu.reg_op2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13590 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [12] -> \soc.cpu.reg_op2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13591 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [13] -> \soc.cpu.reg_op2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13592 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [14] -> \soc.cpu.reg_op2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13593 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [15] -> \soc.cpu.reg_op2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13594 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [16] -> \soc.cpu.reg_op2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13595 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [17] -> \soc.cpu.reg_op2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13596 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [18] -> \soc.cpu.reg_op2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13597 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [19] -> \soc.cpu.reg_op2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13598 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [20] -> \soc.cpu.reg_op2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13599 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [21] -> \soc.cpu.reg_op2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13600 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [22] -> \soc.cpu.reg_op2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13601 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [23] -> \soc.cpu.reg_op2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13602 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [24] -> \soc.cpu.reg_op2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13603 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [25] -> \soc.cpu.reg_op2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13604 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [26] -> \soc.cpu.reg_op2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13605 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [27] -> \soc.cpu.reg_op2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13606 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [28] -> \soc.cpu.reg_op2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13607 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [29] -> \soc.cpu.reg_op2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13608 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [30] -> \soc.cpu.reg_op2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13609 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [31] -> \soc.cpu.reg_op2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13610 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [0] -> \soc.cpu.reg_op1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13611 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [1] -> \soc.cpu.reg_op1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13612 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [2] -> \soc.cpu.reg_op1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13613 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [3] -> \soc.cpu.reg_op1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13614 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [4] -> \soc.cpu.reg_op1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13615 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [5] -> \soc.cpu.reg_op1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13616 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [6] -> \soc.cpu.reg_op1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13617 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [7] -> \soc.cpu.reg_op1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13618 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [8] -> \soc.cpu.reg_op1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13619 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [9] -> \soc.cpu.reg_op1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13620 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [10] -> \soc.cpu.reg_op1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13621 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [11] -> \soc.cpu.reg_op1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13622 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [12] -> \soc.cpu.reg_op1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13623 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [13] -> \soc.cpu.reg_op1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13624 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [14] -> \soc.cpu.reg_op1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13625 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [15] -> \soc.cpu.reg_op1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13626 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [16] -> \soc.cpu.reg_op1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13627 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [17] -> \soc.cpu.reg_op1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13628 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [18] -> \soc.cpu.reg_op1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13629 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [19] -> \soc.cpu.reg_op1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13630 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [20] -> \soc.cpu.reg_op1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13631 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [21] -> \soc.cpu.reg_op1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13632 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [22] -> \soc.cpu.reg_op1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13633 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [23] -> \soc.cpu.reg_op1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13634 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [24] -> \soc.cpu.reg_op1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13635 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [25] -> \soc.cpu.reg_op1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13636 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [26] -> \soc.cpu.reg_op1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13637 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [27] -> \soc.cpu.reg_op1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13638 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [28] -> \soc.cpu.reg_op1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13639 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [29] -> \soc.cpu.reg_op1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13640 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [30] -> \soc.cpu.reg_op1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13641 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [31] -> \soc.cpu.reg_op1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13642 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [0] -> \soc.cpu.reg_next_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13643 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [1] -> \soc.cpu.reg_next_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13644 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [2] -> \soc.cpu.reg_next_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13645 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [3] -> \soc.cpu.reg_next_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13646 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [4] -> \soc.cpu.reg_next_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13647 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [5] -> \soc.cpu.reg_next_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13648 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [6] -> \soc.cpu.reg_next_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13649 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [7] -> \soc.cpu.reg_next_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13650 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [8] -> \soc.cpu.reg_next_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13651 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [9] -> \soc.cpu.reg_next_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13652 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [10] -> \soc.cpu.reg_next_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13653 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [11] -> \soc.cpu.reg_next_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13654 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [12] -> \soc.cpu.reg_next_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13655 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [13] -> \soc.cpu.reg_next_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13656 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [14] -> \soc.cpu.reg_next_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13657 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [15] -> \soc.cpu.reg_next_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13658 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [16] -> \soc.cpu.reg_next_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13659 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [17] -> \soc.cpu.reg_next_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13660 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [18] -> \soc.cpu.reg_next_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13661 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [19] -> \soc.cpu.reg_next_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13662 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [20] -> \soc.cpu.reg_next_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13663 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [21] -> \soc.cpu.reg_next_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13664 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [22] -> \soc.cpu.reg_next_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13665 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [23] -> \soc.cpu.reg_next_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13666 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [24] -> \soc.cpu.reg_next_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13667 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [25] -> \soc.cpu.reg_next_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13668 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [26] -> \soc.cpu.reg_next_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13669 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [27] -> \soc.cpu.reg_next_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13670 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [28] -> \soc.cpu.reg_next_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13671 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [29] -> \soc.cpu.reg_next_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13672 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [30] -> \soc.cpu.reg_next_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13673 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [31] -> \soc.cpu.reg_next_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13674 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [0] -> \soc.cpu.reg_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13675 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [1] -> \soc.cpu.reg_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13676 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [2] -> \soc.cpu.reg_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13677 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [3] -> \soc.cpu.reg_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13678 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [4] -> \soc.cpu.reg_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13679 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [5] -> \soc.cpu.reg_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13680 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [6] -> \soc.cpu.reg_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13681 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [7] -> \soc.cpu.reg_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13682 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [8] -> \soc.cpu.reg_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13683 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [9] -> \soc.cpu.reg_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13684 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [10] -> \soc.cpu.reg_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13685 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [11] -> \soc.cpu.reg_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13686 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [12] -> \soc.cpu.reg_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13687 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [13] -> \soc.cpu.reg_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13688 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [14] -> \soc.cpu.reg_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13689 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [15] -> \soc.cpu.reg_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13690 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [16] -> \soc.cpu.reg_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13691 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [17] -> \soc.cpu.reg_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13692 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [18] -> \soc.cpu.reg_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13693 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [19] -> \soc.cpu.reg_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13694 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [20] -> \soc.cpu.reg_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13695 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [21] -> \soc.cpu.reg_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13696 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [22] -> \soc.cpu.reg_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13697 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [23] -> \soc.cpu.reg_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13698 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [24] -> \soc.cpu.reg_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13699 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [25] -> \soc.cpu.reg_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13700 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [26] -> \soc.cpu.reg_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13701 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [27] -> \soc.cpu.reg_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13702 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [28] -> \soc.cpu.reg_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13703 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [29] -> \soc.cpu.reg_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13704 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [30] -> \soc.cpu.reg_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13705 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [31] -> \soc.cpu.reg_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13706 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [0] -> \soc.cpu.count_instr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13707 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [1] -> \soc.cpu.count_instr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13708 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [2] -> \soc.cpu.count_instr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13709 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [3] -> \soc.cpu.count_instr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13710 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [4] -> \soc.cpu.count_instr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13711 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [5] -> \soc.cpu.count_instr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13712 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [6] -> \soc.cpu.count_instr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13713 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [7] -> \soc.cpu.count_instr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13714 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [8] -> \soc.cpu.count_instr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13715 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [9] -> \soc.cpu.count_instr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13716 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [10] -> \soc.cpu.count_instr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13717 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [11] -> \soc.cpu.count_instr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13718 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [12] -> \soc.cpu.count_instr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13719 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [13] -> \soc.cpu.count_instr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13720 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [14] -> \soc.cpu.count_instr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13721 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [15] -> \soc.cpu.count_instr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13722 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [16] -> \soc.cpu.count_instr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13723 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [17] -> \soc.cpu.count_instr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13724 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [18] -> \soc.cpu.count_instr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13725 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [19] -> \soc.cpu.count_instr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13726 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [20] -> \soc.cpu.count_instr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13727 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [21] -> \soc.cpu.count_instr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13728 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [22] -> \soc.cpu.count_instr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13729 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [23] -> \soc.cpu.count_instr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13730 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [24] -> \soc.cpu.count_instr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13731 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [25] -> \soc.cpu.count_instr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13732 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [26] -> \soc.cpu.count_instr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13733 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [27] -> \soc.cpu.count_instr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13734 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [28] -> \soc.cpu.count_instr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13735 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [29] -> \soc.cpu.count_instr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13736 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [30] -> \soc.cpu.count_instr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13737 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [31] -> \soc.cpu.count_instr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13738 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [32] -> \soc.cpu.count_instr [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13739 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [33] -> \soc.cpu.count_instr [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13740 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [34] -> \soc.cpu.count_instr [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13741 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [35] -> \soc.cpu.count_instr [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13742 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [36] -> \soc.cpu.count_instr [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13743 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [37] -> \soc.cpu.count_instr [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13744 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [38] -> \soc.cpu.count_instr [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13745 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [39] -> \soc.cpu.count_instr [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13746 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [40] -> \soc.cpu.count_instr [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13747 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [41] -> \soc.cpu.count_instr [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13748 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [42] -> \soc.cpu.count_instr [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13749 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [43] -> \soc.cpu.count_instr [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13750 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [44] -> \soc.cpu.count_instr [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13751 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [45] -> \soc.cpu.count_instr [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13752 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [46] -> \soc.cpu.count_instr [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13753 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [47] -> \soc.cpu.count_instr [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13754 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [48] -> \soc.cpu.count_instr [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13755 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [49] -> \soc.cpu.count_instr [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13756 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [50] -> \soc.cpu.count_instr [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13757 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [51] -> \soc.cpu.count_instr [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13758 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [52] -> \soc.cpu.count_instr [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13759 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [53] -> \soc.cpu.count_instr [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13760 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [54] -> \soc.cpu.count_instr [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13761 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [55] -> \soc.cpu.count_instr [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13762 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [56] -> \soc.cpu.count_instr [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13763 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [57] -> \soc.cpu.count_instr [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13764 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [58] -> \soc.cpu.count_instr [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13765 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [59] -> \soc.cpu.count_instr [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13766 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [60] -> \soc.cpu.count_instr [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13767 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [61] -> \soc.cpu.count_instr [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13768 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [62] -> \soc.cpu.count_instr [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13769 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [63] -> \soc.cpu.count_instr [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13834 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_valid[0:0] -> \soc.cpu.pcpi_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20118 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [0] -> \soc.simpleuart.cfg_divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20119 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [1] -> \soc.simpleuart.cfg_divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20120 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [2] -> \soc.simpleuart.cfg_divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20121 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [3] -> \soc.simpleuart.cfg_divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20122 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [4] -> \soc.simpleuart.cfg_divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20123 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [5] -> \soc.simpleuart.cfg_divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20124 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [6] -> \soc.simpleuart.cfg_divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20125 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [7] -> \soc.simpleuart.cfg_divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20126 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [8] -> \soc.simpleuart.cfg_divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20127 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [9] -> \soc.simpleuart.cfg_divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20128 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [10] -> \soc.simpleuart.cfg_divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20129 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [11] -> \soc.simpleuart.cfg_divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20130 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [12] -> \soc.simpleuart.cfg_divider [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20131 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [13] -> \soc.simpleuart.cfg_divider [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20132 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [14] -> \soc.simpleuart.cfg_divider [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20133 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [15] -> \soc.simpleuart.cfg_divider [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20134 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [16] -> \soc.simpleuart.cfg_divider [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20135 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [17] -> \soc.simpleuart.cfg_divider [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20136 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [18] -> \soc.simpleuart.cfg_divider [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20137 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [19] -> \soc.simpleuart.cfg_divider [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20138 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [20] -> \soc.simpleuart.cfg_divider [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20139 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [21] -> \soc.simpleuart.cfg_divider [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20140 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [22] -> \soc.simpleuart.cfg_divider [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20141 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [23] -> \soc.simpleuart.cfg_divider [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20142 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [24] -> \soc.simpleuart.cfg_divider [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20143 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [25] -> \soc.simpleuart.cfg_divider [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20144 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [26] -> \soc.simpleuart.cfg_divider [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20145 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [27] -> \soc.simpleuart.cfg_divider [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20146 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [28] -> \soc.simpleuart.cfg_divider [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20147 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [29] -> \soc.simpleuart.cfg_divider [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20148 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [30] -> \soc.simpleuart.cfg_divider [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20149 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [31] -> \soc.simpleuart.cfg_divider [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20151 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [0] -> \soc.simpleuart.recv_buf_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20152 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [1] -> \soc.simpleuart.recv_buf_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20153 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [2] -> \soc.simpleuart.recv_buf_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20154 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [3] -> \soc.simpleuart.recv_buf_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20155 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [4] -> \soc.simpleuart.recv_buf_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20156 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [5] -> \soc.simpleuart.recv_buf_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20157 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [6] -> \soc.simpleuart.recv_buf_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20158 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [7] -> \soc.simpleuart.recv_buf_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20159 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [0] -> \soc.simpleuart.recv_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20160 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [1] -> \soc.simpleuart.recv_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20161 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [2] -> \soc.simpleuart.recv_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20162 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [3] -> \soc.simpleuart.recv_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20163 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [4] -> \soc.simpleuart.recv_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20164 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [5] -> \soc.simpleuart.recv_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20165 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [6] -> \soc.simpleuart.recv_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20166 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [7] -> \soc.simpleuart.recv_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20199 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [0] -> \soc.simpleuart.recv_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20200 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [1] -> \soc.simpleuart.recv_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20201 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [2] -> \soc.simpleuart.recv_state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20202 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [3] -> \soc.simpleuart.recv_state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20203 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_dummy[0:0] -> \soc.simpleuart.send_dummy.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20236 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [0] -> \soc.simpleuart.send_bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20237 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [1] -> \soc.simpleuart.send_bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20238 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [2] -> \soc.simpleuart.send_bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20239 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [3] -> \soc.simpleuart.send_bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20240 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [0] -> \soc.simpleuart.send_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20241 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [1] -> \soc.simpleuart.send_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20242 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [2] -> \soc.simpleuart.send_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20243 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [3] -> \soc.simpleuart.send_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20244 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [4] -> \soc.simpleuart.send_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20245 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [5] -> \soc.simpleuart.send_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20246 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [6] -> \soc.simpleuart.send_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20247 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [7] -> \soc.simpleuart.send_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20248 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [8] -> \soc.simpleuart.send_pattern [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20249 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [9] -> \soc.simpleuart.send_pattern [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20858 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [0] -> \soc.spimemio.config_do [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20859 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [1] -> \soc.spimemio.config_do [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20860 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [2] -> \soc.spimemio.config_do [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20861 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [3] -> \soc.spimemio.config_do [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20862 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_clk[0:0] -> \soc.spimemio.config_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20863 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_csb[0:0] -> \soc.spimemio.config_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20864 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [0] -> \soc.spimemio.config_oe [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20865 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [1] -> \soc.spimemio.config_oe [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20866 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [2] -> \soc.spimemio.config_oe [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20867 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [3] -> \soc.spimemio.config_oe [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20868 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [0] -> \soc.spimemio.config_dummy [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20869 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [1] -> \soc.spimemio.config_dummy [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20870 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [2] -> \soc.spimemio.config_dummy [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20871 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [3] -> \soc.spimemio.config_dummy [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20872 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_cont[0:0] -> \soc.spimemio.config_cont.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20873 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_qspi[0:0] -> \soc.spimemio.config_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20874 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_ddr[0:0] -> \soc.spimemio.config_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20875 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_en[0:0] -> \soc.spimemio.config_en.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20881 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [0] -> \soc.spimemio.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20882 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [1] -> \soc.spimemio.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20883 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [2] -> \soc.spimemio.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20884 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [3] -> \soc.spimemio.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20885 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_inc[0:0] -> \soc.spimemio.rd_inc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20886 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_wait[0:0] -> \soc.spimemio.rd_wait.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20887 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_valid[0:0] -> \soc.spimemio.rd_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20888 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [0] -> \soc.spimemio.rd_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20889 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [1] -> \soc.spimemio.rd_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20890 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [2] -> \soc.spimemio.rd_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20891 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [3] -> \soc.spimemio.rd_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20892 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [4] -> \soc.spimemio.rd_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20893 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [5] -> \soc.spimemio.rd_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20894 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [6] -> \soc.spimemio.rd_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20895 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [7] -> \soc.spimemio.rd_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20896 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [8] -> \soc.spimemio.rd_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20897 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [9] -> \soc.spimemio.rd_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20898 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [10] -> \soc.spimemio.rd_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20899 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [11] -> \soc.spimemio.rd_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20900 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [12] -> \soc.spimemio.rd_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20901 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [13] -> \soc.spimemio.rd_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20902 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [14] -> \soc.spimemio.rd_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20903 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [15] -> \soc.spimemio.rd_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20904 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [16] -> \soc.spimemio.rd_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20905 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [17] -> \soc.spimemio.rd_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20906 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [18] -> \soc.spimemio.rd_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20907 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [19] -> \soc.spimemio.rd_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20908 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [20] -> \soc.spimemio.rd_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20909 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [21] -> \soc.spimemio.rd_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20910 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [22] -> \soc.spimemio.rd_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20911 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [23] -> \soc.spimemio.rd_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20912 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [0] -> \soc.spimemio.buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20913 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [1] -> \soc.spimemio.buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20914 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [2] -> \soc.spimemio.buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20915 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [3] -> \soc.spimemio.buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20916 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [4] -> \soc.spimemio.buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20917 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [5] -> \soc.spimemio.buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20918 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [6] -> \soc.spimemio.buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20919 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [7] -> \soc.spimemio.buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20920 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [8] -> \soc.spimemio.buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20921 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [9] -> \soc.spimemio.buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20922 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [10] -> \soc.spimemio.buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20923 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [11] -> \soc.spimemio.buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20924 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [12] -> \soc.spimemio.buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20925 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [13] -> \soc.spimemio.buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20926 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [14] -> \soc.spimemio.buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20927 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [15] -> \soc.spimemio.buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20928 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [16] -> \soc.spimemio.buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20929 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [17] -> \soc.spimemio.buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20930 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [18] -> \soc.spimemio.buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20931 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [19] -> \soc.spimemio.buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20932 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [20] -> \soc.spimemio.buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20933 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [21] -> \soc.spimemio.buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20934 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [22] -> \soc.spimemio.buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20935 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [23] -> \soc.spimemio.buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20936 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_rd[0:0] -> \soc.spimemio.din_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20939 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [0] -> \soc.spimemio.din_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20940 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [1] -> \soc.spimemio.din_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20941 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [2] -> \soc.spimemio.din_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20942 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [3] -> \soc.spimemio.din_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20943 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [0] -> \soc.spimemio.din_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20944 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [1] -> \soc.spimemio.din_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20945 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [2] -> \soc.spimemio.din_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20946 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [3] -> \soc.spimemio.din_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20947 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [4] -> \soc.spimemio.din_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20948 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [5] -> \soc.spimemio.din_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20949 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [6] -> \soc.spimemio.din_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20950 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [7] -> \soc.spimemio.din_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20953 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [0] -> \soc.spimem_rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20954 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [1] -> \soc.spimem_rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20955 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [2] -> $auto$wreduce.cc:454:run$7071 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20956 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [3] -> $auto$wreduce.cc:454:run$7071 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20957 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [4] -> $auto$wreduce.cc:454:run$7071 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20958 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [5] -> $auto$wreduce.cc:454:run$7071 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20959 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [6] -> $auto$wreduce.cc:454:run$7071 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20960 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [7] -> $auto$wreduce.cc:454:run$7071 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20961 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [8] -> $auto$wreduce.cc:454:run$7071 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20962 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [9] -> $auto$wreduce.cc:454:run$7071 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20963 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [10] -> $auto$wreduce.cc:454:run$7071 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20964 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [11] -> $auto$wreduce.cc:454:run$7071 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20965 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [12] -> $auto$wreduce.cc:454:run$7071 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20966 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [13] -> $auto$wreduce.cc:454:run$7071 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20967 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [14] -> $auto$wreduce.cc:454:run$7071 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20968 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [15] -> $auto$wreduce.cc:454:run$7071 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20969 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [16] -> $auto$wreduce.cc:454:run$7071 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20970 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [17] -> $auto$wreduce.cc:454:run$7071 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20971 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [18] -> $auto$wreduce.cc:454:run$7071 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20972 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [19] -> $auto$wreduce.cc:454:run$7071 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20973 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [20] -> $auto$wreduce.cc:454:run$7071 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20974 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [21] -> $auto$wreduce.cc:454:run$7071 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20975 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [22] -> $auto$wreduce.cc:454:run$7071 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20976 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [23] -> $auto$wreduce.cc:454:run$7071 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20977 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [24] -> $auto$wreduce.cc:454:run$7071 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20978 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [25] -> $auto$wreduce.cc:454:run$7071 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20979 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [26] -> $auto$wreduce.cc:454:run$7071 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20980 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [27] -> $auto$wreduce.cc:454:run$7071 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20981 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [28] -> $auto$wreduce.cc:454:run$7071 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20982 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [29] -> $auto$wreduce.cc:454:run$7071 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20983 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [30] -> $auto$wreduce.cc:454:run$7071 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20984 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [31] -> $auto$wreduce.cc:454:run$7071 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21668 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\outsign[0:0] -> \soc.cpu.pcpi_div.outsign.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21669 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\running[0:0] -> \soc.cpu.pcpi_div.running.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21670 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [0] -> \soc.cpu.pcpi_div.quotient_msk [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21671 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [1] -> \soc.cpu.pcpi_div.quotient_msk [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21672 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [2] -> \soc.cpu.pcpi_div.quotient_msk [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21673 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [3] -> \soc.cpu.pcpi_div.quotient_msk [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21674 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [4] -> \soc.cpu.pcpi_div.quotient_msk [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21675 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [5] -> \soc.cpu.pcpi_div.quotient_msk [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21676 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [6] -> \soc.cpu.pcpi_div.quotient_msk [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21677 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [7] -> \soc.cpu.pcpi_div.quotient_msk [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21678 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [8] -> \soc.cpu.pcpi_div.quotient_msk [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21679 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [9] -> \soc.cpu.pcpi_div.quotient_msk [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21680 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [10] -> \soc.cpu.pcpi_div.quotient_msk [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21681 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [11] -> \soc.cpu.pcpi_div.quotient_msk [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21682 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [12] -> \soc.cpu.pcpi_div.quotient_msk [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21683 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [13] -> \soc.cpu.pcpi_div.quotient_msk [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21684 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [14] -> \soc.cpu.pcpi_div.quotient_msk [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21685 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [15] -> \soc.cpu.pcpi_div.quotient_msk [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21686 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [16] -> \soc.cpu.pcpi_div.quotient_msk [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21687 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [17] -> \soc.cpu.pcpi_div.quotient_msk [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21688 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [18] -> \soc.cpu.pcpi_div.quotient_msk [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21689 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [19] -> \soc.cpu.pcpi_div.quotient_msk [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21690 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [20] -> \soc.cpu.pcpi_div.quotient_msk [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21691 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [21] -> \soc.cpu.pcpi_div.quotient_msk [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21692 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [22] -> \soc.cpu.pcpi_div.quotient_msk [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21693 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [23] -> \soc.cpu.pcpi_div.quotient_msk [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21694 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [24] -> \soc.cpu.pcpi_div.quotient_msk [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21695 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [25] -> \soc.cpu.pcpi_div.quotient_msk [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21696 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [26] -> \soc.cpu.pcpi_div.quotient_msk [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21697 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [27] -> \soc.cpu.pcpi_div.quotient_msk [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21698 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [28] -> \soc.cpu.pcpi_div.quotient_msk [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21699 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [29] -> \soc.cpu.pcpi_div.quotient_msk [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21700 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [30] -> \soc.cpu.pcpi_div.quotient_msk [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21701 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [31] -> \soc.cpu.pcpi_div.quotient_msk [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21702 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [0] -> \soc.cpu.pcpi_div.quotient [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21703 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [1] -> \soc.cpu.pcpi_div.quotient [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21704 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [2] -> \soc.cpu.pcpi_div.quotient [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21705 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [3] -> \soc.cpu.pcpi_div.quotient [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21706 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [4] -> \soc.cpu.pcpi_div.quotient [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21707 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [5] -> \soc.cpu.pcpi_div.quotient [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21708 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [6] -> \soc.cpu.pcpi_div.quotient [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21709 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [7] -> \soc.cpu.pcpi_div.quotient [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21710 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [8] -> \soc.cpu.pcpi_div.quotient [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21711 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [9] -> \soc.cpu.pcpi_div.quotient [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21712 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [10] -> \soc.cpu.pcpi_div.quotient [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21713 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [11] -> \soc.cpu.pcpi_div.quotient [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21714 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [12] -> \soc.cpu.pcpi_div.quotient [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21715 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [13] -> \soc.cpu.pcpi_div.quotient [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21716 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [14] -> \soc.cpu.pcpi_div.quotient [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21717 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [15] -> \soc.cpu.pcpi_div.quotient [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21718 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [16] -> \soc.cpu.pcpi_div.quotient [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21719 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [17] -> \soc.cpu.pcpi_div.quotient [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21720 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [18] -> \soc.cpu.pcpi_div.quotient [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21721 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [19] -> \soc.cpu.pcpi_div.quotient [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21722 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [20] -> \soc.cpu.pcpi_div.quotient [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21723 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [21] -> \soc.cpu.pcpi_div.quotient [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21724 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [22] -> \soc.cpu.pcpi_div.quotient [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21725 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [23] -> \soc.cpu.pcpi_div.quotient [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21726 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [24] -> \soc.cpu.pcpi_div.quotient [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21727 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [25] -> \soc.cpu.pcpi_div.quotient [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21728 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [26] -> \soc.cpu.pcpi_div.quotient [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21729 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [27] -> \soc.cpu.pcpi_div.quotient [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21730 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [28] -> \soc.cpu.pcpi_div.quotient [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21731 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [29] -> \soc.cpu.pcpi_div.quotient [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21732 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [30] -> \soc.cpu.pcpi_div.quotient [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21733 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [31] -> \soc.cpu.pcpi_div.quotient [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21734 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [0] -> \soc.cpu.pcpi_div.divisor [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21735 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [1] -> \soc.cpu.pcpi_div.divisor [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21736 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [2] -> \soc.cpu.pcpi_div.divisor [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21737 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [3] -> \soc.cpu.pcpi_div.divisor [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21738 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [4] -> \soc.cpu.pcpi_div.divisor [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21739 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [5] -> \soc.cpu.pcpi_div.divisor [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21740 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [6] -> \soc.cpu.pcpi_div.divisor [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21741 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [7] -> \soc.cpu.pcpi_div.divisor [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21742 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [8] -> \soc.cpu.pcpi_div.divisor [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21743 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [9] -> \soc.cpu.pcpi_div.divisor [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21744 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [10] -> \soc.cpu.pcpi_div.divisor [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21745 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [11] -> \soc.cpu.pcpi_div.divisor [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21746 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [12] -> \soc.cpu.pcpi_div.divisor [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21747 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [13] -> \soc.cpu.pcpi_div.divisor [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21748 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [14] -> \soc.cpu.pcpi_div.divisor [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21749 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [15] -> \soc.cpu.pcpi_div.divisor [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21750 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [16] -> \soc.cpu.pcpi_div.divisor [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21751 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [17] -> \soc.cpu.pcpi_div.divisor [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21752 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [18] -> \soc.cpu.pcpi_div.divisor [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21753 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [19] -> \soc.cpu.pcpi_div.divisor [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21754 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [20] -> \soc.cpu.pcpi_div.divisor [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21755 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [21] -> \soc.cpu.pcpi_div.divisor [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21756 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [22] -> \soc.cpu.pcpi_div.divisor [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21757 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [23] -> \soc.cpu.pcpi_div.divisor [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21758 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [24] -> \soc.cpu.pcpi_div.divisor [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21759 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [25] -> \soc.cpu.pcpi_div.divisor [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21760 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [26] -> \soc.cpu.pcpi_div.divisor [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21761 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [27] -> \soc.cpu.pcpi_div.divisor [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21762 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [28] -> \soc.cpu.pcpi_div.divisor [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21763 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [29] -> \soc.cpu.pcpi_div.divisor [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21764 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [30] -> \soc.cpu.pcpi_div.divisor [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21765 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [31] -> \soc.cpu.pcpi_div.divisor [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21766 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [32] -> \soc.cpu.pcpi_div.divisor [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21767 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [33] -> \soc.cpu.pcpi_div.divisor [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21768 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [34] -> \soc.cpu.pcpi_div.divisor [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21769 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [35] -> \soc.cpu.pcpi_div.divisor [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21770 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [36] -> \soc.cpu.pcpi_div.divisor [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21771 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [37] -> \soc.cpu.pcpi_div.divisor [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21772 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [38] -> \soc.cpu.pcpi_div.divisor [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21773 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [39] -> \soc.cpu.pcpi_div.divisor [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21774 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [40] -> \soc.cpu.pcpi_div.divisor [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21775 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [41] -> \soc.cpu.pcpi_div.divisor [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21776 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [42] -> \soc.cpu.pcpi_div.divisor [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21777 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [43] -> \soc.cpu.pcpi_div.divisor [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21778 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [44] -> \soc.cpu.pcpi_div.divisor [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21779 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [45] -> \soc.cpu.pcpi_div.divisor [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21780 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [46] -> \soc.cpu.pcpi_div.divisor [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21781 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [47] -> \soc.cpu.pcpi_div.divisor [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21782 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [48] -> \soc.cpu.pcpi_div.divisor [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21783 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [49] -> \soc.cpu.pcpi_div.divisor [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21784 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [50] -> \soc.cpu.pcpi_div.divisor [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21785 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [51] -> \soc.cpu.pcpi_div.divisor [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21786 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [52] -> \soc.cpu.pcpi_div.divisor [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21787 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [53] -> \soc.cpu.pcpi_div.divisor [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21788 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [54] -> \soc.cpu.pcpi_div.divisor [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21789 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [55] -> \soc.cpu.pcpi_div.divisor [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21790 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [56] -> \soc.cpu.pcpi_div.divisor [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21791 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [57] -> \soc.cpu.pcpi_div.divisor [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21792 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [58] -> \soc.cpu.pcpi_div.divisor [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21793 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [59] -> \soc.cpu.pcpi_div.divisor [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21794 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [60] -> \soc.cpu.pcpi_div.divisor [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21795 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [61] -> \soc.cpu.pcpi_div.divisor [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21796 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [62] -> \soc.cpu.pcpi_div.divisor [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21797 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [0] -> \soc.cpu.pcpi_div.dividend [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21798 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [1] -> \soc.cpu.pcpi_div.dividend [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21799 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [2] -> \soc.cpu.pcpi_div.dividend [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21800 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [3] -> \soc.cpu.pcpi_div.dividend [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21801 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [4] -> \soc.cpu.pcpi_div.dividend [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21802 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [5] -> \soc.cpu.pcpi_div.dividend [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21803 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [6] -> \soc.cpu.pcpi_div.dividend [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21804 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [7] -> \soc.cpu.pcpi_div.dividend [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21805 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [8] -> \soc.cpu.pcpi_div.dividend [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21806 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [9] -> \soc.cpu.pcpi_div.dividend [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21807 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [10] -> \soc.cpu.pcpi_div.dividend [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21808 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [11] -> \soc.cpu.pcpi_div.dividend [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21809 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [12] -> \soc.cpu.pcpi_div.dividend [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21810 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [13] -> \soc.cpu.pcpi_div.dividend [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21811 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [14] -> \soc.cpu.pcpi_div.dividend [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21812 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [15] -> \soc.cpu.pcpi_div.dividend [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21813 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [16] -> \soc.cpu.pcpi_div.dividend [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21814 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [17] -> \soc.cpu.pcpi_div.dividend [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21815 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [18] -> \soc.cpu.pcpi_div.dividend [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21816 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [19] -> \soc.cpu.pcpi_div.dividend [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21817 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [20] -> \soc.cpu.pcpi_div.dividend [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21818 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [21] -> \soc.cpu.pcpi_div.dividend [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21819 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [22] -> \soc.cpu.pcpi_div.dividend [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21820 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [23] -> \soc.cpu.pcpi_div.dividend [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21821 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [24] -> \soc.cpu.pcpi_div.dividend [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21822 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [25] -> \soc.cpu.pcpi_div.dividend [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21823 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [26] -> \soc.cpu.pcpi_div.dividend [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21824 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [27] -> \soc.cpu.pcpi_div.dividend [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21825 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [28] -> \soc.cpu.pcpi_div.dividend [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21826 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [29] -> \soc.cpu.pcpi_div.dividend [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21827 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [30] -> \soc.cpu.pcpi_div.dividend [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21828 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [31] -> \soc.cpu.pcpi_div.dividend [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22973 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [0] -> \soc.cpu.pcpi_mul.mul_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22974 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [1] -> \soc.cpu.pcpi_mul.mul_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22975 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [2] -> \soc.cpu.pcpi_mul.mul_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22976 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [3] -> \soc.cpu.pcpi_mul.mul_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22977 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [4] -> \soc.cpu.pcpi_mul.mul_counter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22978 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [5] -> \soc.cpu.pcpi_mul.mul_counter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22979 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [6] -> \soc.cpu.pcpi_mul.mul_counter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22980 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [0] -> \soc.cpu.pcpi_mul.rdx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22981 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [1] -> \soc.cpu.pcpi_mul.rdx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22982 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [2] -> \soc.cpu.pcpi_mul.rdx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22983 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [3] -> \soc.cpu.pcpi_mul.rdx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22984 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [4] -> \soc.cpu.pcpi_mul.rdx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22985 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [5] -> \soc.cpu.pcpi_mul.rdx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22986 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [6] -> \soc.cpu.pcpi_mul.rdx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22987 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [7] -> \soc.cpu.pcpi_mul.rdx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22988 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [8] -> \soc.cpu.pcpi_mul.rdx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22989 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [9] -> \soc.cpu.pcpi_mul.rdx [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22990 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [10] -> \soc.cpu.pcpi_mul.rdx [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22991 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [11] -> \soc.cpu.pcpi_mul.rdx [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22992 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [12] -> \soc.cpu.pcpi_mul.rdx [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22993 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [13] -> \soc.cpu.pcpi_mul.rdx [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22994 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [14] -> \soc.cpu.pcpi_mul.rdx [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22995 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [15] -> \soc.cpu.pcpi_mul.rdx [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22996 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [16] -> \soc.cpu.pcpi_mul.rdx [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22997 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [17] -> \soc.cpu.pcpi_mul.rdx [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22998 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [18] -> \soc.cpu.pcpi_mul.rdx [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22999 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [19] -> \soc.cpu.pcpi_mul.rdx [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23000 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [20] -> \soc.cpu.pcpi_mul.rdx [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23001 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [21] -> \soc.cpu.pcpi_mul.rdx [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23002 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [22] -> \soc.cpu.pcpi_mul.rdx [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23003 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [23] -> \soc.cpu.pcpi_mul.rdx [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23004 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [24] -> \soc.cpu.pcpi_mul.rdx [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23005 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [25] -> \soc.cpu.pcpi_mul.rdx [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23006 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [26] -> \soc.cpu.pcpi_mul.rdx [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23007 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [27] -> \soc.cpu.pcpi_mul.rdx [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23008 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [28] -> \soc.cpu.pcpi_mul.rdx [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23009 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [29] -> \soc.cpu.pcpi_mul.rdx [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23010 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [30] -> \soc.cpu.pcpi_mul.rdx [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23011 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [31] -> \soc.cpu.pcpi_mul.rdx [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23012 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [32] -> \soc.cpu.pcpi_mul.rdx [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23013 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [33] -> \soc.cpu.pcpi_mul.rdx [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23014 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [34] -> \soc.cpu.pcpi_mul.rdx [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23015 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [35] -> \soc.cpu.pcpi_mul.rdx [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23016 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [36] -> \soc.cpu.pcpi_mul.rdx [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23017 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [37] -> \soc.cpu.pcpi_mul.rdx [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23018 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [38] -> \soc.cpu.pcpi_mul.rdx [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23019 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [39] -> \soc.cpu.pcpi_mul.rdx [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23020 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [40] -> \soc.cpu.pcpi_mul.rdx [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23021 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [41] -> \soc.cpu.pcpi_mul.rdx [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23022 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [42] -> \soc.cpu.pcpi_mul.rdx [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23023 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [43] -> \soc.cpu.pcpi_mul.rdx [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23024 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [44] -> \soc.cpu.pcpi_mul.rdx [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23025 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [45] -> \soc.cpu.pcpi_mul.rdx [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23026 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [46] -> \soc.cpu.pcpi_mul.rdx [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23027 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [47] -> \soc.cpu.pcpi_mul.rdx [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23028 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [48] -> \soc.cpu.pcpi_mul.rdx [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23029 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [49] -> \soc.cpu.pcpi_mul.rdx [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23030 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [50] -> \soc.cpu.pcpi_mul.rdx [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23031 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [51] -> \soc.cpu.pcpi_mul.rdx [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23032 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [52] -> \soc.cpu.pcpi_mul.rdx [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23033 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [53] -> \soc.cpu.pcpi_mul.rdx [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23034 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [54] -> \soc.cpu.pcpi_mul.rdx [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23035 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [55] -> \soc.cpu.pcpi_mul.rdx [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23036 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [56] -> \soc.cpu.pcpi_mul.rdx [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23037 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [57] -> \soc.cpu.pcpi_mul.rdx [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23038 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [58] -> \soc.cpu.pcpi_mul.rdx [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23039 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [59] -> \soc.cpu.pcpi_mul.rdx [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23040 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [60] -> \soc.cpu.pcpi_mul.rdx [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23041 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [61] -> \soc.cpu.pcpi_mul.rdx [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23042 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [62] -> \soc.cpu.pcpi_mul.rdx [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23043 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [63] -> \soc.cpu.pcpi_mul.rdx [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23044 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [0] -> \soc.cpu.pcpi_mul.rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23045 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [1] -> \soc.cpu.pcpi_mul.rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23046 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [2] -> \soc.cpu.pcpi_mul.rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23047 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [3] -> \soc.cpu.pcpi_mul.rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23048 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [4] -> \soc.cpu.pcpi_mul.rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23049 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [5] -> \soc.cpu.pcpi_mul.rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23050 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [6] -> \soc.cpu.pcpi_mul.rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23051 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [7] -> \soc.cpu.pcpi_mul.rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23052 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [8] -> \soc.cpu.pcpi_mul.rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23053 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [9] -> \soc.cpu.pcpi_mul.rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23054 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [10] -> \soc.cpu.pcpi_mul.rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23055 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [11] -> \soc.cpu.pcpi_mul.rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23056 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [12] -> \soc.cpu.pcpi_mul.rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23057 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [13] -> \soc.cpu.pcpi_mul.rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23058 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [14] -> \soc.cpu.pcpi_mul.rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23059 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [15] -> \soc.cpu.pcpi_mul.rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23060 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [16] -> \soc.cpu.pcpi_mul.rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23061 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [17] -> \soc.cpu.pcpi_mul.rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23062 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [18] -> \soc.cpu.pcpi_mul.rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23063 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [19] -> \soc.cpu.pcpi_mul.rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23064 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [20] -> \soc.cpu.pcpi_mul.rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23065 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [21] -> \soc.cpu.pcpi_mul.rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23066 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [22] -> \soc.cpu.pcpi_mul.rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23067 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [23] -> \soc.cpu.pcpi_mul.rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23068 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [24] -> \soc.cpu.pcpi_mul.rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23069 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [25] -> \soc.cpu.pcpi_mul.rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23070 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [26] -> \soc.cpu.pcpi_mul.rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23071 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [27] -> \soc.cpu.pcpi_mul.rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23072 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [28] -> \soc.cpu.pcpi_mul.rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23073 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [29] -> \soc.cpu.pcpi_mul.rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23074 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [30] -> \soc.cpu.pcpi_mul.rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23075 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [31] -> \soc.cpu.pcpi_mul.rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23076 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [32] -> \soc.cpu.pcpi_mul.rd [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23077 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [33] -> \soc.cpu.pcpi_mul.rd [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23078 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [34] -> \soc.cpu.pcpi_mul.rd [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23079 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [35] -> \soc.cpu.pcpi_mul.rd [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23080 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [36] -> \soc.cpu.pcpi_mul.rd [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23081 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [37] -> \soc.cpu.pcpi_mul.rd [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23082 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [38] -> \soc.cpu.pcpi_mul.rd [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23083 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [39] -> \soc.cpu.pcpi_mul.rd [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23084 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [40] -> \soc.cpu.pcpi_mul.rd [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23085 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [41] -> \soc.cpu.pcpi_mul.rd [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23086 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [42] -> \soc.cpu.pcpi_mul.rd [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23087 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [43] -> \soc.cpu.pcpi_mul.rd [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23088 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [44] -> \soc.cpu.pcpi_mul.rd [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23089 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [45] -> \soc.cpu.pcpi_mul.rd [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23090 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [46] -> \soc.cpu.pcpi_mul.rd [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23091 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [47] -> \soc.cpu.pcpi_mul.rd [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23092 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [48] -> \soc.cpu.pcpi_mul.rd [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23093 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [49] -> \soc.cpu.pcpi_mul.rd [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23094 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [50] -> \soc.cpu.pcpi_mul.rd [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23095 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [51] -> \soc.cpu.pcpi_mul.rd [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23096 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [52] -> \soc.cpu.pcpi_mul.rd [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23097 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [53] -> \soc.cpu.pcpi_mul.rd [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23098 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [54] -> \soc.cpu.pcpi_mul.rd [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23099 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [55] -> \soc.cpu.pcpi_mul.rd [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23100 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [56] -> \soc.cpu.pcpi_mul.rd [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23101 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [57] -> \soc.cpu.pcpi_mul.rd [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23102 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [58] -> \soc.cpu.pcpi_mul.rd [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23103 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [59] -> \soc.cpu.pcpi_mul.rd [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23104 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [60] -> \soc.cpu.pcpi_mul.rd [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23105 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [61] -> \soc.cpu.pcpi_mul.rd [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23106 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [62] -> \soc.cpu.pcpi_mul.rd [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23107 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [63] -> \soc.cpu.pcpi_mul.rd [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23108 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [0] -> \soc.cpu.pcpi_mul.rs2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23109 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [1] -> \soc.cpu.pcpi_mul.rs2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23110 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [2] -> \soc.cpu.pcpi_mul.rs2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23111 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [3] -> \soc.cpu.pcpi_mul.rs2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23112 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [4] -> \soc.cpu.pcpi_mul.rs2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23113 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [5] -> \soc.cpu.pcpi_mul.rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23114 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [6] -> \soc.cpu.pcpi_mul.rs2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23115 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [7] -> \soc.cpu.pcpi_mul.rs2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23116 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [8] -> \soc.cpu.pcpi_mul.rs2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23117 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [9] -> \soc.cpu.pcpi_mul.rs2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23118 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [10] -> \soc.cpu.pcpi_mul.rs2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23119 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [11] -> \soc.cpu.pcpi_mul.rs2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23120 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [12] -> \soc.cpu.pcpi_mul.rs2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23121 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [13] -> \soc.cpu.pcpi_mul.rs2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23122 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [14] -> \soc.cpu.pcpi_mul.rs2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23123 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [15] -> \soc.cpu.pcpi_mul.rs2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23124 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [16] -> \soc.cpu.pcpi_mul.rs2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23125 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [17] -> \soc.cpu.pcpi_mul.rs2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23126 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [18] -> \soc.cpu.pcpi_mul.rs2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23127 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [19] -> \soc.cpu.pcpi_mul.rs2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23128 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [20] -> \soc.cpu.pcpi_mul.rs2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23129 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [21] -> \soc.cpu.pcpi_mul.rs2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23130 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [22] -> \soc.cpu.pcpi_mul.rs2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23131 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [23] -> \soc.cpu.pcpi_mul.rs2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23132 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [24] -> \soc.cpu.pcpi_mul.rs2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23133 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [25] -> \soc.cpu.pcpi_mul.rs2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23134 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [26] -> \soc.cpu.pcpi_mul.rs2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23135 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [27] -> \soc.cpu.pcpi_mul.rs2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23136 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [28] -> \soc.cpu.pcpi_mul.rs2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23137 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [29] -> \soc.cpu.pcpi_mul.rs2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23138 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [30] -> \soc.cpu.pcpi_mul.rs2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23139 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [31] -> \soc.cpu.pcpi_mul.rs2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23140 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [32] -> \soc.cpu.pcpi_mul.rs2 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23141 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [33] -> \soc.cpu.pcpi_mul.rs2 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23142 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [34] -> \soc.cpu.pcpi_mul.rs2 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23143 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [35] -> \soc.cpu.pcpi_mul.rs2 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23144 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [36] -> \soc.cpu.pcpi_mul.rs2 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23145 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [37] -> \soc.cpu.pcpi_mul.rs2 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23146 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [38] -> \soc.cpu.pcpi_mul.rs2 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23147 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [39] -> \soc.cpu.pcpi_mul.rs2 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23148 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [40] -> \soc.cpu.pcpi_mul.rs2 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23149 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [41] -> \soc.cpu.pcpi_mul.rs2 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23150 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [42] -> \soc.cpu.pcpi_mul.rs2 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23151 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [43] -> \soc.cpu.pcpi_mul.rs2 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23152 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [44] -> \soc.cpu.pcpi_mul.rs2 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23153 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [45] -> \soc.cpu.pcpi_mul.rs2 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23154 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [46] -> \soc.cpu.pcpi_mul.rs2 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23155 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [47] -> \soc.cpu.pcpi_mul.rs2 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23156 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [48] -> \soc.cpu.pcpi_mul.rs2 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23157 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [49] -> \soc.cpu.pcpi_mul.rs2 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23158 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [50] -> \soc.cpu.pcpi_mul.rs2 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23159 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [51] -> \soc.cpu.pcpi_mul.rs2 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23160 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [52] -> \soc.cpu.pcpi_mul.rs2 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23161 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [53] -> \soc.cpu.pcpi_mul.rs2 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23162 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [54] -> \soc.cpu.pcpi_mul.rs2 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23163 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [55] -> \soc.cpu.pcpi_mul.rs2 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23164 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [56] -> \soc.cpu.pcpi_mul.rs2 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23165 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [57] -> \soc.cpu.pcpi_mul.rs2 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23166 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [58] -> \soc.cpu.pcpi_mul.rs2 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23167 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [59] -> \soc.cpu.pcpi_mul.rs2 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23168 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [60] -> \soc.cpu.pcpi_mul.rs2 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23169 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [61] -> \soc.cpu.pcpi_mul.rs2 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23170 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [62] -> \soc.cpu.pcpi_mul.rs2 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23171 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [63] -> \soc.cpu.pcpi_mul.rs2 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23172 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [0] -> \soc.cpu.pcpi_mul.rs1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23173 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [1] -> \soc.cpu.pcpi_mul.rs1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23174 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [2] -> \soc.cpu.pcpi_mul.rs1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23175 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [3] -> \soc.cpu.pcpi_mul.rs1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23176 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [4] -> \soc.cpu.pcpi_mul.rs1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23177 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [5] -> \soc.cpu.pcpi_mul.rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23178 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [6] -> \soc.cpu.pcpi_mul.rs1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23179 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [7] -> \soc.cpu.pcpi_mul.rs1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23180 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [8] -> \soc.cpu.pcpi_mul.rs1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23181 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [9] -> \soc.cpu.pcpi_mul.rs1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23182 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [10] -> \soc.cpu.pcpi_mul.rs1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23183 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [11] -> \soc.cpu.pcpi_mul.rs1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23184 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [12] -> \soc.cpu.pcpi_mul.rs1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23185 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [13] -> \soc.cpu.pcpi_mul.rs1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23186 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [14] -> \soc.cpu.pcpi_mul.rs1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23187 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [15] -> \soc.cpu.pcpi_mul.rs1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23188 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [16] -> \soc.cpu.pcpi_mul.rs1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23189 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [17] -> \soc.cpu.pcpi_mul.rs1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23190 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [18] -> \soc.cpu.pcpi_mul.rs1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23191 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [19] -> \soc.cpu.pcpi_mul.rs1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23192 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [20] -> \soc.cpu.pcpi_mul.rs1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23193 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [21] -> \soc.cpu.pcpi_mul.rs1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23194 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [22] -> \soc.cpu.pcpi_mul.rs1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23195 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [23] -> \soc.cpu.pcpi_mul.rs1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23196 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [24] -> \soc.cpu.pcpi_mul.rs1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23197 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [25] -> \soc.cpu.pcpi_mul.rs1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23198 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [26] -> \soc.cpu.pcpi_mul.rs1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23199 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [27] -> \soc.cpu.pcpi_mul.rs1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23200 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [28] -> \soc.cpu.pcpi_mul.rs1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23201 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [29] -> \soc.cpu.pcpi_mul.rs1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23202 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [30] -> \soc.cpu.pcpi_mul.rs1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23203 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [31] -> \soc.cpu.pcpi_mul.rs1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23204 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [32] -> \soc.cpu.pcpi_mul.rs1 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23205 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [33] -> \soc.cpu.pcpi_mul.rs1 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23206 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [34] -> \soc.cpu.pcpi_mul.rs1 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23207 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [35] -> \soc.cpu.pcpi_mul.rs1 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23208 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [36] -> \soc.cpu.pcpi_mul.rs1 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23209 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [37] -> \soc.cpu.pcpi_mul.rs1 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23210 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [38] -> \soc.cpu.pcpi_mul.rs1 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23211 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [39] -> \soc.cpu.pcpi_mul.rs1 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23212 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [40] -> \soc.cpu.pcpi_mul.rs1 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23213 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [41] -> \soc.cpu.pcpi_mul.rs1 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23214 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [42] -> \soc.cpu.pcpi_mul.rs1 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23215 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [43] -> \soc.cpu.pcpi_mul.rs1 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23216 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [44] -> \soc.cpu.pcpi_mul.rs1 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23217 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [45] -> \soc.cpu.pcpi_mul.rs1 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23218 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [46] -> \soc.cpu.pcpi_mul.rs1 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23219 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [47] -> \soc.cpu.pcpi_mul.rs1 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23220 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [48] -> \soc.cpu.pcpi_mul.rs1 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23221 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [49] -> \soc.cpu.pcpi_mul.rs1 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23222 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [50] -> \soc.cpu.pcpi_mul.rs1 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23223 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [51] -> \soc.cpu.pcpi_mul.rs1 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23224 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [52] -> \soc.cpu.pcpi_mul.rs1 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23225 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [53] -> \soc.cpu.pcpi_mul.rs1 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23226 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [54] -> \soc.cpu.pcpi_mul.rs1 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23227 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [55] -> \soc.cpu.pcpi_mul.rs1 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23228 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [56] -> \soc.cpu.pcpi_mul.rs1 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23229 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [57] -> \soc.cpu.pcpi_mul.rs1 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23230 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [58] -> \soc.cpu.pcpi_mul.rs1 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23231 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [59] -> \soc.cpu.pcpi_mul.rs1 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23232 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [60] -> \soc.cpu.pcpi_mul.rs1 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23233 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [61] -> \soc.cpu.pcpi_mul.rs1 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23234 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [62] -> \soc.cpu.pcpi_mul.rs1 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23235 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [63] -> \soc.cpu.pcpi_mul.rs1 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23236 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [0] -> \soc.cpu.pcpi_mul.pcpi_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23237 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [1] -> \soc.cpu.pcpi_mul.pcpi_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23238 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [2] -> \soc.cpu.pcpi_mul.pcpi_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23239 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [3] -> \soc.cpu.pcpi_mul.pcpi_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23240 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [4] -> \soc.cpu.pcpi_mul.pcpi_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23241 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [5] -> \soc.cpu.pcpi_mul.pcpi_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23242 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [6] -> \soc.cpu.pcpi_mul.pcpi_rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23243 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [7] -> \soc.cpu.pcpi_mul.pcpi_rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23244 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [8] -> \soc.cpu.pcpi_mul.pcpi_rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23245 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [9] -> \soc.cpu.pcpi_mul.pcpi_rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23246 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [10] -> \soc.cpu.pcpi_mul.pcpi_rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23247 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [11] -> \soc.cpu.pcpi_mul.pcpi_rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23248 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [12] -> \soc.cpu.pcpi_mul.pcpi_rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23249 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [13] -> \soc.cpu.pcpi_mul.pcpi_rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23250 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [14] -> \soc.cpu.pcpi_mul.pcpi_rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23251 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [15] -> \soc.cpu.pcpi_mul.pcpi_rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23252 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [16] -> \soc.cpu.pcpi_mul.pcpi_rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23253 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [17] -> \soc.cpu.pcpi_mul.pcpi_rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23254 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [18] -> \soc.cpu.pcpi_mul.pcpi_rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23255 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [19] -> \soc.cpu.pcpi_mul.pcpi_rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23256 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [20] -> \soc.cpu.pcpi_mul.pcpi_rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23257 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [21] -> \soc.cpu.pcpi_mul.pcpi_rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23258 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [22] -> \soc.cpu.pcpi_mul.pcpi_rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23259 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [23] -> \soc.cpu.pcpi_mul.pcpi_rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23260 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [24] -> \soc.cpu.pcpi_mul.pcpi_rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23261 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [25] -> \soc.cpu.pcpi_mul.pcpi_rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23262 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [26] -> \soc.cpu.pcpi_mul.pcpi_rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23263 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [27] -> \soc.cpu.pcpi_mul.pcpi_rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23264 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [28] -> \soc.cpu.pcpi_mul.pcpi_rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23265 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [29] -> \soc.cpu.pcpi_mul.pcpi_rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23266 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [30] -> \soc.cpu.pcpi_mul.pcpi_rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23267 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [31] -> \soc.cpu.pcpi_mul.pcpi_rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24242 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [0] -> \soc.spimemio.xfer.xfer_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24243 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [1] -> \soc.spimemio.xfer.xfer_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24244 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [2] -> \soc.spimemio.xfer.xfer_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24245 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [3] -> \soc.spimemio.xfer.xfer_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24246 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_rd[0:0] -> \soc.spimemio.xfer.xfer_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24247 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_qspi[0:0] -> \soc.spimemio.xfer.xfer_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24248 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [0] -> \soc.spimemio.xfer.dummy_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24249 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [1] -> \soc.spimemio.xfer.dummy_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24250 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [2] -> \soc.spimemio.xfer.dummy_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24251 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [3] -> \soc.spimemio.xfer.dummy_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24252 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [0] -> \soc.spimemio.xfer.count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24253 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [1] -> \soc.spimemio.xfer.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24254 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [2] -> \soc.spimemio.xfer.count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24255 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [3] -> \soc.spimemio.xfer.count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24256 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [0] -> \soc.spimemio.xfer.ibuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24257 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [1] -> \soc.spimemio.xfer.ibuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24258 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [2] -> \soc.spimemio.xfer.ibuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24259 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [3] -> \soc.spimemio.xfer.ibuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24260 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [4] -> \soc.spimemio.xfer.ibuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24261 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [5] -> \soc.spimemio.xfer.ibuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24262 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [6] -> \soc.spimemio.xfer.ibuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24263 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [7] -> \soc.spimemio.xfer.ibuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24264 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [0] -> \soc.spimemio.xfer.obuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24265 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [1] -> \soc.spimemio.xfer.obuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24266 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [2] -> \soc.spimemio.xfer.obuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24267 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [3] -> \soc.spimemio.xfer.obuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24268 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [4] -> \soc.spimemio.xfer.obuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24269 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [5] -> \soc.spimemio.xfer.obuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24270 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [6] -> \soc.spimemio.xfer.obuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24271 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [7] -> \soc.spimemio.xfer.obuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24272 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_ddr[0:0] -> \soc.spimemio.xfer.xfer_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24273 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_dspi[0:0] -> \soc.spimemio.xfer.xfer_dspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24274 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_clk[0:0] -> \soc.spimemio.xfer.flash_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$24275 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_csb[0:0] -> \soc.spimemio.xfer.flash_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8643 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [0] -> \clock.counterO [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8644 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [1] -> \clock.counterO [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8645 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [2] -> \clock.counterO [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8646 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [3] -> \clock.counterO [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8647 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [4] -> \clock.counterO [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8648 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [5] -> \clock.counterO [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8649 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [6] -> \clock.counterO [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8650 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [7] -> \clock.counterO [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8651 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [8] -> \clock.counterO [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8652 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [9] -> \clock.counterO [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8653 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [10] -> \clock.counterO [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8654 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [11] -> \clock.counterO [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8655 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [12] -> \clock.counterO [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8656 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [13] -> \clock.counterO [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8657 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [14] -> \clock.counterO [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8658 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [15] -> \clock.counterO [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8659 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [16] -> \clock.counterO [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8660 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [17] -> \clock.counterO [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8661 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [18] -> \clock.counterO [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8662 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [19] -> \clock.counterO [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8663 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [20] -> \clock.counterO [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8664 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [21] -> \clock.counterO [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8665 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [22] -> \clock.counterO [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8666 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [23] -> \clock.counterO [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8667 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [24] -> \clock.counterO [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8668 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [25] -> \clock.counterO [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8669 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [26] -> \clock.counterO [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8670 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [27] -> \clock.counterO [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8671 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [28] -> \clock.counterO [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8672 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [29] -> \clock.counterO [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8673 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [30] -> \clock.counterO [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8674 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [31] -> \clock.counterO [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9320 to $_DFFE_PP_ for $0\iomem_ready[0:0] -> \iomem_ready.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9321 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [0] -> \iomem_rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9322 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [1] -> \iomem_rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9323 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [2] -> \iomem_rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9324 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [3] -> \iomem_rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9325 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [4] -> \iomem_rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9326 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [5] -> \iomem_rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9327 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [6] -> \iomem_rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9328 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [7] -> \iomem_rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9329 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [8] -> \iomem_rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9330 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [9] -> \iomem_rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9331 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [10] -> \iomem_rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9332 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [11] -> \iomem_rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9333 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [12] -> \iomem_rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9334 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [13] -> \iomem_rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9335 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [14] -> \iomem_rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9336 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [15] -> \iomem_rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9337 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [16] -> \iomem_rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9338 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [17] -> \iomem_rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9339 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [18] -> \iomem_rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9340 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [19] -> \iomem_rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9341 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [20] -> \iomem_rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9342 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [21] -> \iomem_rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9343 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [22] -> \iomem_rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9344 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [23] -> \iomem_rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9345 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [24] -> \iomem_rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9346 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [25] -> \iomem_rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9347 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [26] -> \iomem_rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9348 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [27] -> \iomem_rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9349 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [28] -> \iomem_rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9350 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [29] -> \iomem_rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9351 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [30] -> \iomem_rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9352 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [31] -> \iomem_rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9353 to $_DFFE_PP_ for $0\gpio[31:0] [0] -> \gpio [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9354 to $_DFFE_PP_ for $0\gpio[31:0] [1] -> \gpio [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9355 to $_DFFE_PP_ for $0\gpio[31:0] [2] -> \gpio [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9356 to $_DFFE_PP_ for $0\gpio[31:0] [3] -> \gpio [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9357 to $_DFFE_PP_ for $0\gpio[31:0] [4] -> \gpio [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9358 to $_DFFE_PP_ for $0\gpio[31:0] [5] -> \gpio [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9359 to $_DFFE_PP_ for $0\gpio[31:0] [6] -> \gpio [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9360 to $_DFFE_PP_ for $0\gpio[31:0] [7] -> \gpio [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9361 to $_DFFE_PP_ for $0\gpio[31:0] [8] -> \gpio [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9362 to $_DFFE_PP_ for $0\gpio[31:0] [9] -> \gpio [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9363 to $_DFFE_PP_ for $0\gpio[31:0] [10] -> \gpio [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9364 to $_DFFE_PP_ for $0\gpio[31:0] [11] -> \gpio [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9365 to $_DFFE_PP_ for $0\gpio[31:0] [12] -> \gpio [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9366 to $_DFFE_PP_ for $0\gpio[31:0] [13] -> \gpio [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9367 to $_DFFE_PP_ for $0\gpio[31:0] [14] -> \gpio [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9368 to $_DFFE_PP_ for $0\gpio[31:0] [15] -> \gpio [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9369 to $_DFFE_PP_ for $0\gpio[31:0] [16] -> \gpio [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9370 to $_DFFE_PP_ for $0\gpio[31:0] [17] -> \gpio [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9371 to $_DFFE_PP_ for $0\gpio[31:0] [18] -> \gpio [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9372 to $_DFFE_PP_ for $0\gpio[31:0] [19] -> \gpio [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9373 to $_DFFE_PP_ for $0\gpio[31:0] [20] -> \gpio [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9374 to $_DFFE_PP_ for $0\gpio[31:0] [21] -> \gpio [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9375 to $_DFFE_PP_ for $0\gpio[31:0] [22] -> \gpio [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9376 to $_DFFE_PP_ for $0\gpio[31:0] [23] -> \gpio [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9377 to $_DFFE_PP_ for $0\gpio[31:0] [24] -> \gpio [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9378 to $_DFFE_PP_ for $0\gpio[31:0] [25] -> \gpio [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9379 to $_DFFE_PP_ for $0\gpio[31:0] [26] -> \gpio [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9380 to $_DFFE_PP_ for $0\gpio[31:0] [27] -> \gpio [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9381 to $_DFFE_PP_ for $0\gpio[31:0] [28] -> \gpio [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9382 to $_DFFE_PP_ for $0\gpio[31:0] [29] -> \gpio [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9383 to $_DFFE_PP_ for $0\gpio[31:0] [30] -> \gpio [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9384 to $_DFFE_PP_ for $0\gpio[31:0] [31] -> \gpio [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9385 to $_DFFE_PP_ for $0\leds[31:0] [0] -> \leds [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9386 to $_DFFE_PP_ for $0\leds[31:0] [1] -> \leds [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9387 to $_DFFE_PP_ for $0\leds[31:0] [2] -> \leds [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9388 to $_DFFE_PP_ for $0\leds[31:0] [3] -> \leds [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9389 to $_DFFE_PP_ for $0\leds[31:0] [4] -> \leds [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9390 to $_DFFE_PP_ for $0\leds[31:0] [5] -> \leds [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9391 to $_DFFE_PP_ for $0\leds[31:0] [6] -> \leds [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9392 to $_DFFE_PP_ for $0\leds[31:0] [7] -> \leds [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9393 to $_DFFE_PP_ for $0\leds[31:0] [8] -> \leds [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9394 to $_DFFE_PP_ for $0\leds[31:0] [9] -> \leds [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9395 to $_DFFE_PP_ for $0\leds[31:0] [10] -> \leds [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9396 to $_DFFE_PP_ for $0\leds[31:0] [11] -> \leds [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9397 to $_DFFE_PP_ for $0\leds[31:0] [12] -> \leds [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9398 to $_DFFE_PP_ for $0\leds[31:0] [13] -> \leds [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9399 to $_DFFE_PP_ for $0\leds[31:0] [14] -> \leds [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9400 to $_DFFE_PP_ for $0\leds[31:0] [15] -> \leds [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9401 to $_DFFE_PP_ for $0\leds[31:0] [16] -> \leds [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9402 to $_DFFE_PP_ for $0\leds[31:0] [17] -> \leds [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9403 to $_DFFE_PP_ for $0\leds[31:0] [18] -> \leds [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9404 to $_DFFE_PP_ for $0\leds[31:0] [19] -> \leds [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9405 to $_DFFE_PP_ for $0\leds[31:0] [20] -> \leds [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9406 to $_DFFE_PP_ for $0\leds[31:0] [21] -> \leds [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9407 to $_DFFE_PP_ for $0\leds[31:0] [22] -> \leds [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9408 to $_DFFE_PP_ for $0\leds[31:0] [23] -> \leds [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9409 to $_DFFE_PP_ for $0\leds[31:0] [24] -> \leds [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9410 to $_DFFE_PP_ for $0\leds[31:0] [25] -> \leds [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9411 to $_DFFE_PP_ for $0\leds[31:0] [26] -> \leds [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9412 to $_DFFE_PP_ for $0\leds[31:0] [27] -> \leds [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9413 to $_DFFE_PP_ for $0\leds[31:0] [28] -> \leds [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9414 to $_DFFE_PP_ for $0\leds[31:0] [29] -> \leds [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9415 to $_DFFE_PP_ for $0\leds[31:0] [30] -> \leds [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9416 to $_DFFE_PP_ for $0\leds[31:0] [31] -> \leds [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9417 to $_DFFE_PP_ for $0\pwm_connector[31:0] [0] -> \pwm_connector [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9418 to $_DFFE_PP_ for $0\pwm_connector[31:0] [1] -> \pwm_connector [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9419 to $_DFFE_PP_ for $0\pwm_connector[31:0] [2] -> \pwm_connector [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9420 to $_DFFE_PP_ for $0\pwm_connector[31:0] [3] -> \pwm_connector [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9421 to $_DFFE_PP_ for $0\pwm_connector[31:0] [4] -> \pwm_connector [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9422 to $_DFFE_PP_ for $0\pwm_connector[31:0] [5] -> \pwm_connector [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9423 to $_DFFE_PP_ for $0\pwm_connector[31:0] [6] -> \pwm_connector [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9424 to $_DFFE_PP_ for $0\pwm_connector[31:0] [7] -> \pwm_connector [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9425 to $_DFFE_PP_ for $0\pwm_connector[31:0] [8] -> \pwm_connector [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9426 to $_DFFE_PP_ for $0\pwm_connector[31:0] [9] -> \pwm_connector [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9427 to $_DFFE_PP_ for $0\pwm_connector[31:0] [10] -> \pwm_connector [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9428 to $_DFFE_PP_ for $0\pwm_connector[31:0] [11] -> \pwm_connector [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9429 to $_DFFE_PP_ for $0\pwm_connector[31:0] [12] -> \pwm_connector [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9430 to $_DFFE_PP_ for $0\pwm_connector[31:0] [13] -> \pwm_connector [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9431 to $_DFFE_PP_ for $0\pwm_connector[31:0] [14] -> \pwm_connector [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9432 to $_DFFE_PP_ for $0\pwm_connector[31:0] [15] -> \pwm_connector [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9433 to $_DFFE_PP_ for $0\pwm_connector[31:0] [16] -> \pwm_connector [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9434 to $_DFFE_PP_ for $0\pwm_connector[31:0] [17] -> \pwm_connector [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9435 to $_DFFE_PP_ for $0\pwm_connector[31:0] [18] -> \pwm_connector [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9436 to $_DFFE_PP_ for $0\pwm_connector[31:0] [19] -> \pwm_connector [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9437 to $_DFFE_PP_ for $0\pwm_connector[31:0] [20] -> \pwm_connector [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9438 to $_DFFE_PP_ for $0\pwm_connector[31:0] [21] -> \pwm_connector [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9439 to $_DFFE_PP_ for $0\pwm_connector[31:0] [22] -> \pwm_connector [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9440 to $_DFFE_PP_ for $0\pwm_connector[31:0] [23] -> \pwm_connector [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9441 to $_DFFE_PP_ for $0\pwm_connector[31:0] [24] -> \pwm_connector [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9442 to $_DFFE_PP_ for $0\pwm_connector[31:0] [25] -> \pwm_connector [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9443 to $_DFFE_PP_ for $0\pwm_connector[31:0] [26] -> \pwm_connector [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9444 to $_DFFE_PP_ for $0\pwm_connector[31:0] [27] -> \pwm_connector [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9445 to $_DFFE_PP_ for $0\pwm_connector[31:0] [28] -> \pwm_connector [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9446 to $_DFFE_PP_ for $0\pwm_connector[31:0] [29] -> \pwm_connector [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9447 to $_DFFE_PP_ for $0\pwm_connector[31:0] [30] -> \pwm_connector [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9448 to $_DFFE_PP_ for $0\pwm_connector[31:0] [31] -> \pwm_connector [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9460 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [0] -> \pwm.count_temp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9461 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [1] -> \pwm.count_temp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9462 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [2] -> \pwm.count_temp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9463 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [3] -> \pwm.count_temp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9464 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [4] -> \pwm.count_temp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9465 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [5] -> \pwm.count_temp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9466 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [6] -> \pwm.count_temp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9467 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [7] -> \pwm.count_temp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9468 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [8] -> \pwm.count_temp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9469 to $_DFFE_PP_ for $techmap\pwm.$0\count_temp[9:0] [9] -> \pwm.count_temp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9470 to $_DFFE_PP_ for $techmap\pwm.$0\pwm_counter[0:0] -> \pwm.pwm_counter.

8.35. Executing TECHMAP pass (map to technology primitives).

8.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

8.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1773 debug messages>

8.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~5488 debug messages>

8.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7284.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7287.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7290.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7293.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7299.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7305.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7343.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7346.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7355.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7358.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7361.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7364.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7382.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7382.slice[22].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7385.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7388.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7391.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7394.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7397.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$12106.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23831.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23838.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23846.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23873.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23880.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23888.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23895.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23922.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23929.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23937.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23944.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23973.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23980.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23988.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23995.slice[0].fadd ($lut).

8.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in hardware.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8644 (SB_DFFE): \clock.counterO [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9473 (SB_DFF): \pwm.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8643 (SB_DFFE): \clock.counterO [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8675 (SB_DFF): \clock.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8676 (SB_DFF): \clock.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8645 (SB_DFFE): \clock.counterO [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8646 (SB_DFFE): \clock.counterO [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8647 (SB_DFFE): \clock.counterO [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8648 (SB_DFFE): \clock.counterO [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8649 (SB_DFFE): \clock.counterO [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8650 (SB_DFFE): \clock.counterO [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8651 (SB_DFFE): \clock.counterO [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8652 (SB_DFFE): \clock.counterO [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8653 (SB_DFFE): \clock.counterO [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8654 (SB_DFFE): \clock.counterO [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8655 (SB_DFFE): \clock.counterO [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8656 (SB_DFFE): \clock.counterO [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8657 (SB_DFFE): \clock.counterO [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8658 (SB_DFFE): \clock.counterO [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8659 (SB_DFFE): \clock.counterO [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8660 (SB_DFFE): \clock.counterO [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8661 (SB_DFFE): \clock.counterO [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8662 (SB_DFFE): \clock.counterO [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8663 (SB_DFFE): \clock.counterO [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8664 (SB_DFFE): \clock.counterO [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8667 (SB_DFFE): \clock.counterO [24] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8665 (SB_DFFE): \clock.counterO [22] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8666 (SB_DFFE): \clock.counterO [23] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8668 (SB_DFFE): \clock.counterO [25] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8669 (SB_DFFE): \clock.counterO [26] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8677 (SB_DFF): \clock.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8671 (SB_DFFE): \clock.counterO [28] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8672 (SB_DFFE): \clock.counterO [29] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8673 (SB_DFFE): \clock.counterO [30] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8674 (SB_DFFE): \clock.counterO [31] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8670 (SB_DFFE): \clock.counterO [27] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8678 (SB_DFF): \clock.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8682 (SB_DFF): \clock.counterI [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8684 (SB_DFF): \clock.counterI [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8685 (SB_DFF): \clock.counterI [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8683 (SB_DFF): \clock.counterI [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8681 (SB_DFF): \clock.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8680 (SB_DFF): \clock.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8679 (SB_DFF): \clock.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9466 (SB_DFFE): \pwm.count_temp [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9418 (SB_DFFE): \pwm_connector [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9419 (SB_DFFE): \pwm_connector [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9420 (SB_DFFE): \pwm_connector [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9421 (SB_DFFE): \pwm_connector [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9422 (SB_DFFE): \pwm_connector [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9423 (SB_DFFE): \pwm_connector [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9424 (SB_DFFE): \pwm_connector [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9425 (SB_DFFE): \pwm_connector [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9426 (SB_DFFE): \pwm_connector [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9427 (SB_DFFE): \pwm_connector [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9428 (SB_DFFE): \pwm_connector [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9429 (SB_DFFE): \pwm_connector [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9430 (SB_DFFE): \pwm_connector [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9431 (SB_DFFE): \pwm_connector [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9432 (SB_DFFE): \pwm_connector [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9433 (SB_DFFE): \pwm_connector [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9434 (SB_DFFE): \pwm_connector [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9435 (SB_DFFE): \pwm_connector [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9436 (SB_DFFE): \pwm_connector [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9437 (SB_DFFE): \pwm_connector [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9438 (SB_DFFE): \pwm_connector [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9439 (SB_DFFE): \pwm_connector [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9440 (SB_DFFE): \pwm_connector [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9441 (SB_DFFE): \pwm_connector [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9442 (SB_DFFE): \pwm_connector [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9443 (SB_DFFE): \pwm_connector [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9444 (SB_DFFE): \pwm_connector [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9445 (SB_DFFE): \pwm_connector [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9446 (SB_DFFE): \pwm_connector [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9447 (SB_DFFE): \pwm_connector [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9448 (SB_DFFE): \pwm_connector [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9450 (SB_DFF): \reset_cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9417 (SB_DFFE): \pwm_connector [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9451 (SB_DFF): \reset_cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9452 (SB_DFF): \reset_cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9453 (SB_DFF): \reset_cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9454 (SB_DFF): \reset_cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9461 (SB_DFFE): \pwm.count_temp [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9449 (SB_DFF): \reset_cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9462 (SB_DFFE): \pwm.count_temp [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9463 (SB_DFFE): \pwm.count_temp [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9464 (SB_DFFE): \pwm.count_temp [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9465 (SB_DFFE): \pwm.count_temp [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9467 (SB_DFFE): \pwm.count_temp [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9468 (SB_DFFE): \pwm.count_temp [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9469 (SB_DFFE): \pwm.count_temp [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9472 (SB_DFF): \pwm.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9460 (SB_DFFE): \pwm.count_temp [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9470 (SB_DFFE): \pwm.pwm_counter = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9474 (SB_DFF): \pwm.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9475 (SB_DFF): \pwm.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9476 (SB_DFF): \pwm.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9477 (SB_DFF): \pwm.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9471 (SB_DFF): \pwm.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9503 (SB_DFF): \pwm.state = 0

8.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in hardware.
  Merging $auto$simplemap.cc:277:simplemap_mux$9539 (A=1'0, B=$techmap\pwm.$procmux$2634_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9473 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13868 (A=1'0, B=$techmap\soc.cpu.$procmux$5484_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13091 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17234 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13465 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17235 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13466 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17236 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13467 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17237 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13468 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17238 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13469 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17239 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13470 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17240 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13471 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17241 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13472 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17242 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13473 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17243 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13474 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17244 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13475 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17245 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13476 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17246 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13477 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17247 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13478 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17248 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13479 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14460 (A=$techmap$techmap\soc.cpu.$procmux$5158.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14481_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2061_Y) into $auto$simplemap.cc:420:simplemap_dff$13143 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14487 (A=$techmap\soc.cpu.$procmux$5140_Y, B=1'0, S=\soc.cpu.clear_prefetched_high_word) into $auto$simplemap.cc:420:simplemap_dff$13140 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14484 (A=\soc.cpu.mem_la_read, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2061_Y) into $auto$simplemap.cc:420:simplemap_dff$13141 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14459 (A=$techmap$techmap\soc.cpu.$procmux$5158.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14480_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2061_Y) into $auto$simplemap.cc:420:simplemap_dff$13142 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17652 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2731.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14286_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13481 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17654 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13483 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17655 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13484 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17656 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13485 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17657 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13486 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17658 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13487 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17659 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13488 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14309 (A=$techmap$techmap\soc.cpu.$procmux$5216.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14303_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2061_Y) into $auto$simplemap.cc:420:simplemap_dff$13212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14910 (A=1'0, B=$techmap\soc.cpu.$procmux$4608_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14925 (A=1'0, B=$techmap\soc.cpu.$procmux$4565_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13216 (SB_DFFE).
  Merging $auto$simplemap.cc:311:simplemap_lut$12668 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$12664 [1], S=\soc.cpu.mem_rdata_latched [1]) into $auto$simplemap.cc:420:simplemap_dff$13224 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25931 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14879_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13258 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25932 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14880_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13259 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25933 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14881_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13260 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25934 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14882_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13261 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25935 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14883_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13262 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25936 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14884_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13263 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25937 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14885_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13264 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25938 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14886_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13265 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25939 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14887_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13266 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25940 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14888_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13267 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25941 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14889_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13268 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25942 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14890_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13269 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25943 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14891_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13270 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25944 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14892_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13271 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25945 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14893_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13272 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25946 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14894_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13273 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25947 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14895_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13274 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25948 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14896_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13275 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25949 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14897_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13276 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25950 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14898_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13277 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25951 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14899_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13278 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25952 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14900_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13279 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25953 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14901_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13280 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25954 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14902_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13281 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25955 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14903_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13282 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25956 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14904_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13283 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25957 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14905_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13284 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25958 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14906_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13285 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25959 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14907_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13286 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25960 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14908_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13287 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25961 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14909_Y, S=$techmap$techmap\soc.cpu.$procmux$4613.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14871_Y) into $auto$simplemap.cc:420:simplemap_dff$13288 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14800 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4631.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14067_Y [5], S=$auto$simplemap.cc:309:simplemap_lut$12667) into $auto$simplemap.cc:420:simplemap_dff$13294 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15086 (A=$techmap\soc.cpu.$procmux$4377_Y, B=1'0, S=$auto$simplemap.cc:309:simplemap_lut$12667) into $auto$simplemap.cc:420:simplemap_dff$13300 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14708 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1058$2262_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13318 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14706 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1057$2258_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13319 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14704 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1056$2254_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14702 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1055$2250_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14700 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1054$2246_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14698 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1053$2242_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14696 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1052$2238_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14694 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1051$2234_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14692 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1050$2230_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13326 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14690 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1049$2226_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13327 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14685 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1043$2210_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13331 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14683 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1042$2208_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13332 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14681 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1041$2206_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13333 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14679 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1040$2204_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13334 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14677 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1039$2202_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13335 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14675 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1038$2200_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13336 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14665 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1026$2182_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14663 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1025$2180_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13346 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14661 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1024$2178_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13347 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14659 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1023$2176_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13348 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14657 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1022$2174_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13349 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14655 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1021$2172_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13350 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16194 (A=$techmap\soc.cpu.$1\clear_prefetched_high_word[0:0], B=1'1, S=$techmap\soc.cpu.$logic_or$picorv32.v:1277$2390_Y) into $auto$simplemap.cc:420:simplemap_dff$13387 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17589 (A=1'1, B=$auto$wreduce.cc:454:run$7031 [1], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2425_Y) into $auto$simplemap.cc:420:simplemap_dff$13423 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17640 (A=1'0, B=$techmap\soc.cpu.$procmux$3238_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13420 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17645 (A=1'0, B=$techmap\soc.cpu.$logic_not$picorv32.v:1401$2428_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13421 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17590 (A=1'1, B=$auto$wreduce.cc:454:run$7031 [2], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2425_Y) into $auto$simplemap.cc:420:simplemap_dff$13424 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17591 (A=1'1, B=$auto$wreduce.cc:454:run$7031 [3], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2425_Y) into $auto$simplemap.cc:420:simplemap_dff$13425 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16643 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13651 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17588 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$62395, S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2425_Y) into $auto$simplemap.cc:420:simplemap_dff$13422 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17571 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3485.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14073_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13428 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17572 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3485.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14074_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13429 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17573 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3485.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14075_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13430 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17574 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3485.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14076_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13431 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17542 (A=1'0, B=$techmap\soc.cpu.$ternary$picorv32.v:1519$2477_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13439 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17569 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3485.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14071_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13426 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17566 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3511.$and$/usr/local/bin/../share/yosys/techmap.v:434$14287_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13432 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17563 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3524.$and$/usr/local/bin/../share/yosys/techmap.v:434$14287_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13433 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17554 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3582.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14303_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13435 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17552 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3618.$and$/usr/local/bin/../share/yosys/techmap.v:434$14287_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13436 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17547 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3625.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17389_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13437 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17541 (A=1'0, B=$techmap\soc.cpu.$eq$picorv32.v:1518$2474_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13438 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17636 (A=1'0, B=$techmap\soc.cpu.$procmux$3249_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13440 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17650 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_wdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13442 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17649 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_rdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13443 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17375 (A=$techmap\soc.cpu.$procmux$3973_Y, B=1'1, S=$techmap\soc.cpu.$0\set_mem_do_rinst[0:0]) into $auto$simplemap.cc:420:simplemap_dff$13444 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17368 (A=$techmap\soc.cpu.$logic_and$picorv32.v:1551$2491_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:1920$2606_Y) into $auto$simplemap.cc:420:simplemap_dff$13445 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17218 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13449 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17219 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13450 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17220 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13451 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17221 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13452 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17222 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13453 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17223 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13454 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17224 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13455 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17225 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13456 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17226 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13457 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17227 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13458 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17228 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13459 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17229 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13460 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17230 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13461 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17231 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13462 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17232 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13463 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17233 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13464 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17217 (A=1'0, B=$techmap\soc.cpu.$procmux$4045_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13448 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17661 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13490 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16644 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17663 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13492 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16645 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13653 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17665 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13494 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16646 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13654 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17667 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16647 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13655 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17669 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13498 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16648 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13656 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17671 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16649 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13657 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17673 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16650 (A=1'1, B=$techmap\soc.cpu.$procmux$4201_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13658 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17675 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16651 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13659 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17677 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16652 (A=1'1, B=$techmap\soc.cpu.$procmux$4201_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13660 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16653 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13661 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17680 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16654 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13662 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16655 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13663 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17122 (A=1'1, B=\soc.cpu.cpuregs_rs1 [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13513 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17651 (A=1'0, B=$techmap\soc.cpu.$5\next_irq_pending[31:0] [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13480 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16656 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13664 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16657 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13665 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16658 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13666 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17126 (A=1'1, B=\soc.cpu.cpuregs_rs1 [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13517 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16659 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17128 (A=1'1, B=\soc.cpu.cpuregs_rs1 [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13519 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16660 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17130 (A=1'1, B=\soc.cpu.cpuregs_rs1 [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13521 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16661 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16662 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16663 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16664 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16665 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17136 (A=1'1, B=\soc.cpu.cpuregs_rs1 [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13527 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16571 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17138 (A=1'1, B=\soc.cpu.cpuregs_rs1 [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13529 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16572 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16573 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16574 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17142 (A=1'1, B=\soc.cpu.cpuregs_rs1 [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13533 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16575 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17144 (A=1'1, B=\soc.cpu.cpuregs_rs1 [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13535 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16576 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16577 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16578 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17148 (A=1'1, B=\soc.cpu.cpuregs_rs1 [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13539 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16579 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17150 (A=1'1, B=\soc.cpu.cpuregs_rs1 [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13541 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16580 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17152 (A=1'1, B=\soc.cpu.cpuregs_rs1 [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13543 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16581 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17121 (A=1'1, B=\soc.cpu.cpuregs_rs1 [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17118 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4082.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14289_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13544 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17113 (A=1'0, B=\soc.cpu.irq_active, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13545 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16582 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13686 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16583 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17603 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16584 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16585 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16586 (A=1'1, B=$auto$alumacc.cc:474:replace_alu$7302.AA [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17607 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16587 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13691 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17609 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16588 (A=1'1, B=$auto$alumacc.cc:474:replace_alu$7302.AA [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13692 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17611 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16589 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17613 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16590 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13694 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17615 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16591 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13695 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17617 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16592 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17619 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13566 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16593 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17621 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13568 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16594 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13698 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17623 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13570 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16595 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17625 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13572 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16596 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13700 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17627 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13574 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16597 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13701 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17629 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13576 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16598 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17599 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16599 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16600 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16601 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7302.AA [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16298 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13754 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16251 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16252 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13708 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16253 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13709 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16254 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13710 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16255 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13711 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16256 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13712 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16257 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16258 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13714 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16259 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16260 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16261 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16262 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13718 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16263 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13719 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16264 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13720 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16265 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13721 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16266 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13722 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16267 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13723 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16268 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13724 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16269 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13725 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16270 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13726 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16271 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13727 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16272 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13728 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16273 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13729 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17570 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3485.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14072_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13427 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16635 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16636 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16637 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13645 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16638 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13646 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16639 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13647 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16640 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13648 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16641 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13649 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16642 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16295 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17660 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13489 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17662 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13491 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17664 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13493 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17666 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17668 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17670 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13499 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17672 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17674 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17676 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17678 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17679 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17681 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17682 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2453_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17123 (A=1'1, B=\soc.cpu.cpuregs_rs1 [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13514 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17124 (A=1'1, B=\soc.cpu.cpuregs_rs1 [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13515 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17125 (A=1'1, B=\soc.cpu.cpuregs_rs1 [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13516 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17127 (A=1'1, B=\soc.cpu.cpuregs_rs1 [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13518 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17129 (A=1'1, B=\soc.cpu.cpuregs_rs1 [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13520 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17131 (A=1'1, B=\soc.cpu.cpuregs_rs1 [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13522 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17132 (A=1'1, B=\soc.cpu.cpuregs_rs1 [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13523 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17133 (A=1'1, B=\soc.cpu.cpuregs_rs1 [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13524 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17134 (A=1'1, B=\soc.cpu.cpuregs_rs1 [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13525 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17135 (A=1'1, B=\soc.cpu.cpuregs_rs1 [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13526 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16634 (A=1'0, B=$techmap\soc.cpu.$procmux$4201_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17137 (A=1'1, B=\soc.cpu.cpuregs_rs1 [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13528 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17139 (A=1'1, B=\soc.cpu.cpuregs_rs1 [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13530 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17140 (A=1'1, B=\soc.cpu.cpuregs_rs1 [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13531 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17141 (A=1'1, B=\soc.cpu.cpuregs_rs1 [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13532 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17143 (A=1'1, B=\soc.cpu.cpuregs_rs1 [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13534 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17145 (A=1'1, B=\soc.cpu.cpuregs_rs1 [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13536 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17146 (A=1'1, B=\soc.cpu.cpuregs_rs1 [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13537 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17147 (A=1'1, B=\soc.cpu.cpuregs_rs1 [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13538 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17149 (A=1'1, B=\soc.cpu.cpuregs_rs1 [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13540 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17151 (A=1'1, B=\soc.cpu.cpuregs_rs1 [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13542 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17600 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17601 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17602 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17604 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17605 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17606 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17608 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17610 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17612 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17614 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17616 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17618 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13565 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17620 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13567 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17622 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13569 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17624 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13571 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17626 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13573 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17628 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13575 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17630 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3378.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13577 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16570 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7308.BB [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16275 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13731 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16299 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16277 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16300 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16279 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13735 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16305 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13761 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16302 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16303 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16283 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16284 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16285 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16286 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16287 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16304 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16289 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16291 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16294 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16292 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16293 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16290 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16296 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16297 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9318 (A=$procmux$6622_Y, B=1'1, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16274 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13730 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16276 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13732 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16278 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13734 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16280 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13736 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16281 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16282 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16288 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16306 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13762 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16307 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13763 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16308 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13764 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16309 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13765 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16310 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13766 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16311 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13767 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16312 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13768 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16313 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13769 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18302 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13771 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16250 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$62376, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18303 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13772 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18304 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13773 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18305 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13774 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18306 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13775 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18307 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13776 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18308 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13777 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18309 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13778 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18310 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13779 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18311 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13780 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18312 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13781 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18313 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13782 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18314 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13783 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18315 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13784 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18316 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13785 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18317 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13786 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18318 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13787 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18319 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13788 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18320 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13789 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18321 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13790 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18322 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13791 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18323 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13792 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18324 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13793 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18325 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13794 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18326 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13795 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18327 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13796 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18328 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13797 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18329 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13798 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18330 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13799 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18331 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13800 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18332 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13801 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18333 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13802 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18334 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13803 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18335 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13804 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18336 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13805 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18337 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13806 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18338 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13807 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18339 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13808 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18340 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13809 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18341 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13810 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18342 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13811 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18343 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13812 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18344 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13813 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18345 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13814 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18346 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13815 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18347 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13816 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18348 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13817 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18349 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13818 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18350 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13819 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8739 (A=1'0, B=$techmap\clock.$procmux$2656_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8675 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18352 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13821 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18353 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13822 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18354 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13823 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18355 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13824 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18356 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13825 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18357 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13826 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18358 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13827 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18359 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13828 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18360 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13829 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18361 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13830 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18362 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13831 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18363 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13832 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18364 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13833 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16301 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2487_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18301 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$62357, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13770 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16245 (A=1'0, B=$techmap\soc.cpu.$procmux$4275_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13834 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20251 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20119 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20252 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20120 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20253 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20121 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20254 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20122 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20255 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20123 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20256 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20124 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20257 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20125 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20266 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20126 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20267 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20127 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20268 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20128 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20269 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20129 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20270 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20130 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20271 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20131 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20272 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20132 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20273 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20133 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20282 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20134 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20283 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20135 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20284 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20136 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20285 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20137 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20286 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20138 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20287 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20139 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20288 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20140 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20289 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20141 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20298 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20142 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20299 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20143 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20300 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20144 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20301 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20145 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20302 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20146 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20303 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20147 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20304 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20148 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20382 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5773_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20150 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20305 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20149 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20359 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20152 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20360 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20153 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20361 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20154 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20362 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20155 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20363 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20156 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20364 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20157 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20358 (A=1'0, B=\soc.simpleuart.recv_pattern [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20151 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20365 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20158 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20335 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20160 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20336 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20161 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20337 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20162 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20338 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20163 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20339 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20164 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20340 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20165 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20334 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20159 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20341 (A=1'0, B=\pin_2, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20166 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20387 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20388 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20389 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20390 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20171 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20391 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20172 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20392 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20173 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20393 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20174 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20394 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20175 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20395 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20176 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20396 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20177 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20397 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20178 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20398 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20179 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20399 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20180 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20400 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20181 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20401 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20182 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20402 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20183 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20403 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20184 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20404 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20185 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20405 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20186 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20406 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20187 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20407 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20188 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20408 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20189 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20409 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20190 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20410 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20191 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20411 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20192 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20412 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20193 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20413 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20194 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20414 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20195 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20415 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20196 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20416 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20197 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20386 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20417 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5759.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$16197_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20198 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20315 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5801.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14120_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20316 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5801.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14120_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20314 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5801.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14120_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20545 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5729_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20317 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5801.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14120_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20549 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20205 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20550 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20206 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20551 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20207 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20552 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20208 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20553 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20209 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20554 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20210 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20555 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20211 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20556 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20557 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20558 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20214 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20559 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20215 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20560 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20561 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20562 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20563 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20564 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20565 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20566 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20567 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20568 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20224 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20569 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20225 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20570 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20226 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20571 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20227 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20572 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20228 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20573 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20229 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20574 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20230 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20575 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20231 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20576 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20232 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20577 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20233 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20578 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20234 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20548 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20204 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20579 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5721_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20235 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20530 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5740_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20531 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5740_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20529 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5740_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20532 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5740_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20490 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20241 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20491 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20492 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20493 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20494 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20495 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20496 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20247 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20497 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20248 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9280 (A=$procmux$6609_Y [29], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9350 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20762 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$20751) into $auto$simplemap.cc:420:simplemap_dff$20742 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9252 (A=$procmux$6609_Y [1], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21014 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20859 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21015 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20860 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21013 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20858 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21011 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20862 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21009 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20863 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21016 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20861 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21002 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20865 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21003 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20866 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21001 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20864 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21004 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20867 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20994 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20869 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20995 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20870 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20993 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20868 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20991 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20872 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20989 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20873 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20987 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20874 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20985 (A=1'1, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20875 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21021 (A=1'1, B=$techmap\soc.spimemio.$logic_or$spimemio.v:100$42_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20876 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24282 (A=$techmap\soc.spimemio.xfer.$2\flash_io3_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24643) into $auto$simplemap.cc:420:simplemap_dff$20877 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$24280 (A=$techmap\soc.spimemio.xfer.$2\flash_io2_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24643) into $auto$simplemap.cc:420:simplemap_dff$20878 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$24279 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$6123.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14286_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24643) into $auto$simplemap.cc:420:simplemap_dff$20879 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$24277 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$6071.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14286_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24643) into $auto$simplemap.cc:420:simplemap_dff$20880 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$20996 (A=1'1, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20871 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21240 (A=$techmap\soc.spimemio.$procmux$6258_Y [1], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20882 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21241 (A=$techmap\soc.spimemio.$procmux$6258_Y [2], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20883 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21239 (A=$techmap\soc.spimemio.$procmux$6258_Y [0], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20881 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21236 (A=$techmap\soc.spimemio.$procmux$6273_Y, B=1'0, S=\soc.spimemio.jump) into $auto$simplemap.cc:420:simplemap_dff$20885 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21233 (A=\soc.spimemio.rd_inc, B=1'0, S=\soc.spimemio.valid) into $auto$simplemap.cc:420:simplemap_dff$20886 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21229 (A=$techmap\soc.spimemio.$procmux$6289_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20887 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21242 (A=$techmap\soc.spimemio.$procmux$6258_Y [3], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20884 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21173 (A=$techmap\soc.spimemio.$procmux$6348_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20936 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21168 (A=$techmap\soc.spimemio.$procmux$6367_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20937 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21163 (A=$techmap\soc.spimemio.$procmux$6386_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20938 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21140 (A=$techmap$techmap\soc.spimemio.$procmux$6396.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$21156_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20940 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21141 (A=$techmap$techmap\soc.spimemio.$procmux$6396.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$21157_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20941 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21139 (A=$techmap$techmap\soc.spimemio.$procmux$6396.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$21155_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20939 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21142 (A=$techmap$techmap\soc.spimemio.$procmux$6396.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$21158_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20942 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21177 (A=$techmap$techmap\soc.spimemio.$procmux$6303.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14299_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20951 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21397 (A=$techmap\soc.spimemio.$procmux$6206_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$64_Y) into $auto$simplemap.cc:420:simplemap_dff$20952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21902 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$12157, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1045_Y) into $auto$simplemap.cc:420:simplemap_dff$21662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21901 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$12168, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1045_Y) into $auto$simplemap.cc:420:simplemap_dff$21663 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21899 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$12181, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1045_Y) into $auto$simplemap.cc:420:simplemap_dff$21664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21862 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$12191, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1045_Y) into $auto$simplemap.cc:420:simplemap_dff$21665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22444 (A=1'0, B=\soc.cpu.pcpi_div.start, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$21669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22381 (A=\soc.cpu.pcpi_div.quotient_msk [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22382 (A=\soc.cpu.pcpi_div.quotient_msk [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22383 (A=\soc.cpu.pcpi_div.quotient_msk [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22384 (A=\soc.cpu.pcpi_div.quotient_msk [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22385 (A=\soc.cpu.pcpi_div.quotient_msk [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22386 (A=\soc.cpu.pcpi_div.quotient_msk [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22387 (A=\soc.cpu.pcpi_div.quotient_msk [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22388 (A=\soc.cpu.pcpi_div.quotient_msk [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22389 (A=\soc.cpu.pcpi_div.quotient_msk [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22390 (A=\soc.cpu.pcpi_div.quotient_msk [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22391 (A=\soc.cpu.pcpi_div.quotient_msk [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22392 (A=\soc.cpu.pcpi_div.quotient_msk [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22393 (A=\soc.cpu.pcpi_div.quotient_msk [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22394 (A=\soc.cpu.pcpi_div.quotient_msk [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22395 (A=\soc.cpu.pcpi_div.quotient_msk [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22396 (A=\soc.cpu.pcpi_div.quotient_msk [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21686 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22397 (A=\soc.cpu.pcpi_div.quotient_msk [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22398 (A=\soc.cpu.pcpi_div.quotient_msk [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22399 (A=\soc.cpu.pcpi_div.quotient_msk [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22400 (A=\soc.cpu.pcpi_div.quotient_msk [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22401 (A=\soc.cpu.pcpi_div.quotient_msk [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21691 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22402 (A=\soc.cpu.pcpi_div.quotient_msk [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21692 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22403 (A=\soc.cpu.pcpi_div.quotient_msk [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22404 (A=\soc.cpu.pcpi_div.quotient_msk [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21694 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22405 (A=\soc.cpu.pcpi_div.quotient_msk [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21695 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22406 (A=\soc.cpu.pcpi_div.quotient_msk [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22407 (A=\soc.cpu.pcpi_div.quotient_msk [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22408 (A=\soc.cpu.pcpi_div.quotient_msk [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21698 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22409 (A=\soc.cpu.pcpi_div.quotient_msk [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22410 (A=\soc.cpu.pcpi_div.quotient_msk [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21700 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22380 (A=\soc.cpu.pcpi_div.quotient_msk [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22253 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22254 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22255 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22256 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22257 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22258 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21708 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22259 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21709 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22260 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21710 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22261 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21711 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22262 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21712 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22263 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22264 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21714 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22265 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22266 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22267 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22268 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21718 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22269 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21719 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22270 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21720 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22271 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21721 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22272 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21722 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22273 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21723 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22274 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21724 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22275 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21725 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22276 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21726 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22277 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21727 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22278 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21728 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22279 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21729 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22280 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21730 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22281 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21731 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22282 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21732 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22252 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [0], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22283 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1076_Y [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22095 (A=\soc.cpu.pcpi_div.divisor [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21735 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22096 (A=\soc.cpu.pcpi_div.divisor [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21736 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22097 (A=\soc.cpu.pcpi_div.divisor [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22098 (A=\soc.cpu.pcpi_div.divisor [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22099 (A=\soc.cpu.pcpi_div.divisor [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22100 (A=\soc.cpu.pcpi_div.divisor [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22101 (A=\soc.cpu.pcpi_div.divisor [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22102 (A=\soc.cpu.pcpi_div.divisor [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22103 (A=\soc.cpu.pcpi_div.divisor [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22104 (A=\soc.cpu.pcpi_div.divisor [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22105 (A=\soc.cpu.pcpi_div.divisor [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22106 (A=\soc.cpu.pcpi_div.divisor [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22107 (A=\soc.cpu.pcpi_div.divisor [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22108 (A=\soc.cpu.pcpi_div.divisor [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22109 (A=\soc.cpu.pcpi_div.divisor [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22110 (A=\soc.cpu.pcpi_div.divisor [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22111 (A=\soc.cpu.pcpi_div.divisor [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22112 (A=\soc.cpu.pcpi_div.divisor [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22113 (A=\soc.cpu.pcpi_div.divisor [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22114 (A=\soc.cpu.pcpi_div.divisor [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21754 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22115 (A=\soc.cpu.pcpi_div.divisor [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22116 (A=\soc.cpu.pcpi_div.divisor [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22117 (A=\soc.cpu.pcpi_div.divisor [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22118 (A=\soc.cpu.pcpi_div.divisor [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22119 (A=\soc.cpu.pcpi_div.divisor [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22120 (A=\soc.cpu.pcpi_div.divisor [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22121 (A=\soc.cpu.pcpi_div.divisor [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21761 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22122 (A=\soc.cpu.pcpi_div.divisor [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21762 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22123 (A=\soc.cpu.pcpi_div.divisor [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21763 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22124 (A=\soc.cpu.pcpi_div.divisor [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21764 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22094 (A=\soc.cpu.pcpi_div.divisor [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21734 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22156 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$shl$picorv32.v:2403$1060_Y [62], S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21796 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23277 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$12124, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$953_Y) into $auto$simplemap.cc:420:simplemap_dff$22966 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23276 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$12134, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$953_Y) into $auto$simplemap.cc:420:simplemap_dff$22967 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23275 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$12144, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$953_Y) into $auto$simplemap.cc:420:simplemap_dff$22968 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22449 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$procmux$5538_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$21861 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23269 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$5705_Y, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$953_Y) into $auto$simplemap.cc:420:simplemap_dff$22969 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23759 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$5638_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22971 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23757 (A=1'1, B=$techmap\soc.cpu.pcpi_mul.$procmux$5646_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22972 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23751 (A=$auto$wreduce.cc:454:run$7045 [1], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22974 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23752 (A=$auto$wreduce.cc:454:run$7045 [2], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22975 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23753 (A=$auto$wreduce.cc:454:run$7045 [3], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22976 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23754 (A=$auto$wreduce.cc:454:run$7045 [4], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22977 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23750 (A=$auto$simplemap.cc:309:simplemap_lut$62623, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22973 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23756 (A=$auto$wreduce.cc:454:run$7045 [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22979 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23728 (A=\soc.cpu.pcpi_mul.next_rdt [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22984 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23729 (A=\soc.cpu.pcpi_mul.next_rdt [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22988 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23730 (A=\soc.cpu.pcpi_mul.next_rdt [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22992 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23731 (A=\soc.cpu.pcpi_mul.next_rdt [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22996 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23732 (A=\soc.cpu.pcpi_mul.next_rdt [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23000 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23733 (A=\soc.cpu.pcpi_mul.next_rdt [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23734 (A=\soc.cpu.pcpi_mul.next_rdt [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23008 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23735 (A=\soc.cpu.pcpi_mul.next_rdt [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23012 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23736 (A=\soc.cpu.pcpi_mul.next_rdt [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23737 (A=\soc.cpu.pcpi_mul.next_rdt [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23020 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23738 (A=\soc.cpu.pcpi_mul.next_rdt [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23024 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23739 (A=\soc.cpu.pcpi_mul.next_rdt [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23740 (A=\soc.cpu.pcpi_mul.next_rdt [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23032 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23741 (A=\soc.cpu.pcpi_mul.next_rdt [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23036 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23742 (A=\soc.cpu.pcpi_mul.next_rdt [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23040 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23601 (A=\soc.cpu.pcpi_mul.next_rd [1], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23045 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23602 (A=\soc.cpu.pcpi_mul.next_rd [2], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23046 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23603 (A=\soc.cpu.pcpi_mul.next_rd [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23047 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23604 (A=$auto$simplemap.cc:309:simplemap_lut$62832, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23048 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23605 (A=\soc.cpu.pcpi_mul.next_rd [5], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23049 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23606 (A=\soc.cpu.pcpi_mul.next_rd [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23050 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23607 (A=\soc.cpu.pcpi_mul.next_rd [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23051 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23608 (A=$auto$simplemap.cc:309:simplemap_lut$62642, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23052 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23609 (A=\soc.cpu.pcpi_mul.next_rd [9], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23053 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23610 (A=\soc.cpu.pcpi_mul.next_rd [10], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23611 (A=\soc.cpu.pcpi_mul.next_rd [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23055 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23612 (A=$auto$simplemap.cc:309:simplemap_lut$62813, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23613 (A=\soc.cpu.pcpi_mul.next_rd [13], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23057 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23614 (A=\soc.cpu.pcpi_mul.next_rd [14], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23058 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23615 (A=\soc.cpu.pcpi_mul.next_rd [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23059 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23616 (A=$auto$simplemap.cc:309:simplemap_lut$62775, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23060 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23617 (A=\soc.cpu.pcpi_mul.next_rd [17], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23061 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23618 (A=\soc.cpu.pcpi_mul.next_rd [18], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23062 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23619 (A=\soc.cpu.pcpi_mul.next_rd [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23620 (A=$auto$simplemap.cc:309:simplemap_lut$62889, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23621 (A=\soc.cpu.pcpi_mul.next_rd [21], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23622 (A=\soc.cpu.pcpi_mul.next_rd [22], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23623 (A=\soc.cpu.pcpi_mul.next_rd [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23624 (A=$auto$simplemap.cc:309:simplemap_lut$62908, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23068 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23625 (A=\soc.cpu.pcpi_mul.next_rd [25], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23069 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23626 (A=\soc.cpu.pcpi_mul.next_rd [26], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23070 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23627 (A=\soc.cpu.pcpi_mul.next_rd [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23071 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23628 (A=$auto$simplemap.cc:309:simplemap_lut$62870, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23072 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23629 (A=\soc.cpu.pcpi_mul.next_rd [29], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23073 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23630 (A=\soc.cpu.pcpi_mul.next_rd [30], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23074 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23631 (A=\soc.cpu.pcpi_mul.next_rd [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23632 (A=$auto$simplemap.cc:309:simplemap_lut$62927, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23633 (A=\soc.cpu.pcpi_mul.next_rd [33], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23634 (A=\soc.cpu.pcpi_mul.next_rd [34], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23635 (A=\soc.cpu.pcpi_mul.next_rd [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23079 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23636 (A=$auto$simplemap.cc:309:simplemap_lut$62851, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23080 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23637 (A=\soc.cpu.pcpi_mul.next_rd [37], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23081 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23638 (A=\soc.cpu.pcpi_mul.next_rd [38], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23082 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23639 (A=\soc.cpu.pcpi_mul.next_rd [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23083 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23640 (A=$auto$simplemap.cc:309:simplemap_lut$62661, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23084 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23641 (A=\soc.cpu.pcpi_mul.next_rd [41], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23085 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23642 (A=\soc.cpu.pcpi_mul.next_rd [42], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23086 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23643 (A=\soc.cpu.pcpi_mul.next_rd [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23087 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23644 (A=$auto$simplemap.cc:309:simplemap_lut$62699, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23088 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23645 (A=\soc.cpu.pcpi_mul.next_rd [45], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23646 (A=\soc.cpu.pcpi_mul.next_rd [46], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23647 (A=\soc.cpu.pcpi_mul.next_rd [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23648 (A=$auto$simplemap.cc:309:simplemap_lut$62680, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23649 (A=\soc.cpu.pcpi_mul.next_rd [49], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23093 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23650 (A=\soc.cpu.pcpi_mul.next_rd [50], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23094 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23651 (A=\soc.cpu.pcpi_mul.next_rd [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23095 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23652 (A=$auto$simplemap.cc:309:simplemap_lut$62737, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23096 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23653 (A=\soc.cpu.pcpi_mul.next_rd [53], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23097 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23654 (A=\soc.cpu.pcpi_mul.next_rd [54], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23098 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23655 (A=\soc.cpu.pcpi_mul.next_rd [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23099 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23656 (A=$auto$simplemap.cc:309:simplemap_lut$62718, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23100 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23657 (A=\soc.cpu.pcpi_mul.next_rd [57], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23101 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23658 (A=\soc.cpu.pcpi_mul.next_rd [58], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23102 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23659 (A=\soc.cpu.pcpi_mul.next_rd [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23103 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23660 (A=$auto$simplemap.cc:309:simplemap_lut$62756, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23104 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23661 (A=\soc.cpu.pcpi_mul.next_rd [61], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23105 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23662 (A=\soc.cpu.pcpi_mul.next_rd [62], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23600 (A=$auto$simplemap.cc:309:simplemap_lut$62794, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23044 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23663 (A=\soc.cpu.pcpi_mul.next_rd [63], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23471 (A=1'0, B=\soc.cpu.reg_op2 [0], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23405 (A=1'0, B=$auto$wreduce.cc:454:run$7043 [63], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$23235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24575 (A=1'0, B=\soc.spimemio.din_tag [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24576 (A=1'0, B=\soc.spimemio.din_tag [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24577 (A=1'0, B=\soc.spimemio.din_tag [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24578 (A=1'0, B=\soc.spimemio.din_tag [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24485 (A=1'0, B=\soc.spimemio.xfer.din_ddr, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24272 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24584 (A=1'1, B=$auto$wreduce.cc:454:run$7066 [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24240 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8740 (A=1'0, B=$techmap\clock.$procmux$2656_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8676 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24583 (A=1'1, B=\soc.spimemio.xfer.next_fetch, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24241 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24573 (A=1'0, B=\soc.spimemio.din_rd, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24571 (A=1'0, B=\soc.spimemio.din_qspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24247 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24560 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5861_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24249 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24561 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5861_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24250 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24559 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5861_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24248 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24562 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5861_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24251 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24544 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5871_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24253 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24545 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5871_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24254 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24543 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5871_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24252 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24546 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5871_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24255 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24483 (A=1'0, B=\soc.spimemio.xfer.din_dspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24273 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24479 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5909_Y, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$24274 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10498 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$24183) into $auto$simplemap.cc:420:simplemap_dff$10413 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8741 (A=1'0, B=$techmap\clock.$procmux$2656_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8677 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18351 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2429_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13820 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9023 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9373 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8742 (A=1'0, B=$techmap\clock.$procmux$2656_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8678 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9022 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9372 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9021 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9371 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9050 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9368 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8746 (A=1'0, B=$techmap\clock.$procmux$2656_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8682 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9049 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9367 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8748 (A=1'0, B=$techmap\clock.$procmux$2656_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8684 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9253 (A=$procmux$6609_Y [2], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9254 (A=$procmux$6609_Y [3], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9255 (A=$procmux$6609_Y [4], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9256 (A=$procmux$6609_Y [5], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9326 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9257 (A=$procmux$6609_Y [6], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9327 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9258 (A=$procmux$6609_Y [7], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9328 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9259 (A=$procmux$6609_Y [8], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9329 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9260 (A=$procmux$6609_Y [9], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9330 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9261 (A=$procmux$6609_Y [10], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9331 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9262 (A=$procmux$6609_Y [11], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9332 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9263 (A=$procmux$6609_Y [12], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9333 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9264 (A=$procmux$6609_Y [13], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9334 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9265 (A=$procmux$6609_Y [14], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9335 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9266 (A=$procmux$6609_Y [15], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9336 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9267 (A=$procmux$6609_Y [16], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9337 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9268 (A=$procmux$6609_Y [17], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9269 (A=$procmux$6609_Y [18], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9270 (A=$procmux$6609_Y [19], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9271 (A=$procmux$6609_Y [20], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9272 (A=$procmux$6609_Y [21], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9273 (A=$procmux$6609_Y [22], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9343 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9274 (A=$procmux$6609_Y [23], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9344 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9275 (A=$procmux$6609_Y [24], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9276 (A=$procmux$6609_Y [25], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9346 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9277 (A=$procmux$6609_Y [26], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9347 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9278 (A=$procmux$6609_Y [27], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9348 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9279 (A=$procmux$6609_Y [28], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9349 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9281 (A=$procmux$6609_Y [30], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9351 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9282 (A=$procmux$6609_Y [31], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9352 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9068 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9354 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9251 (A=$procmux$6609_Y [0], B=1'0, S=$logic_and$hardware.v:152$27_Y) into $auto$simplemap.cc:420:simplemap_dff$9321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9069 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9355 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9070 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9356 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9071 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9357 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9072 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9358 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9073 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9359 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9074 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9360 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9043 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9361 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9044 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9362 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9045 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9363 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9046 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9364 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9047 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9365 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9048 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9366 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8749 (A=1'0, B=$techmap\clock.$procmux$2656_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8685 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8747 (A=1'0, B=$techmap\clock.$procmux$2656_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8683 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9019 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9369 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9020 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9370 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8745 (A=1'0, B=$techmap\clock.$procmux$2656_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8681 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8744 (A=1'0, B=$techmap\clock.$procmux$2656_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8680 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8743 (A=1'0, B=$techmap\clock.$procmux$2656_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8679 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9024 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9374 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9025 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9375 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9026 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9376 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9091 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9377 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9092 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9378 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9093 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9379 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9094 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9380 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9095 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9381 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9096 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9382 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9097 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9383 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9098 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9384 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9067 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9353 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20489 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5751_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20240 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9513 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20250 (A=1'1, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20118 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9508 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9461 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9509 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9462 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9510 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9463 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9511 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9464 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9512 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9514 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9467 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9515 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9468 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9516 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9469 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9538 (A=1'0, B=$techmap\pwm.$procmux$2634_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9472 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9507 (A=1'0, B=$techmap\pwm.$procmux$2642_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9460 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9504 (A=1'1, B=$techmap\pwm.$logic_and$pwm.v:39$1129_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9470 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17596 (A=1'0, B=\soc.cpu.cpu_state [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13835 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9540 (A=1'0, B=$techmap\pwm.$procmux$2634_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9474 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9541 (A=1'0, B=$techmap\pwm.$procmux$2634_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9475 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9542 (A=1'0, B=$techmap\pwm.$procmux$2634_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9476 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9543 (A=1'0, B=$techmap\pwm.$procmux$2634_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9477 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13870 (A=1'0, B=$techmap\soc.$logic_and$picosoc.v:189$1177_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13090 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9537 (A=1'0, B=$techmap\pwm.$procmux$2634_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9471 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9601 (A=1'0, B=$techmap\pwm.$3\state[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9503 (SB_DFF).

8.40. Executing ICE40_OPT pass (performing simple optimizations).

8.40.1. Running ICE40 specific optimizations.

8.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~1586 debug messages>

8.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~20436 debug messages>
Removed a total of 6812 cells.

8.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

8.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 847 unused cells and 16654 unused wires.
<suppressed ~848 debug messages>

8.40.6. Rerunning OPT passes. (Removed registers in this run.)

8.40.7. Running ICE40 specific optimizations.

8.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

8.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

8.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

8.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

8.40.12. Finished OPT passes. (There is nothing left to do.)

8.41. Executing TECHMAP pass (map to technology primitives).

8.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

8.41.2. Continuing TECHMAP pass.
No more expansions possible.

8.42. Executing ABC pass (technology mapping using ABC).

8.42.1. Extracting gate netlist of module `\hardware' to `<abc-temp-dir>/input.blif'..
Extracted 9672 gates and 12078 wires to a netlist network with 2404 inputs and 1801 outputs.

8.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2867.
ABC: Participating nodes from both networks       =    6041.
ABC: Participating nodes from the first network   =    2875. (  68.16 % of nodes)
ABC: Participating nodes from the second network  =    3166. (  75.06 % of nodes)
ABC: Node pairs (any polarity)                    =    2875. (  68.16 % of names can be moved)
ABC: Node pairs (same polarity)                   =    2174. (  51.54 % of names can be moved)
ABC: Total runtime =     0.48 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

8.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     4216
ABC RESULTS:        internal signals:     7873
ABC RESULTS:           input signals:     2404
ABC RESULTS:          output signals:     1801
Removing temp directory.

8.43. Executing TECHMAP pass (map to technology primitives).

8.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

8.43.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110 for cells of type $__ICE40_CARRY_WRAPPER.
No more expansions possible.
<suppressed ~1130 debug messages>
Removed 365 unused cells and 13365 unused wires.

8.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     5016
  1-LUT              368
  2-LUT              656
  3-LUT             2147
  4-LUT             1845
  with \SB_CARRY     757

Eliminating LUTs.
Number of LUTs:     5016
  1-LUT              368
  2-LUT              656
  3-LUT             2147
  4-LUT             1845
  with \SB_CARRY     757

Combining LUTs.
Number of LUTs:     4880
  1-LUT              364
  2-LUT              525
  3-LUT             2025
  4-LUT             1966
  with \SB_CARRY     757

Eliminated 0 LUTs.
Combined 136 LUTs.
<suppressed ~29798 debug messages>

8.45. Executing TECHMAP pass (map to technology primitives).

8.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

8.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001100100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000001100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110001011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010011001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001111111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100101100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010110111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001101011111 for cells of type $lut.
No more expansions possible.
<suppressed ~7377 debug messages>
Removed 0 unused cells and 9895 unused wires.

8.46. Executing HIERARCHY pass (managing design hierarchy).

8.46.1. Analyzing design hierarchy..
Top module:  \hardware

8.46.2. Analyzing design hierarchy..
Top module:  \hardware
Removed 0 unused modules.

8.47. Printing statistics.

=== hardware ===

   Number of wires:               5050
   Number of wire bits:          10184
   Number of public wires:         409
   Number of public wire bits:    3961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7752
     SB_CARRY                     1075
     SB_DFF                        159
     SB_DFFE                       721
     SB_DFFESR                     585
     SB_DFFESS                      63
     SB_DFFNSR                       4
     SB_DFFSR                      235
     SB_DFFSS                        6
     SB_IO                           4
     SB_LUT4                      4880
     SB_RAM40_4K                    20

8.48. Executing CHECK pass (checking for obvious problems).
checking module hardware..
found and reported 0 problems.

8.49. Executing BLIF backend.

End of script. Logfile hash: 60e8c68668
CPU: user 17.20s system 0.07s, MEM: 132.18 MB total, 97.50 MB resident
Yosys 0.9+36 (git sha1 4a7bc8c7, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 25% 29x opt_expr (4 sec), 22% 23x opt_merge (3 sec), ...
