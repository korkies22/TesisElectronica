
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+36 (git sha1 4a7bc8c7, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `hardware.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: hardware.v
Parsing Verilog input from `hardware.v' to AST representation.
Generating RTLIL representation for module `\hardware'.
Successfully finished Verilog frontend.

-- Parsing `spimemio.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: spimemio.v
Parsing Verilog input from `spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

-- Parsing `simpleuart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: simpleuart.v
Parsing Verilog input from `simpleuart.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Successfully finished Verilog frontend.

-- Parsing `picosoc.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: picosoc.v
Parsing Verilog input from `picosoc.v' to AST representation.
Generating RTLIL representation for module `\picosoc'.
Generating RTLIL representation for module `\picosoc_regs'.
Generating RTLIL representation for module `\picosoc_mem'.
Successfully finished Verilog frontend.

-- Parsing `picorv32.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: picorv32.v
Parsing Verilog input from `picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

-- Parsing `clock.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: clock.v
Parsing Verilog input from `clock.v' to AST representation.
Generating RTLIL representation for module `\clock'.
Successfully finished Verilog frontend.

-- Parsing `pwm.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: pwm.v
Parsing Verilog input from `pwm.v' to AST representation.
Generating RTLIL representation for module `\pwm'.
Successfully finished Verilog frontend.

-- Parsing `encoder.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: encoder.v
Parsing Verilog input from `encoder.v' to AST representation.
Generating RTLIL representation for module `\encoder'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top hardware -blif hardware.blif' --

9. Executing SYNTH_ICE40 pass.

9.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

9.2. Executing HIERARCHY pass (managing design hierarchy).

9.2.1. Analyzing design hierarchy..
Top module:  \hardware
Used module:     \picosoc
Used module:         \picosoc_mem
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \clock

9.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc'.
Parameter \MEM_WORDS = 2048
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Generating RTLIL representation for module `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696'.

9.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_mem'.
Parameter \WORDS = 256
Generating RTLIL representation for module `$paramod\picosoc_mem\WORDS=256'.

9.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1
Parameter \ENABLE_DIV = 1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Parameter \STACKADDR = 1024
Generating RTLIL representation for module `$paramod$ec5c1c222cb66c54ad2fd64df033c03563be8a28\picorv32'.

9.2.5. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         \picosoc_mem
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \clock

9.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_mem'.
Parameter \WORDS = 2048
Generating RTLIL representation for module `$paramod\picosoc_mem\WORDS=2048'.

9.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1
Parameter \ENABLE_DIV = 1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1
Parameter \PROGADDR_RESET = 327680
Parameter \PROGADDR_IRQ = 327696
Parameter \STACKADDR = 8192
Generating RTLIL representation for module `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32'.

9.2.8. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         $paramod\picosoc_mem\WORDS=2048
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs
Used module:     \clock

9.2.9. Analyzing design hierarchy..
Top module:  \hardware
Used module:     $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696
Used module:         $paramod\picosoc_mem\WORDS=2048
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs
Used module:     \clock
Removing unused module `$paramod$ec5c1c222cb66c54ad2fd64df033c03563be8a28\picorv32'.
Removing unused module `$paramod\picosoc_mem\WORDS=256'.
Removing unused module `\encoder'.
Removing unused module `\pwm'.
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removing unused module `\picosoc_mem'.
Removing unused module `\picosoc'.
Removed 12 unused modules.

9.3. Executing PROC pass (convert processes to netlists).

9.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
Found and cleaned up 1 empty switch in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2428'.
Found and cleaned up 6 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:529$2070'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:529$2070'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
Cleaned up 24 empty switches.

9.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 41 switch rules as full_case in process $proc$picorv32.v:1374$2442 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1287$2411 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1273$2406 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1164$2371 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:839$2110 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:790$2108 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:759$2104 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 47 switch rules as full_case in process $proc$picorv32.v:683$2103 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:548$2079 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:413$2039 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:384$2036 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:384$2036 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:373$2031 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:308$1957 in module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:2392$1051 in module picorv32_pcpi_div.
Marked 4 switch rules as full_case in process $proc$picorv32.v:2201$995 in module picorv32_pcpi_mul.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$150 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$141 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$139 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$spimemio.v:535$119 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$spimemio.v:447$95 in module spimemio_xfer.
Marked 3 switch rules as full_case in process $proc$spimemio.v:207$65 in module spimemio.
Marked 1 switch rules as full_case in process $proc$spimemio.v:99$43 in module spimemio.
Marked 1 switch rules as full_case in process $proc$hardware.v:111$5 in module hardware.
Removed a total of 2 dead cases.

9.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 121 assignments to connections.

9.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\clock.$proc$clock.v:12$1118'.
  Set init value: \counterO = 0
Found init rule in `\clock.$proc$clock.v:10$1117'.
  Set init value: \counterI = 0
Found init rule in `\hardware.$proc$hardware.v:108$33'.
  Set init value: \pinTest = 0
Found init rule in `\hardware.$proc$hardware.v:101$30'.
  Set init value: \writeEncoderR = 1'0
Found init rule in `\hardware.$proc$hardware.v:100$29'.
  Set init value: \writeEncoderL = 1'0
Found init rule in `\hardware.$proc$hardware.v:96$28'.
  Set init value: \clockO = 0
Found init rule in `\hardware.$proc$hardware.v:57$27'.
  Set init value: \reset_cnt = 6'000000

9.3.5. Executing PROC_ARST pass (detect async resets in processes).

9.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
     1/85: $23\next_irq_pending[2:2]
     2/85: $22\next_irq_pending[2:2]
     3/85: $21\next_irq_pending[2:2]
     4/85: $20\next_irq_pending[2:2]
     5/85: $19\next_irq_pending[2:2]
     6/85: $18\next_irq_pending[2:2]
     7/85: $17\next_irq_pending[2:2]
     8/85: $5\next_irq_pending[31:0] [31:2]
     9/85: $3\set_mem_do_rdata[0:0]
    10/85: $5\next_irq_pending[31:0] [1]
    11/85: $3\set_mem_do_wdata[0:0]
    12/85: $5\next_irq_pending[31:0] [0]
    13/85: $4\set_mem_do_rinst[0:0]
    14/85: $3\set_mem_do_rinst[0:0]
    15/85: $4\set_mem_do_wdata[0:0]
    16/85: $15\next_irq_pending[1:1]
    17/85: $14\next_irq_pending[1:1]
    18/85: $13\next_irq_pending[1:1]
    19/85: $4\set_mem_do_rdata[0:0]
    20/85: $11\next_irq_pending[1:1]
    21/85: $10\next_irq_pending[1:1]
    22/85: $9\next_irq_pending[1:1]
    23/85: $8\next_irq_pending[1:1]
    24/85: $7\next_irq_pending[1:1]
    25/85: $16\next_irq_pending[1:1]
    26/85: $5\set_mem_do_rinst[0:0]
    27/85: $12\next_irq_pending[1:1]
    28/85: $6\next_irq_pending[31:0]
    29/85: $3\current_pc[31:0]
    30/85: $2\current_pc[31:0]
    31/85: $2\set_mem_do_wdata[0:0]
    32/85: $2\set_mem_do_rdata[0:0]
    33/85: $2\set_mem_do_rinst[0:0]
    34/85: $4\next_irq_pending[31:0]
    35/85: $1\current_pc[31:0]
    36/85: $1\set_mem_do_wdata[0:0]
    37/85: $1\set_mem_do_rdata[0:0]
    38/85: $1\set_mem_do_rinst[0:0]
    39/85: $0\trace_data[35:0]
    40/85: $3\next_irq_pending[31:0]
    41/85: $2\next_irq_pending[0:0]
    42/85: $1\next_irq_pending[0:0]
    43/85: $0\count_cycle[63:0]
    44/85: $0\pcpi_timeout[0:0]
    45/85: $0\trace_valid[0:0]
    46/85: $0\do_waitirq[0:0]
    47/85: $0\decoder_pseudo_trigger[0:0]
    48/85: $0\decoder_trigger[0:0]
    49/85: $0\alu_wait_2[0:0]
    50/85: $0\alu_wait[0:0]
    51/85: $0\reg_out[31:0]
    52/85: $0\reg_sh[4:0]
    53/85: $0\trap[0:0]
    54/85: $0\pcpi_timeout_counter[3:0]
    55/85: $0\latched_rd[5:0]
    56/85: $0\latched_is_lb[0:0]
    57/85: $0\latched_is_lh[0:0]
    58/85: $0\latched_is_lu[0:0]
    59/85: $0\latched_trace[0:0]
    60/85: $0\latched_compr[0:0]
    61/85: $0\latched_branch[0:0]
    62/85: $0\latched_stalu[0:0]
    63/85: $0\latched_store[0:0]
    64/85: $0\irq_state[1:0]
    65/85: $0\cpu_state[7:0]
    66/85: $0\dbg_rs2val_valid[0:0]
    67/85: $0\dbg_rs1val_valid[0:0]
    68/85: $0\dbg_rs2val[31:0]
    69/85: $0\dbg_rs1val[31:0]
    70/85: $0\mem_do_wdata[0:0]
    71/85: $0\mem_do_rdata[0:0]
    72/85: $0\mem_do_rinst[0:0]
    73/85: $0\mem_do_prefetch[0:0]
    74/85: $0\mem_wordsize[1:0]
    75/85: $0\timer[31:0]
    76/85: $0\irq_mask[31:0]
    77/85: $0\irq_active[0:0]
    78/85: $0\irq_delay[0:0]
    79/85: $0\reg_op2[31:0]
    80/85: $0\reg_op1[31:0]
    81/85: $0\reg_next_pc[31:0]
    82/85: $0\reg_pc[31:0]
    83/85: $0\count_instr[63:0]
    84/85: $0\eoi[31:0]
    85/85: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2428'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2411'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2406'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2405'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2383'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2371'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
     1/76: $0\decoded_rs1[5:0] [5]
     2/76: $0\decoded_imm_uj[31:0] [10]
     3/76: $0\decoded_imm_uj[31:0] [7]
     4/76: $0\decoded_imm_uj[31:0] [6]
     5/76: $0\decoded_imm_uj[31:0] [3:1]
     6/76: $0\decoded_imm_uj[31:0] [5]
     7/76: $0\decoded_imm_uj[31:0] [9:8]
     8/76: $0\decoded_imm_uj[31:0] [31:20]
     9/76: $0\decoded_imm_uj[31:0] [4]
    10/76: $0\decoded_imm_uj[31:0] [11]
    11/76: $0\decoded_imm_uj[31:0] [0]
    12/76: $0\decoded_rs1[5:0] [4:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[5:0]
    26/76: $0\decoded_imm_uj[31:0] [19:12]
    27/76: $0\decoded_rd[5:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2103'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2039'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2036'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2031'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1957'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
     1/12: $0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929
     2/12: $0$memwr$\mem$picosoc.v:234$1922_DATA[31:0]$1928
     3/12: $0$memwr$\mem$picosoc.v:234$1922_ADDR[21:0]$1927
     4/12: $0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932
     5/12: $0$memwr$\mem$picosoc.v:235$1923_DATA[31:0]$1931
     6/12: $0$memwr$\mem$picosoc.v:235$1923_ADDR[21:0]$1930
     7/12: $0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935
     8/12: $0$memwr$\mem$picosoc.v:236$1924_DATA[31:0]$1934
     9/12: $0$memwr$\mem$picosoc.v:236$1924_ADDR[21:0]$1933
    10/12: $0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938
    11/12: $0$memwr$\mem$picosoc.v:237$1925_DATA[31:0]$1937
    12/12: $0$memwr$\mem$picosoc.v:237$1925_ADDR[21:0]$1936
Creating decoders for process `\clock.$proc$clock.v:12$1118'.
Creating decoders for process `\clock.$proc$clock.v:10$1117'.
Creating decoders for process `\clock.$proc$clock.v:16$1113'.
     1/2: $0\counterI[31:0]
     2/2: $0\counterO[31:0]
Creating decoders for process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1195'.
Creating decoders for process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1162'.
Creating decoders for process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
     1/9: $0\pcpi_rd[31:0]
     2/9: $0\pcpi_wr[0:0]
     3/9: $0\pcpi_ready[0:0]
     4/9: $0\outsign[0:0]
     5/9: $0\running[0:0]
     6/9: $0\quotient_msk[31:0]
     7/9: $0\quotient[31:0]
     8/9: $0\divisor[62:0]
     9/9: $0\dividend[31:0]
Creating decoders for process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
     1/4: $0\instr_remu[0:0]
     2/4: $0\instr_rem[0:0]
     3/4: $0\instr_divu[0:0]
     4/4: $0\instr_div[0:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1000'.
     1/3: $0\pcpi_ready[0:0]
     2/3: $0\pcpi_wr[0:0]
     3/3: $0\pcpi_rd[31:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
     1/7: $0\mul_finish[0:0]
     2/7: $0\mul_waiting[0:0]
     3/7: $0\mul_counter[6:0]
     4/7: $0\rdx[63:0]
     5/7: $0\rd[63:0]
     6/7: $0\rs2[63:0]
     7/7: $0\rs1[63:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
     1/4: $0\instr_mulhu[0:0]
     2/4: $0\instr_mulhsu[0:0]
     3/4: $0\instr_mulh[0:0]
     4/4: $0\instr_mul[0:0]
Creating decoders for process `\picosoc_regs.$proc$picosoc.v:214$205'.
     1/3: $0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208
     2/3: $0$memwr$\regs$picosoc.v:215$204_DATA[31:0]$207
     3/3: $0$memwr$\regs$picosoc.v:215$204_ADDR[4:0]$206
Creating decoders for process `\simpleuart.$proc$simpleuart.v:109$150'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:66$141'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:55$139'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:535$119'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:447$95'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io3_oe[0:0]
    18/33: $2\flash_io2_do[0:0]
    19/33: $2\flash_io2_oe[0:0]
    20/33: $2\flash_io1_do[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io3_oe[0:0]
    28/33: $1\flash_io2_do[0:0]
    29/33: $1\flash_io2_oe[0:0]
    30/33: $1\flash_io1_do[0:0]
    31/33: $1\flash_io1_oe[0:0]
    32/33: $1\flash_io0_do[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:436$86'.
Creating decoders for process `\spimemio.$proc$spimemio.v:207$65'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:151$47'.
Creating decoders for process `\spimemio.$proc$spimemio.v:99$43'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\hardware.$proc$hardware.v:108$33'.
Creating decoders for process `\hardware.$proc$hardware.v:105$32'.
Creating decoders for process `\hardware.$proc$hardware.v:104$31'.
Creating decoders for process `\hardware.$proc$hardware.v:101$30'.
Creating decoders for process `\hardware.$proc$hardware.v:100$29'.
Creating decoders for process `\hardware.$proc$hardware.v:96$28'.
Creating decoders for process `\hardware.$proc$hardware.v:57$27'.
Creating decoders for process `\hardware.$proc$hardware.v:111$5'.
     1/20: $0\pinTest[31:0] [31:24]
     2/20: $0\pinTest[31:0] [23:16]
     3/20: $0\pinTest[31:0] [15:8]
     4/20: $0\pinTest[31:0] [7:0]
     5/20: $0\clockO[31:0] [23:16]
     6/20: $0\clockO[31:0] [15:8]
     7/20: $0\clockO[31:0] [7:0]
     8/20: $0\leds[31:0] [23:16]
     9/20: $0\leds[31:0] [15:8]
    10/20: $0\leds[31:0] [7:0]
    11/20: $0\gpio[31:0] [23:16]
    12/20: $0\gpio[31:0] [15:8]
    13/20: $0\gpio[31:0] [7:0]
    14/20: $0\writeEncoderR[0:0]
    15/20: $0\writeEncoderL[0:0]
    16/20: $0\gpio[31:0] [31:24]
    17/20: $0\clockO[31:0] [31:24]
    18/20: $0\leds[31:0] [31:24]
    19/20: $0\iomem_rdata[31:0]
    20/20: $0\iomem_ready[0:0]
Creating decoders for process `\hardware.$proc$hardware.v:60$2'.

9.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_rs1' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2428'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_rs2' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2428'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2428'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_write' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2411'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpuregs_wrdata' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2411'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\clear_prefetched_high_word' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2406'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2383'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_0' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2383'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_ascii_state' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2371'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_opcode' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_ascii_instr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_imm' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rs1' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rs2' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_rd' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\new_ascii_instr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2103'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_add_sub' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_shl' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_shr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_eq' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_ltu' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_lts' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_wdata' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2036'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_wstrb' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2036'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_rdata_word' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2036'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_wr' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1957'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_rd' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1957'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_wait' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1957'.
No latch inferred for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_int_ready' from process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1957'.
No latch inferred for signal `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.\irq' from process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1162'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs1' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\picorv32_pcpi_mul.\this_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rd' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdx' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdt' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\picorv32_pcpi_mul.\i' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\picorv32_pcpi_mul.\j' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$spimemio.v:447$95'.
No latch inferred for signal `\hardware.\encoderDataR' from process `\hardware.$proc$hardware.v:105$32'.
No latch inferred for signal `\hardware.\encoderDataL' from process `\hardware.$proc$hardware.v:104$31'.

9.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trap' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6610' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6611' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\eoi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6612' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trace_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6613' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\trace_data' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6614' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\count_cycle' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6615' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\count_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6616' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6617' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_next_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6618' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_op1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6619' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_op2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6620' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_out' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6621' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\reg_sh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6622' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_delay' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6623' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_active' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6624' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_mask' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6625' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_pending' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6626' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\timer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6627' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wordsize' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6628' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_prefetch' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6629' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_rinst' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6630' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_rdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6631' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_do_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6632' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_trigger' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6633' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_trigger_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6634' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_pseudo_trigger' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6635' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6636' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs1val' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6637' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs2val' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6638' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs1val_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6639' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_rs2val_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6640' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cpu_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6641' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\irq_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6642' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_rinst' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6643' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_rdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6644' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\set_mem_do_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6645' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_store' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6646' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_stalu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6647' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_branch' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6648' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_compr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6649' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_trace' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6650' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6651' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6652' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_is_lb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6653' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\latched_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6654' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\current_pc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6655' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_timeout_counter' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6656' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_timeout' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6657' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\next_irq_pending' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6658' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\do_waitirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6659' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6660' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_out_0_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6661' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_wait' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6662' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\alu_wait_2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
  created $dff cell `$procdff$6663' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\clear_prefetched_high_word_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2405'.
  created $dff cell `$procdff$6664' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\pcpi_insn' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6665' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lui' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6666' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_auipc' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6667' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_jal' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6668' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_jalr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6669' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_beq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6670' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bne' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6671' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_blt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6672' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bge' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6673' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6674' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_bgeu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6675' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6676' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6677' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6678' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lbu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6679' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_lhu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6680' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6681' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6682' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6683' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_addi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6684' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slti' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6685' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sltiu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6686' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_xori' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6687' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_ori' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6688' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_andi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6689' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slli' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6690' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srli' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6691' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srai' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6692' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_add' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6693' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sub' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6694' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sll' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6695' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_slt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6696' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6697' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_xor' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6698' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_srl' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6699' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_sra' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6700' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_or' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6701' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_and' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6702' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdcycle' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6703' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdcycleh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6704' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdinstr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6705' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_rdinstrh' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6706' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_ecall_ebreak' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6707' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_getq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6708' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_setq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6709' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_retirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6710' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_maskirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6711' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_waitirq' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6712' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\instr_timer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6713' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6714' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6715' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6716' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6717' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\decoded_imm_uj' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6718' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\compressed_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6719' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lui_auipc_jal' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6720' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6721' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_slli_srli_srai' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6722' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6723' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sb_sh_sw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6724' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sll_srl_sra' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6725' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6726' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_slti_blt_slt' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6727' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6728' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6729' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_lbu_lhu_lw' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6730' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_alu_reg_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6731' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_alu_reg_reg' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6732' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\is_compare' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
  created $dff cell `$procdff$6733' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_insn_addr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6734' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_ascii_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6735' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6736' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6737' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6738' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6739' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\q_insn_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6740' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_next' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6741' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\dbg_valid_insn' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6742' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_ascii_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6743' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_imm' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6744' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6745' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rs1' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6746' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rs2' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6747' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\cached_insn_rd' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
  created $dff cell `$procdff$6748' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6749' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_instr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6750' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_addr' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6751' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wdata' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6752' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_wstrb' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6753' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_state' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6754' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_secondword' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6755' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\prefetched_high_word' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6756' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_16bit_buffer' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
  created $dff cell `$procdff$6757' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\next_insn_opcode' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2039'.
  created $dff cell `$procdff$6758' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_rdata_q' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2039'.
  created $dff cell `$procdff$6759' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\mem_la_firstword_reg' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2031'.
  created $dff cell `$procdff$6760' with positive edge clock.
Creating register for signal `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.\last_mem_valid' using process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2031'.
  created $dff cell `$procdff$6761' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.\rdata' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6762' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1922_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6763' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1922_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6764' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:234$1922_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6765' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1923_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6766' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1923_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6767' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:235$1923_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6768' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1924_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6769' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1924_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6770' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:236$1924_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6771' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1925_ADDR' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6772' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1925_DATA' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6773' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=2048.$memwr$\mem$picosoc.v:237$1925_EN' using process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
  created $dff cell `$procdff$6774' with positive edge clock.
Creating register for signal `\clock.\counterI' using process `\clock.$proc$clock.v:16$1113'.
  created $dff cell `$procdff$6775' with positive edge clock.
Creating register for signal `\clock.\counterO' using process `\clock.$proc$clock.v:16$1113'.
  created $dff cell `$procdff$6776' with positive edge clock.
Creating register for signal `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.\ram_ready' using process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1195'.
  created $dff cell `$procdff$6777' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wr' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6778' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_rd' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6779' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_ready' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6780' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\dividend' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6781' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\divisor' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6782' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6783' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient_msk' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6784' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\running' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6785' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\outsign' using process `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
  created $dff cell `$procdff$6786' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
  created $dff cell `$procdff$6787' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait_q' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
  created $dff cell `$procdff$6788' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_div' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
  created $dff cell `$procdff$6789' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_divu' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
  created $dff cell `$procdff$6790' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_rem' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
  created $dff cell `$procdff$6791' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_remu' using process `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
  created $dff cell `$procdff$6792' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wr' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1000'.
  created $dff cell `$procdff$6793' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1000'.
  created $dff cell `$procdff$6794' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_ready' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1000'.
  created $dff cell `$procdff$6795' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs1' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
  created $dff cell `$procdff$6796' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs2' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
  created $dff cell `$procdff$6797' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
  created $dff cell `$procdff$6798' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rdx' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
  created $dff cell `$procdff$6799' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_counter' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
  created $dff cell `$procdff$6800' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_waiting' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
  created $dff cell `$procdff$6801' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_finish' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
  created $dff cell `$procdff$6802' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
  created $dff cell `$procdff$6803' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mul' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
  created $dff cell `$procdff$6804' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulh' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
  created $dff cell `$procdff$6805' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhsu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
  created $dff cell `$procdff$6806' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
  created $dff cell `$procdff$6807' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait_q' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
  created $dff cell `$procdff$6808' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$204_ADDR' using process `\picosoc_regs.$proc$picosoc.v:214$205'.
  created $dff cell `$procdff$6809' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$204_DATA' using process `\picosoc_regs.$proc$picosoc.v:214$205'.
  created $dff cell `$procdff$6810' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:215$204_EN' using process `\picosoc_regs.$proc$picosoc.v:214$205'.
  created $dff cell `$procdff$6811' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$simpleuart.v:109$150'.
  created $dff cell `$procdff$6812' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$simpleuart.v:109$150'.
  created $dff cell `$procdff$6813' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$simpleuart.v:109$150'.
  created $dff cell `$procdff$6814' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$simpleuart.v:109$150'.
  created $dff cell `$procdff$6815' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$simpleuart.v:66$141'.
  created $dff cell `$procdff$6816' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$simpleuart.v:66$141'.
  created $dff cell `$procdff$6817' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$simpleuart.v:66$141'.
  created $dff cell `$procdff$6818' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$simpleuart.v:66$141'.
  created $dff cell `$procdff$6819' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$simpleuart.v:66$141'.
  created $dff cell `$procdff$6820' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$simpleuart.v:55$139'.
  created $dff cell `$procdff$6821' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6822' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6823' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6824' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6825' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6826' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6827' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6828' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6829' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6830' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6831' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6832' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6833' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6834' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$119'.
  created $dff cell `$procdff$6835' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$spimemio.v:436$86'.
  created $dff cell `$procdff$6836' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$spimemio.v:436$86'.
  created $dff cell `$procdff$6837' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6838' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6839' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6840' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6841' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6842' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6843' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6844' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6845' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6846' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6847' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6848' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6849' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6850' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6851' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$spimemio.v:207$65'.
  created $dff cell `$procdff$6852' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$spimemio.v:151$47'.
  created $dff cell `$procdff$6853' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$spimemio.v:151$47'.
  created $dff cell `$procdff$6854' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$spimemio.v:151$47'.
  created $dff cell `$procdff$6855' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$spimemio.v:151$47'.
  created $dff cell `$procdff$6856' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6857' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6858' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6859' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6860' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6861' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6862' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6863' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6864' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6865' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$spimemio.v:99$43'.
  created $dff cell `$procdff$6866' with positive edge clock.
Creating register for signal `\hardware.\iomem_ready' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6867' with positive edge clock.
Creating register for signal `\hardware.\iomem_rdata' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6868' with positive edge clock.
Creating register for signal `\hardware.\clockO' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6869' with positive edge clock.
Creating register for signal `\hardware.\gpio' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6870' with positive edge clock.
Creating register for signal `\hardware.\leds' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6871' with positive edge clock.
Creating register for signal `\hardware.\writeEncoderL' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6872' with positive edge clock.
Creating register for signal `\hardware.\writeEncoderR' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6873' with positive edge clock.
Creating register for signal `\hardware.\pinTest' using process `\hardware.$proc$hardware.v:111$5'.
  created $dff cell `$procdff$6874' with positive edge clock.
Creating register for signal `\hardware.\reset_cnt' using process `\hardware.$proc$hardware.v:60$2'.
  created $dff cell `$procdff$6875' with positive edge clock.

9.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 60 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1374$2442'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1359$2428'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2411'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1287$2411'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2406'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1273$2406'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1271$2405'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2383'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1227$2383'.
Found and cleaned up 8 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2371'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1164$2371'.
Found and cleaned up 22 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:839$2110'.
Found and cleaned up 3 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:790$2108'.
Found and cleaned up 5 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:759$2104'.
Found and cleaned up 47 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2103'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:683$2103'.
Found and cleaned up 16 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:548$2079'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:1217$2628'.
Found and cleaned up 19 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2039'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:413$2039'.
Found and cleaned up 3 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2036'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:384$2036'.
Found and cleaned up 2 empty switches in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2031'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:373$2031'.
Found and cleaned up 1 empty switch in `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1957'.
Removing empty process `$paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.$proc$picorv32.v:308$1957'.
Found and cleaned up 4 empty switches in `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
Removing empty process `$paramod\picosoc_mem\WORDS=2048.$proc$picosoc.v:232$1926'.
Removing empty process `clock.$proc$clock.v:12$1118'.
Removing empty process `clock.$proc$clock.v:10$1117'.
Found and cleaned up 1 empty switch in `\clock.$proc$clock.v:16$1113'.
Removing empty process `clock.$proc$clock.v:16$1113'.
Removing empty process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:188$1195'.
Removing empty process `$paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.$proc$picosoc.v:71$1162'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
Removing empty process `picorv32_pcpi_div.$proc$picorv32.v:2392$1051'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
Removing empty process `picorv32_pcpi_div.$proc$picorv32.v:2366$1041'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2235$1000'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2235$1000'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2201$995'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2177$957'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2149$951'.
Found and cleaned up 1 empty switch in `\picosoc_regs.$proc$picosoc.v:214$205'.
Removing empty process `picosoc_regs.$proc$picosoc.v:214$205'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:109$150'.
Removing empty process `simpleuart.$proc$simpleuart.v:109$150'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$simpleuart.v:66$141'.
Removing empty process `simpleuart.$proc$simpleuart.v:66$141'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:55$139'.
Removing empty process `simpleuart.$proc$simpleuart.v:55$139'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$spimemio.v:535$119'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:535$119'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$spimemio.v:447$95'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:447$95'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:436$86'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$spimemio.v:207$65'.
Removing empty process `spimemio.$proc$spimemio.v:207$65'.
Removing empty process `spimemio.$proc$spimemio.v:151$47'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$spimemio.v:99$43'.
Removing empty process `spimemio.$proc$spimemio.v:99$43'.
Removing empty process `hardware.$proc$hardware.v:108$33'.
Removing empty process `hardware.$proc$hardware.v:105$32'.
Removing empty process `hardware.$proc$hardware.v:104$31'.
Removing empty process `hardware.$proc$hardware.v:101$30'.
Removing empty process `hardware.$proc$hardware.v:100$29'.
Removing empty process `hardware.$proc$hardware.v:96$28'.
Removing empty process `hardware.$proc$hardware.v:57$27'.
Found and cleaned up 22 empty switches in `\hardware.$proc$hardware.v:111$5'.
Removing empty process `hardware.$proc$hardware.v:111$5'.
Removing empty process `hardware.$proc$hardware.v:60$2'.
Cleaned up 291 empty switches.

9.4. Executing FLATTEN pass (flatten design).
Using template clock for cells of type clock.
Using template $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696 for cells of type $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.
Using template $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32 for cells of type $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Using template $paramod\picosoc_mem\WORDS=2048 for cells of type $paramod\picosoc_mem\WORDS=2048.
Using template simpleuart for cells of type simpleuart.
Using template spimemio for cells of type spimemio.
Using template picorv32_pcpi_div for cells of type picorv32_pcpi_div.
Using template picorv32_pcpi_mul for cells of type picorv32_pcpi_mul.
Using template picosoc_regs for cells of type picosoc_regs.
Using template spimemio_xfer for cells of type spimemio_xfer.
<suppressed ~10 debug messages>
No more expansions possible.
Deleting now unused module $paramod$6218042664eeb68c956f5c2d1fb64449de62419b\picorv32.
Deleting now unused module $paramod\picosoc_mem\WORDS=2048.
Deleting now unused module clock.
Deleting now unused module $paramod\picosoc\MEM_WORDS=2048\PROGADDR_RESET=327680\PROGADDR_IRQ=327696.
Deleting now unused module picorv32_pcpi_div.
Deleting now unused module picorv32_pcpi_mul.
Deleting now unused module picosoc_regs.
Deleting now unused module simpleuart.
Deleting now unused module spimemio_xfer.
Deleting now unused module spimemio.

9.5. Executing TRIBUF pass.

9.6. Executing DEMINOUT pass (demote inout ports to input or output).

9.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~697 debug messages>

9.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 308 unused cells and 2268 unused wires.
<suppressed ~377 debug messages>

9.9. Executing CHECK pass (checking for obvious problems).
checking module hardware..
found and reported 0 problems.

9.10. Executing OPT pass (performing simple optimizations).

9.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~1671 debug messages>
Removed a total of 557 cells.

9.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\soc.cpu.$procmux$4601: { \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [6:2] } -> { 1'0 \soc.cpu.mem_rdata_latched [6:2] }
      Replacing known input bits on port A of cell $techmap\soc.cpu.pcpi_mul.$procmux$5620: \soc.cpu.pcpi_mul.mul_waiting -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2643.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2653.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2655.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2661.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2668.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2670.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2676.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2692.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2698.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2701.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2714.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2721.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2724.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2737.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2749.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2752.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2761.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2764.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2772.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2774.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2777.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2791.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2793.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2795.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2798.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2811.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2813.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2816.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2828.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2831.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2838.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2840.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2843.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2866.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2868.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2870.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2873.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2895.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2897.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2900.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2919.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2921.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2924.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2943.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2945.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2948.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2969.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2972.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2986.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2989.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2991.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2993.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2996.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3006.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3011.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3014.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3037.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3040.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3042.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3044.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3047.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3059.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3062.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3105.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3118.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3131.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3171.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$3414.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$3689.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3704.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$3708.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$3892.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3904.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$3908.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$4093.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4284.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4293.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5430.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5437.
    dead port 3/4 on $pmux $techmap\soc.cpu.$procmux$5463.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5914.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5916.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5916.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5916.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5920.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5927.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5929.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5929.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5929.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5933.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5953.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5955.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5964.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5966.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5988.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5990.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6000.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6002.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6012.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6022.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6032.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6042.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6052.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6062.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6070.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6078.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6086.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6094.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6104.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$6114.
Removed 110 multiplexer ports.
<suppressed ~305 debug messages>

9.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:491$104: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$97: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2143$947: { \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2142$946: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$picorv32.v:2141$945: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh \soc.cpu.pcpi_mul.instr_mul }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$picorv32.v:2404$1066: { \soc.cpu.reg_op2 [0] \soc.cpu.reg_op2 [1] \soc.cpu.reg_op2 [2] \soc.cpu.reg_op2 [3] \soc.cpu.reg_op2 [4] \soc.cpu.reg_op2 [5] \soc.cpu.reg_op2 [6] \soc.cpu.reg_op2 [7] \soc.cpu.reg_op2 [8] \soc.cpu.reg_op2 [9] \soc.cpu.reg_op2 [10] \soc.cpu.reg_op2 [11] \soc.cpu.reg_op2 [12] \soc.cpu.reg_op2 [13] \soc.cpu.reg_op2 [14] \soc.cpu.reg_op2 [15] \soc.cpu.reg_op2 [16] \soc.cpu.reg_op2 [17] \soc.cpu.reg_op2 [18] \soc.cpu.reg_op2 [19] \soc.cpu.reg_op2 [20] \soc.cpu.reg_op2 [21] \soc.cpu.reg_op2 [22] \soc.cpu.reg_op2 [23] \soc.cpu.reg_op2 [24] \soc.cpu.reg_op2 [25] \soc.cpu.reg_op2 [26] \soc.cpu.reg_op2 [27] \soc.cpu.reg_op2 [28] \soc.cpu.reg_op2 [29] \soc.cpu.reg_op2 [30] \soc.cpu.reg_op2 [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$picorv32.v:2361$1038: { \soc.cpu.pcpi_div.instr_remu \soc.cpu.pcpi_div.instr_rem \soc.cpu.pcpi_div.instr_divu \soc.cpu.pcpi_div.instr_div }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:887$2148: { \soc.cpu.mem_rdata_latched [5] \soc.cpu.mem_rdata_latched [6] \soc.cpu.mem_rdata_latched [7] \soc.cpu.mem_rdata_latched [8] \soc.cpu.mem_rdata_latched [9] \soc.cpu.mem_rdata_latched [10] \soc.cpu.mem_rdata_latched [11] \soc.cpu.mem_rdata_latched [12] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:845$2116: { \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu \soc.cpu.instr_sltu \soc.cpu.instr_slt \soc.cpu.instr_sltiu \soc.cpu.instr_slti }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:844$2115: { \soc.cpu.instr_lhu \soc.cpu.instr_lbu \soc.cpu.instr_lw }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:843$2114: { \soc.cpu.instr_sltu \soc.cpu.instr_sltiu \soc.cpu.instr_bltu }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:842$2113: { \soc.cpu.instr_slt \soc.cpu.instr_slti \soc.cpu.instr_blt }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:841$2112: { \soc.cpu.instr_sub \soc.cpu.instr_add \soc.cpu.instr_addi \soc.cpu.instr_jalr \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:840$2111: { \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:670$2102: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:359$1986: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:312$1965: { \soc.cpu.pcpi_div.pcpi_ready \soc.cpu.pcpi_mul.pcpi_ready }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:311$1961: { \soc.cpu.pcpi_div.pcpi_wait \soc.cpu.pcpi_mul.pcpi_wait }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1516$2490: { $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [0] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [1] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [2] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [3] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [4] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [5] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [6] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [7] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [8] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [9] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [10] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [11] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [12] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [13] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [14] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [15] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [16] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [17] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [18] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [19] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [20] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [21] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [22] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [23] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [24] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [25] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [26] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [27] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [28] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [29] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [30] $techmap\soc.cpu.$and$picorv32.v:1307$2422_Y [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1105$2369: { \soc.cpu.is_alu_reg_imm \soc.cpu.is_lb_lh_lw_lbu_lhu \soc.cpu.instr_jalr }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1103$2367: { \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$picorv32.v:1088$2353: { $techmap\soc.cpu.$eq$picorv32.v:1040$2223_Y $techmap\soc.cpu.$eq$picorv32.v:1030$2207_Y $techmap\soc.cpu.$eq$picorv32.v:1026$2201_Y $techmap\soc.cpu.$eq$picorv32.v:1025$2199_Y $techmap\soc.cpu.$eq$picorv32.v:1023$2195_Y $techmap\soc.cpu.$eq$picorv32.v:1021$2191_Y }
    New input vector for $reduce_or cell $techmap\soc.cpu.$procmux$3415_ANY: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:593$2095: { \soc.cpu.mem_rdata [0] \soc.cpu.mem_rdata [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:360$1996: { \soc.cpu.mem_rdata_latched [0] \soc.cpu.mem_rdata_latched [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$picorv32.v:359$1991: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New input vector for $reduce_and cell $reduce_and$hardware.v:58$1: { \reset_cnt [0] \reset_cnt [1] \reset_cnt [2] \reset_cnt [3] \reset_cnt [4] \reset_cnt [5] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2704: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2687_CMP $auto$opt_reduce.cc:132:opt_mux$6877 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2727: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $auto$opt_reduce.cc:132:opt_mux$6879 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3095: { $techmap\soc.cpu.$procmux$2684_CMP $auto$opt_reduce.cc:132:opt_mux$6881 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3108: { $auto$opt_reduce.cc:132:opt_mux$6883 $techmap\soc.cpu.$procmux$2683_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3121: { $techmap\soc.cpu.$procmux$2686_CMP $auto$opt_reduce.cc:132:opt_mux$6885 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3371: { \soc.cpu.instr_trap \soc.cpu.is_rdcycle_rdcycleh_rdinstr_rdinstrh $auto$opt_reduce.cc:132:opt_mux$6887 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3414: $auto$opt_reduce.cc:132:opt_mux$6889
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3598: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2686_CMP $auto$opt_reduce.cc:132:opt_mux$6891 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3621: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$6893 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3708: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$6897 $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y $auto$opt_reduce.cc:132:opt_mux$6895 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3882: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2685_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3908: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$6901 $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y $auto$opt_reduce.cc:132:opt_mux$6899 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4093: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$6903 $techmap\soc.cpu.$procmux$3415_CTRL }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4143: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$6905 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4279: $auto$opt_reduce.cc:132:opt_mux$6907
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4363: { $techmap\soc.cpu.$procmux$4372_CMP $auto$opt_reduce.cc:132:opt_mux$6909 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4378: $auto$opt_reduce.cc:132:opt_mux$6911
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4446: { $techmap\soc.cpu.$procmux$4443_CMP $techmap\soc.cpu.$procmux$4461_CMP $techmap\soc.cpu.$procmux$4372_CMP $auto$opt_reduce.cc:132:opt_mux$6913 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4464: { $techmap\soc.cpu.$procmux$4443_CMP $auto$opt_reduce.cc:132:opt_mux$6915 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4512: { $auto$opt_reduce.cc:132:opt_mux$6917 $techmap\soc.cpu.$procmux$4461_CMP $techmap\soc.cpu.$procmux$4372_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4533: $auto$opt_reduce.cc:132:opt_mux$6919
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4654: { $techmap\soc.cpu.$procmux$4662_CMP $auto$opt_reduce.cc:132:opt_mux$6921 $techmap\soc.cpu.$procmux$4461_CMP $techmap\soc.cpu.$procmux$4372_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4666: $auto$opt_reduce.cc:132:opt_mux$6923
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4822: $auto$opt_reduce.cc:132:opt_mux$6925
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5209: { $techmap\soc.cpu.$procmux$4372_CMP $auto$opt_reduce.cc:132:opt_mux$6927 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5224: { $techmap\soc.cpu.$procmux$4372_CMP $auto$opt_reduce.cc:132:opt_mux$6929 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5242: $auto$opt_reduce.cc:132:opt_mux$6931
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5255: $auto$opt_reduce.cc:132:opt_mux$6933
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5280: { $auto$opt_reduce.cc:132:opt_mux$6935 $techmap\soc.cpu.$procmux$4461_CMP $techmap\soc.cpu.$procmux$4372_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5315: { $techmap\soc.cpu.$procmux$4443_CMP $techmap\soc.cpu.$procmux$4372_CMP $auto$opt_reduce.cc:132:opt_mux$6937 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5330: { $techmap\soc.cpu.$procmux$4461_CMP $techmap\soc.cpu.$procmux$4372_CMP $auto$opt_reduce.cc:132:opt_mux$6939 $techmap\soc.cpu.$procmux$4364_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5357: { $techmap\soc.cpu.$procmux$4443_CMP $auto$opt_reduce.cc:132:opt_mux$6941 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5370: $auto$opt_reduce.cc:132:opt_mux$6943
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5396: { $auto$opt_reduce.cc:132:opt_mux$6947 $techmap\soc.cpu.$procmux$4461_CMP $techmap\soc.cpu.$procmux$4372_CMP $auto$opt_reduce.cc:132:opt_mux$6945 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5415: { $techmap\soc.cpu.$procmux$4443_CMP $auto$opt_reduce.cc:132:opt_mux$6949 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.cpuregs.$procmux$5686:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0]
      New connections: $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [31:1] = { $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:215$204_EN[31:0]$208 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5471:
      Old ports: A=0, B=255, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0]
      New connections: $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [31:1] = { 24'000000000000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5477:
      Old ports: A=0, B=65280, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [31:9] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [7:0] } = { 16'0000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5483:
      Old ports: A=0, B=16711680, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [31:17] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [15:0] } = { 8'00000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$5489:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [31:25] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [23:0] } = { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_EN[31:0]$1938 [24] 24'000000000000000000000000 }
    New ctrl vector for $pmux cell $techmap\soc.simpleuart.$procmux$5766: $auto$opt_reduce.cc:132:opt_mux$6951
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6373: { $techmap\soc.spimemio.$procmux$6216_CMP $auto$opt_reduce.cc:132:opt_mux$6953 $techmap\soc.spimemio.$procmux$6202_CMP $techmap\soc.spimemio.$procmux$6199_CMP $techmap\soc.spimemio.$procmux$6196_CMP $techmap\soc.spimemio.$procmux$6193_CMP }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5903: $auto$opt_reduce.cc:132:opt_mux$6955
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6048: { $techmap\soc.spimemio.xfer.$procmux$5906_CMP $auto$opt_reduce.cc:132:opt_mux$6957 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6058: { $techmap\soc.spimemio.xfer.$procmux$5906_CMP $auto$opt_reduce.cc:132:opt_mux$6959 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6067: $auto$opt_reduce.cc:132:opt_mux$6961
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6075: $auto$opt_reduce.cc:132:opt_mux$6963
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6083: $auto$opt_reduce.cc:132:opt_mux$6965
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6091: $auto$opt_reduce.cc:132:opt_mux$6967
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2682: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $auto$opt_reduce.cc:132:opt_mux$6969 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6100: { $techmap\soc.spimemio.xfer.$procmux$5906_CMP $auto$opt_reduce.cc:132:opt_mux$6971 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$6110: { $techmap\soc.spimemio.xfer.$procmux$5906_CMP $auto$opt_reduce.cc:132:opt_mux$6973 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6880: { $techmap\soc.cpu.$procmux$2690_CMP $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2686_CMP $techmap\soc.cpu.$procmux$2685_CMP $techmap\soc.cpu.$procmux$2683_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6882: { $techmap\soc.cpu.$procmux$2690_CMP $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2686_CMP $techmap\soc.cpu.$procmux$2685_CMP $techmap\soc.cpu.$procmux$2684_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6884: { $techmap\soc.cpu.$procmux$2690_CMP $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2685_CMP $techmap\soc.cpu.$procmux$2684_CMP $techmap\soc.cpu.$procmux$2683_CMP $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6886: { \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6888: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6892: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6894: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6896: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6898: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6900: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6902: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6904: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6906: { $techmap\soc.cpu.$logic_and$picorv32.v:1298$2416_Y \soc.cpu.latched_branch \soc.cpu.irq_state [0] \soc.cpu.irq_state [1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6924: { $techmap\soc.cpu.$procmux$4823_CMP $techmap\soc.cpu.$procmux$4662_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6928: { $techmap\soc.cpu.$procmux$4461_CMP $techmap\soc.cpu.$procmux$4443_CMP $techmap\soc.cpu.$procmux$4380_CMP $techmap\soc.cpu.$procmux$4365_CMP $techmap\soc.cpu.$procmux$4364_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6888: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6892: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6896: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6900: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6902: { $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6904: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_setq \soc.cpu.instr_getq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
  Optimizing cells in module \hardware.
Performed a total of 100 changes.

9.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~234 debug messages>
Removed a total of 78 cells.

9.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \clockO = 0 to constant driver in module hardware.
Promoting init spec \writeEncoderL = 1'0 to constant driver in module hardware.
Promoting init spec \writeEncoderR = 1'0 to constant driver in module hardware.
Promoted 3 init specs to constant drivers.

9.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 729 unused wires.
<suppressed ~1 debug messages>

9.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.9. Rerunning OPT passes. (Maybe there is more to do..)

9.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $techmap\soc.cpu.$procmux$5468: { \soc.cpu.pcpi_mul.pcpi_wr \soc.cpu.pcpi_div.pcpi_wr } -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~312 debug messages>

9.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2704: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $auto$opt_reduce.cc:132:opt_mux$6975 $auto$opt_reduce.cc:132:opt_mux$6877 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3222: $auto$opt_reduce.cc:132:opt_mux$6977
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3239: { $techmap\soc.cpu.$procmux$2686_CMP $auto$opt_reduce.cc:132:opt_mux$6979 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3667: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2686_CMP $techmap\soc.cpu.$procmux$2685_CMP $auto$opt_reduce.cc:132:opt_mux$6981 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4252: $auto$opt_reduce.cc:132:opt_mux$6983
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4548: $auto$opt_reduce.cc:132:opt_mux$6985
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5253: { $techmap\soc.cpu.$procmux$4377_CMP $auto$opt_reduce.cc:132:opt_mux$6987 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5468: $auto$opt_reduce.cc:132:opt_mux$6989
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6178: $auto$opt_reduce.cc:132:opt_mux$6991
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6280: { $techmap\soc.spimemio.$procmux$6216_CMP $auto$opt_reduce.cc:132:opt_mux$6993 $techmap\soc.spimemio.$procmux$6193_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6984: { $techmap\soc.cpu.$procmux$4445_CMP $techmap\soc.cpu.$procmux$4381_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6986: { $techmap\soc.cpu.$procmux$4445_CMP $techmap\soc.cpu.$procmux$4381_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6988: { \soc.cpu.pcpi_div.pcpi_wr \soc.cpu.pcpi_mul.pcpi_wr }
  Optimizing cells in module \hardware.
Performed a total of 13 changes.

9.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

9.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

9.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.16. Rerunning OPT passes. (Maybe there is more to do..)

9.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~312 debug messages>

9.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.23. Rerunning OPT passes. (Maybe there is more to do..)

9.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5468.
Removed 1 multiplexer ports.
<suppressed ~312 debug messages>

9.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.30. Rerunning OPT passes. (Maybe there is more to do..)

9.10.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~312 debug messages>

9.10.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.10.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.10.34. Executing OPT_RMDFF pass (remove dff with constant values).

9.10.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.10.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.10.37. Finished OPT passes. (There is nothing left to do.)

9.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 11 address bits (of 22) from memory read port hardware.$techmap\soc.memory.$memrd$\mem$picosoc.v:233$1939 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1940 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1941 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1942 (soc.memory.mem).
Removed top 11 address bits (of 22) from memory write port hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1943 (soc.memory.mem).
Removed top 5 bits (of 6) from port B of cell hardware.$add$hardware.v:61$4 ($add).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:122$9 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:131$13 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:141$17 ($eq).
Removed top 6 bits (of 24) from port B of cell hardware.$eq$hardware.v:150$21 ($eq).
Removed top 5 bits (of 8) from port B of cell hardware.$eq$hardware.v:161$25 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\clock.$add$clock.v:21$1116 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\clock.$add$clock.v:17$1114 ($add).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\clock.$eq$clock.v:18$1115 ($eq).
Removed top 18 bits (of 32) from port B of cell hardware.$techmap\soc.$lt$picosoc.v:189$1198 ($lt).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$lt$picosoc.v:142$1188 ($lt).
Removed top 18 bits (of 32) from port B of cell hardware.$techmap\soc.$ge$picosoc.v:142$1186 ($ge).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:105$1169 ($eq).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:102$1167 ($eq).
Removed top 6 bits (of 32) from port B of cell hardware.$techmap\soc.$eq$picosoc.v:99$1165 ($eq).
Removed top 7 bits (of 8) from port B of cell hardware.$techmap\soc.$gt$picosoc.v:94$1163 ($gt).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$procmux$5434 ($pmux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$5428_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$procmux$5425 ($pmux).
Removed top 2 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$5409 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$5094_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4662_CMP0 ($eq).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4658 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4640 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4637 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4629 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4601 ($mux).
Removed top 1 bits (of 6) from mux cell hardware.$techmap\soc.cpu.$procmux$4596 ($mux).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4461_CMP0 ($eq).
Removed top 3 bits (of 5) from mux cell hardware.$techmap\soc.cpu.$procmux$4438 ($mux).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$procmux$4380_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$procmux$4377_CMP0 ($eq).
Removed cell hardware.$techmap\soc.cpu.$procmux$4296 ($mux).
Removed top 4 bits (of 8) from mux cell hardware.$techmap\soc.cpu.$procmux$3704 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3427 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3414 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3408 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3395 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3392 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3390 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3364 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3362 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3354 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3349 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3347 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3079 ($mux).
Removed cell hardware.$techmap\soc.cpu.$procmux$3076 ($mux).
Removed top 2 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2688_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2687_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2686_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2685_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2684_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$procmux$2683_CMP0 ($eq).
Removed top 1 bits (of 33) from port Y of cell hardware.$techmap\soc.cpu.$sshr$picorv32.v:1223$2638 ($sshr).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1901$2605 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2580 ($sub).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2580 ($sub).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2573 ($sub).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2573 ($sub).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$ge$picorv32.v:1813$2565 ($ge).
Removed top 26 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2525 ($or).
Removed top 26 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2525 ($or).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$add$picorv32.v:1542$2507 ($add).
Removed top 29 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:1530$2503 ($mux).
Removed top 26 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2498 ($or).
Removed top 26 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2498 ($or).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1519$2495 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1415$2455 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$add$picorv32.v:1405$2449 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2447 ($sub).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2447 ($sub).
Removed top 29 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:1295$2413 ($mux).
Removed top 1 bits (of 8) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1291$2412 ($eq).
Removed top 4 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1073$2332 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1072$2328 ($eq).
Removed top 6 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1071$2323 ($eq).
Removed top 3 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1070$2317 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1047$2241 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1040$2223 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1030$2207 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:1022$2193 ($eq).
Removed top 28 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$add$picorv32.v:893$2150 ($add).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$add$picorv32.v:893$2150 ($add).
Removed top 28 bits (of 32) from port A of cell hardware.$techmap\soc.cpu.$add$picorv32.v:889$2149 ($add).
Removed top 27 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.$add$picorv32.v:889$2149 ($add).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:859$2136 ($eq).
Removed top 2 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:858$2135 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:857$2134 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:856$2133 ($eq).
Removed top 4 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:853$2129 ($eq).
Removed top 5 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:852$2125 ($eq).
Removed top 3 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:852$2124 ($eq).
Removed top 2 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:849$2119 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:848$2118 ($eq).
Removed top 30 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:600$2099 ($mux).
Removed top 1 bits (of 7) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:474$2055 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:471$2051 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:469$2049 ($eq).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:461$2047 ($eq).
Removed top 3 bits (of 5) from port B of cell hardware.$techmap\soc.cpu.$eq$picorv32.v:448$2045 ($eq).
Removed top 3 bits (of 4) from port A of cell hardware.$techmap\soc.cpu.$shl$picorv32.v:402$2038 ($shl).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:371$2030 ($mux).
Removed top 16 bits (of 32) from mux cell hardware.$techmap\soc.cpu.$ternary$picorv32.v:371$2028 ($mux).
Removed top 7 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6774 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6772 ($dff).
Removed top 8 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6771 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6769 ($dff).
Removed top 16 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6768 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6766 ($dff).
Removed top 24 bits (of 32) from FF cell hardware.$techmap\soc.memory.$procdff$6765 ($dff).
Removed top 11 bits (of 22) from FF cell hardware.$techmap\soc.memory.$procdff$6763 ($dff).
Removed cell hardware.$techmap\soc.memory.$procmux$5493 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5491 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5487 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5485 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5481 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5479 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5475 ($mux).
Removed cell hardware.$techmap\soc.memory.$procmux$5473 ($mux).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.simpleuart.$procmux$5740_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$160 ($sub).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$160 ($sub).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:112$152 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$149 ($add).
Removed top 28 bits (of 32) from port Y of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$149 ($add).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.simpleuart.$add$simpleuart.v:74$143 ($add).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6407_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell hardware.$techmap\soc.spimemio.$procmux$6233 ($mux).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6225_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6219_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6216_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6211_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6208_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6182_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$procmux$6179_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:316$83 ($mux).
Removed top 31 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:310$82 ($mux).
Removed top 8 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.$ternary$spimemio.v:226$78 ($mux).
Removed top 29 bits (of 32) from port B of cell hardware.$techmap\soc.spimemio.$add$spimemio.v:226$76 ($add).
Removed top 7 bits (of 32) from port Y of cell hardware.$techmap\soc.spimemio.$add$spimemio.v:226$76 ($add).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:224$74 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:223$72 ($eq).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:222$70 ($eq).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.$eq$spimemio.v:221$68 ($eq).
Removed top 7 bits (of 32) from port B of cell hardware.$techmap\soc.spimemio.$ne$spimemio.v:72$40 ($ne).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5509 ($mux).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5506 ($mux).
Removed cell hardware.$techmap\soc.cpu.pcpi_div.$procmux$5503 ($mux).
Removed top 31 bits (of 63) from port Y of cell hardware.$techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1078 ($sub).
Removed top 31 bits (of 63) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1078 ($sub).
Removed top 31 bits (of 63) from mux cell hardware.$techmap\soc.cpu.pcpi_div.$ternary$picorv32.v:2403$1062 ($mux).
Removed top 31 bits (of 63) from port A of cell hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1060 ($neg).
Removed top 31 bits (of 63) from port Y of cell hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1060 ($neg).
Removed top 6 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$eq$picorv32.v:2372$1047 ($eq).
Removed top 1 bits (of 7) from port B of cell hardware.$techmap\soc.cpu.pcpi_div.$eq$picorv32.v:2372$1045 ($eq).
Removed top 2 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5676_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5670_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5665_CMP0 ($eq).
Removed top 3 bits (of 64) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5635 ($mux).
Removed top 32 bits (of 64) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2241$1003 ($mux).
Removed top 31 bits (of 32) from port B of cell hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$999 ($sub).
Removed top 25 bits (of 32) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$999 ($sub).
Removed top 26 bits (of 32) from mux cell hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$997 ($mux).
Removed top 1 bits (of 5) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991 ($add).
Removed top 1 bits (of 5) from port A of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991 ($add).
Removed top 1 bits (of 5) from port Y of cell hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$990 ($add).
Removed top 31 bits (of 32) from FF cell hardware.$techmap\soc.cpu.cpuregs.$procdff$6811 ($dff).
Removed cell hardware.$techmap\soc.cpu.cpuregs.$procmux$5690 ($mux).
Removed cell hardware.$techmap\soc.cpu.cpuregs.$procmux$5688 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5978 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5976 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5944 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5942 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5907 ($mux).
Removed top 1 bits (of 2) from port B of cell hardware.$techmap\soc.spimemio.xfer.$procmux$5905_CMP0 ($eq).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5903 ($mux).
Removed cell hardware.$techmap\soc.spimemio.xfer.$procmux$5901 ($mux).
Removed top 28 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$134 ($mux).
Removed top 31 bits (of 32) from mux cell hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$122 ($mux).
Removed top 2 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$117 ($sub).
Removed top 1 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$105 ($sub).
Removed top 3 bits (of 4) from port B of cell hardware.$techmap\soc.spimemio.xfer.$sub$spimemio.v:471$98 ($sub).
Removed top 7 bits (of 24) from FF cell hardware.$techmap\soc.memory.$procdff$6771 ($dff).
Removed top 7 bits (of 16) from FF cell hardware.$techmap\soc.memory.$procdff$6768 ($dff).
Removed top 7 bits (of 8) from FF cell hardware.$techmap\soc.memory.$procdff$6765 ($dff).
Removed top 5 bits (of 6) from wire hardware.$logic_not$hardware.v:61$3_Y.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.cpu.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.cpu.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$add$picorv32.v:889$2149_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$add$picorv32.v:893$2150_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.$or$picorv32.v:1522$2498_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.$or$picorv32.v:1641$2525_Y.
Removed top 4 bits (of 8) from wire hardware.$techmap\soc.cpu.$procmux$3704_Y.
Removed top 3 bits (of 5) from wire hardware.$techmap\soc.cpu.$procmux$4438_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4596_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4601_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4629_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4637_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4640_Y.
Removed top 1 bits (of 6) from wire hardware.$techmap\soc.cpu.$procmux$4658_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1398$2447_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1820$2573_Y.
Removed top 27 bits (of 32) from wire hardware.$techmap\soc.cpu.$sub$picorv32.v:1828$2580_Y.
Removed top 29 bits (of 32) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:1295$2413_Y.
Removed top 29 bits (of 32) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:1530$2503_Y.
Removed top 1 bits (of 7) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:474$2055_Y.
Removed top 30 bits (of 32) from wire hardware.$techmap\soc.cpu.$ternary$picorv32.v:600$2099_Y.
Removed top 31 bits (of 63) from wire hardware.$techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1060_Y.
Removed top 1 bits (of 5) from wire hardware.$techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$990_Y.
Removed top 3 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$procmux$5635_Y.
Removed top 25 bits (of 32) from wire hardware.$techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$999_Y.
Removed top 26 bits (of 32) from wire hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$997_Y.
Removed top 32 bits (of 64) from wire hardware.$techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2241$1003_Y.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_ADDR[21:0]$1927.
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_DATA[31:0]$1928.
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:234$1922_EN[31:0]$1929.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_ADDR[21:0]$1930.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_DATA[31:0]$1931.
Removed top 16 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:235$1923_EN[31:0]$1932.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_ADDR[21:0]$1933.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_DATA[31:0]$1934.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:236$1924_EN[31:0]$1935.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:237$1925_ADDR[21:0]$1936.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1922_ADDR.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1922_DATA.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1923_ADDR.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1923_DATA.
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1923_EN.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1924_ADDR.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1924_DATA.
Removed top 24 bits (of 32) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1924_EN.
Removed top 11 bits (of 22) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1925_ADDR.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1925_DATA.
Removed top 8 bits (of 32) from wire hardware.$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1925_EN.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.simpleuart.$add$simpleuart.v:99$149_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.simpleuart.$sub$simpleuart.v:132$160_Y.
Removed top 7 bits (of 32) from wire hardware.$techmap\soc.spimemio.$add$spimemio.v:226$76_Y.
Removed top 3 bits (of 4) from wire hardware.$techmap\soc.spimemio.$procmux$6233_Y.
Removed top 13 bits (of 32) from wire hardware.$techmap\soc.spimemio.$ternary$spimemio.v:226$78_Y.
Removed top 31 bits (of 32) from wire hardware.$techmap\soc.spimemio.$ternary$spimemio.v:310$82_Y.
Removed top 1 bits (of 8) from wire hardware.$techmap\soc.spimemio.$ternary$spimemio.v:316$83_Y.
Removed top 3 bits (of 4) from wire hardware.$techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$97_Y.
Removed top 31 bits (of 32) from wire hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$122_Y.
Removed top 28 bits (of 32) from wire hardware.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$134_Y.
Removed top 4 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rdt.
Removed top 3 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rdx.
Removed top 1 bits (of 64) from wire hardware.soc.cpu.pcpi_mul.next_rs1.
Removed top 11 bits (of 32) from wire hardware.soc.spimemio.cfgreg_do.
Removed top 11 bits (of 32) from wire hardware.soc.spimemio_cfgreg_do.

9.12. Executing PEEPOPT pass (run peephole optimizers).

9.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 2 unused cells and 102 unused wires.
<suppressed ~3 debug messages>

9.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module hardware that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$210 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$6903 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2431_Y $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$3415_CTRL \resetn }.
    Found 1 candidates: $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209
    Analyzing resource sharing with $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209 ($memrd):
      Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$6893 $auto$opt_reduce.cc:132:opt_mux$6887 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$procmux$2688_CMP \resetn }.
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$210: { $auto$opt_reduce.cc:132:opt_mux$6903 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2431_Y $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$3415_CTRL \resetn } = 6'001101
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$210: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2431_Y $techmap\soc.cpu.$procmux$2687_CMP \resetn } = 3'111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$210: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2431_Y $techmap\soc.cpu.$procmux$2688_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$210: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2431_Y $techmap\soc.cpu.$procmux$2687_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209: { \soc.cpu.instr_retirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$procmux$2688_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209: { $auto$opt_reduce.cc:132:opt_mux$6893 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$procmux$2688_CMP \resetn } = 5'00111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209: { \soc.cpu.instr_maskirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$procmux$2688_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209: { \soc.cpu.instr_timer $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$procmux$2688_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209: { $auto$opt_reduce.cc:132:opt_mux$6887 $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$procmux$2688_CMP \resetn } = 4'1111
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2688_CMP vs. $techmap\soc.cpu.$procmux$2687_CMP
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. $auto$opt_reduce.cc:132:opt_mux$6887
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. $auto$opt_reduce.cc:132:opt_mux$6887
      Adding exclusive control bits: \soc.cpu.instr_retirq vs. $auto$opt_reduce.cc:132:opt_mux$6887
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_timer
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6887
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdinstr
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdcycleh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2688_CMP vs. $techmap\soc.cpu.$procmux$2687_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2688_CMP vs. $techmap\soc.cpu.$procmux$2687_CMP
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6893
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2688_CMP vs. $techmap\soc.cpu.$procmux$2687_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y vs. $auto$opt_reduce.cc:132:opt_mux$6893
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6893
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2688_CMP vs. $techmap\soc.cpu.$procmux$2687_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y vs. $auto$opt_reduce.cc:132:opt_mux$6893
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$6893
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sh
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sb
      Adding exclusive control bits: \soc.cpu.instr_sh vs. \soc.cpu.instr_sb
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2688_CMP vs. $techmap\soc.cpu.$procmux$2687_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$3415_CTRL vs. $auto$opt_reduce.cc:132:opt_mux$6903
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$3415_CTRL vs. \soc.cpu.is_lui_auipc_jal
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:132:opt_mux$6903
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:132:opt_mux$6893
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bge
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bne vs. \soc.cpu.instr_beq
      Size of SAT problem: 12 cells, 243 variables, 626 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:132:opt_mux$6893 $auto$opt_reduce.cc:132:opt_mux$6887 $auto$opt_reduce.cc:132:opt_mux$6903 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$reduce_bool$picorv32.v:1363$2431_Y $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$3415_CTRL \resetn } = 13'0000000110101
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209 ($memrd):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$6893 $auto$opt_reduce.cc:132:opt_mux$6887 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1362$2429_Y $techmap\soc.cpu.$procmux$2688_CMP \resetn }.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$sshr$picorv32.v:1223$2638 ($sshr):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$picorv32.v:1260$2404_Y.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$shl$picorv32.v:1222$2635 ($shl):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$picorv32.v:1258$2400_Y.
    No candidates found.

9.15. Executing TECHMAP pass (map to technology primitives).

9.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

9.15.2. Continuing TECHMAP pass.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$a6ffc318e97e2d88e3aa2c740afebfc2ba48d1b1\_90_lut_cmp_ for cells of type $ne.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$dc6060208f0369ff43b26b7eee8e43bf61e4b025\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$efc71e781fe178e08e0b73b60d007d65bb528021\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$64fdb727b8fb55a4fe9731fe5b6468d06ea5e6e3\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$ed69233d74549f287b72a59633b9a76ab6bcc119\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5c2d7617d568809e504489b04c3cf382857f302a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$f697708cd68b7ab769087d4d36092ed6d4550934\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~1391 debug messages>

9.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~4 debug messages>

9.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 190 unused wires.
<suppressed ~1 debug messages>

9.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module hardware:
  creating $macc model for $add$hardware.v:61$4 ($add).
  creating $macc model for $techmap\clock.$add$clock.v:17$1114 ($add).
  creating $macc model for $techmap\clock.$add$clock.v:21$1116 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1218$2630 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1295$2414 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1405$2449 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1530$2504 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1542$2507 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1547$2508 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1784$2556 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1847$2584 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:365$2021 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:889$2149 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:893$2150 ($add).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1218$2629 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1398$2447 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1415$2455 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1820$2573 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1828$2580 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1055 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1060 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1073 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1075 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1078 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$960 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$961 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$962 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$963 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$964 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$965 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$966 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$967 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$968 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$969 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$970 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$971 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$972 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$973 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$974 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$975 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$976 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$977 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$978 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$979 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$980 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$981 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$982 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$984 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$986 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$989 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$990 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$999 ($sub).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:112$152 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:74$143 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:99$149 ($add).
  creating $macc model for $techmap\soc.simpleuart.$sub$simpleuart.v:132$160 ($sub).
  creating $macc model for $techmap\soc.spimemio.$add$spimemio.v:226$76 ($add).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$98 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$105 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$117 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$127 ($sub).
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$990 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$988 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$989.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$986 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$984 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$982 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$980 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$981.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$978 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$979.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$976 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$977.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$974 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$975.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$972 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$973.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$970 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$971.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$968 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$969.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$966 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$967.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$964 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$965.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$962 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$963.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$960 into $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$961.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$999.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:112$152.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:74$143.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:99$149.
  creating $alu model for $macc $techmap\soc.simpleuart.$sub$simpleuart.v:132$160.
  creating $alu model for $macc $techmap\soc.spimemio.$add$spimemio.v:226$76.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$98.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$105.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$117.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$127.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1078.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1075.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1073.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1060.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1055.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1828$2580.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1820$2573.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1415$2455.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1398$2447.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1218$2629.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:893$2150.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:889$2149.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:365$2021.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1847$2584.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1784$2556.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1547$2508.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1542$2507.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1530$2504.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1405$2449.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1295$2414.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1218$2630.
  creating $alu model for $macc $techmap\clock.$add$clock.v:21$1116.
  creating $alu model for $macc $techmap\clock.$add$clock.v:17$1114.
  creating $alu model for $macc $add$hardware.v:61$4.
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$965: $auto$alumacc.cc:354:replace_macc$7143
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$971: $auto$alumacc.cc:354:replace_macc$7144
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$963: $auto$alumacc.cc:354:replace_macc$7145
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$973: $auto$alumacc.cc:354:replace_macc$7146
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$967: $auto$alumacc.cc:354:replace_macc$7147
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$975: $auto$alumacc.cc:354:replace_macc$7148
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$961: $auto$alumacc.cc:354:replace_macc$7149
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$977: $auto$alumacc.cc:354:replace_macc$7150
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$969: $auto$alumacc.cc:354:replace_macc$7151
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$979: $auto$alumacc.cc:354:replace_macc$7152
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$991: $auto$alumacc.cc:354:replace_macc$7153
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$981: $auto$alumacc.cc:354:replace_macc$7154
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$987: $auto$alumacc.cc:354:replace_macc$7155
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$983: $auto$alumacc.cc:354:replace_macc$7156
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$989: $auto$alumacc.cc:354:replace_macc$7157
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$picorv32.v:2193$985: $auto$alumacc.cc:354:replace_macc$7158
  creating $alu model for $techmap\soc.$ge$picosoc.v:142$1186 ($ge): new $alu
  creating $alu model for $techmap\soc.$gt$picosoc.v:94$1163 ($gt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:142$1188 ($lt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:189$1198 ($lt): merged with $techmap\soc.$ge$picosoc.v:142$1186.
  creating $alu model for $techmap\soc.cpu.$ge$picorv32.v:1813$2565 ($ge): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1220$2633 ($lt): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1221$2634 ($lt): merged with $techmap\soc.cpu.$sub$picorv32.v:1218$2629.
  creating $alu model for $techmap\soc.cpu.pcpi_div.$le$picorv32.v:2426$1077 ($le): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:130$158 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:84$146 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:90$147 ($gt): new $alu
  creating $alu model for $techmap\soc.$eq$picosoc.v:99$1165 ($eq): merged with $techmap\soc.$lt$picosoc.v:142$1188.
  creating $alu model for $techmap\soc.cpu.$eq$picorv32.v:1219$2632 ($eq): merged with $techmap\soc.cpu.$sub$picorv32.v:1218$2629.
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:90$147: $auto$alumacc.cc:474:replace_alu$7168
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:84$146: $auto$alumacc.cc:474:replace_alu$7179
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:130$158: $auto$alumacc.cc:474:replace_alu$7184
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$le$picorv32.v:2426$1077: $auto$alumacc.cc:474:replace_alu$7195
  creating $alu cell for $techmap\soc.cpu.$ge$picorv32.v:1813$2565: $auto$alumacc.cc:474:replace_alu$7208
  creating $alu cell for $techmap\soc.$lt$picosoc.v:142$1188, $techmap\soc.$eq$picosoc.v:99$1165: $auto$alumacc.cc:474:replace_alu$7217
  creating $alu cell for $techmap\soc.$gt$picosoc.v:94$1163: $auto$alumacc.cc:474:replace_alu$7228
  creating $alu cell for $techmap\soc.$ge$picosoc.v:142$1186, $techmap\soc.$lt$picosoc.v:189$1198: $auto$alumacc.cc:474:replace_alu$7233
  creating $alu cell for $add$hardware.v:61$4: $auto$alumacc.cc:474:replace_alu$7246
  creating $alu cell for $techmap\clock.$add$clock.v:17$1114: $auto$alumacc.cc:474:replace_alu$7249
  creating $alu cell for $techmap\clock.$add$clock.v:21$1116: $auto$alumacc.cc:474:replace_alu$7252
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1295$2414: $auto$alumacc.cc:474:replace_alu$7255
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1405$2449: $auto$alumacc.cc:474:replace_alu$7258
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1530$2504: $auto$alumacc.cc:474:replace_alu$7261
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1542$2507: $auto$alumacc.cc:474:replace_alu$7264
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1547$2508: $auto$alumacc.cc:474:replace_alu$7267
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1784$2556: $auto$alumacc.cc:474:replace_alu$7270
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1847$2584: $auto$alumacc.cc:474:replace_alu$7273
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:365$2021: $auto$alumacc.cc:474:replace_alu$7276
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:889$2149: $auto$alumacc.cc:474:replace_alu$7279
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:893$2150: $auto$alumacc.cc:474:replace_alu$7282
  creating $alu cell for $techmap\soc.cpu.$lt$picorv32.v:1220$2633: $auto$alumacc.cc:474:replace_alu$7285
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1218$2630: $auto$alumacc.cc:474:replace_alu$7292
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1218$2629, $techmap\soc.cpu.$lt$picorv32.v:1221$2634, $techmap\soc.cpu.$eq$picorv32.v:1219$2632: $auto$alumacc.cc:474:replace_alu$7295
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1398$2447: $auto$alumacc.cc:474:replace_alu$7302
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1415$2455: $auto$alumacc.cc:474:replace_alu$7305
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1820$2573: $auto$alumacc.cc:474:replace_alu$7308
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1828$2580: $auto$alumacc.cc:474:replace_alu$7311
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2402$1055: $auto$alumacc.cc:474:replace_alu$7314
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2403$1060: $auto$alumacc.cc:474:replace_alu$7317
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2421$1073: $auto$alumacc.cc:474:replace_alu$7320
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$picorv32.v:2423$1075: $auto$alumacc.cc:474:replace_alu$7323
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$sub$picorv32.v:2427$1078: $auto$alumacc.cc:474:replace_alu$7326
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$127: $auto$alumacc.cc:474:replace_alu$7329
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$117: $auto$alumacc.cc:474:replace_alu$7332
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$105: $auto$alumacc.cc:474:replace_alu$7335
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$98: $auto$alumacc.cc:474:replace_alu$7338
  creating $alu cell for $techmap\soc.spimemio.$add$spimemio.v:226$76: $auto$alumacc.cc:474:replace_alu$7341
  creating $alu cell for $techmap\soc.simpleuart.$sub$simpleuart.v:132$160: $auto$alumacc.cc:474:replace_alu$7344
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:99$149: $auto$alumacc.cc:474:replace_alu$7347
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:74$143: $auto$alumacc.cc:474:replace_alu$7350
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:112$152: $auto$alumacc.cc:474:replace_alu$7353
  creating $alu cell for $techmap\soc.cpu.pcpi_mul.$sub$picorv32.v:2227$999: $auto$alumacc.cc:474:replace_alu$7356
  created 43 $alu and 16 $macc cells.

9.19. Executing OPT pass (performing simple optimizations).

9.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~9 debug messages>

9.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

9.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~303 debug messages>

9.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7240: { $auto$rtlil.cc:1844:Not$7237 $auto$rtlil.cc:1847:ReduceAnd$7239 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$7215: { $auto$rtlil.cc:1844:Not$7212 $auto$rtlil.cc:1847:ReduceAnd$7214 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7238: { $auto$alumacc.cc:490:replace_alu$7234 [0] $auto$alumacc.cc:490:replace_alu$7234 [1] $auto$alumacc.cc:490:replace_alu$7234 [2] $auto$alumacc.cc:490:replace_alu$7234 [3] $auto$alumacc.cc:490:replace_alu$7234 [4] $auto$alumacc.cc:490:replace_alu$7234 [5] $auto$alumacc.cc:490:replace_alu$7234 [6] $auto$alumacc.cc:490:replace_alu$7234 [7] $auto$alumacc.cc:490:replace_alu$7234 [8] $auto$alumacc.cc:490:replace_alu$7234 [9] $auto$alumacc.cc:490:replace_alu$7234 [10] $auto$alumacc.cc:490:replace_alu$7234 [11] $auto$alumacc.cc:490:replace_alu$7234 [12] $auto$alumacc.cc:490:replace_alu$7234 [13] $auto$alumacc.cc:490:replace_alu$7234 [14] $auto$alumacc.cc:490:replace_alu$7234 [15] $auto$alumacc.cc:490:replace_alu$7234 [16] $auto$alumacc.cc:490:replace_alu$7234 [17] $auto$alumacc.cc:490:replace_alu$7234 [18] $auto$alumacc.cc:490:replace_alu$7234 [19] $auto$alumacc.cc:490:replace_alu$7234 [20] $auto$alumacc.cc:490:replace_alu$7234 [21] $auto$alumacc.cc:490:replace_alu$7234 [22] $auto$alumacc.cc:490:replace_alu$7234 [23] $auto$alumacc.cc:490:replace_alu$7234 [24] $auto$alumacc.cc:490:replace_alu$7234 [25] $auto$alumacc.cc:490:replace_alu$7234 [26] $auto$alumacc.cc:490:replace_alu$7234 [27] $auto$alumacc.cc:490:replace_alu$7234 [28] $auto$alumacc.cc:490:replace_alu$7234 [29] $auto$alumacc.cc:490:replace_alu$7234 [30] $auto$alumacc.cc:490:replace_alu$7234 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7300: { $auto$alumacc.cc:490:replace_alu$7296 [0] $auto$alumacc.cc:490:replace_alu$7296 [1] $auto$alumacc.cc:490:replace_alu$7296 [2] $auto$alumacc.cc:490:replace_alu$7296 [3] $auto$alumacc.cc:490:replace_alu$7296 [4] $auto$alumacc.cc:490:replace_alu$7296 [5] $auto$alumacc.cc:490:replace_alu$7296 [6] $auto$alumacc.cc:490:replace_alu$7296 [7] $auto$alumacc.cc:490:replace_alu$7296 [8] $auto$alumacc.cc:490:replace_alu$7296 [9] $auto$alumacc.cc:490:replace_alu$7296 [10] $auto$alumacc.cc:490:replace_alu$7296 [11] $auto$alumacc.cc:490:replace_alu$7296 [12] $auto$alumacc.cc:490:replace_alu$7296 [13] $auto$alumacc.cc:490:replace_alu$7296 [14] $auto$alumacc.cc:490:replace_alu$7296 [15] $auto$alumacc.cc:490:replace_alu$7296 [16] $auto$alumacc.cc:490:replace_alu$7296 [17] $auto$alumacc.cc:490:replace_alu$7296 [18] $auto$alumacc.cc:490:replace_alu$7296 [19] $auto$alumacc.cc:490:replace_alu$7296 [20] $auto$alumacc.cc:490:replace_alu$7296 [21] $auto$alumacc.cc:490:replace_alu$7296 [22] $auto$alumacc.cc:490:replace_alu$7296 [23] $auto$alumacc.cc:490:replace_alu$7296 [24] $auto$alumacc.cc:490:replace_alu$7296 [25] $auto$alumacc.cc:490:replace_alu$7296 [26] $auto$alumacc.cc:490:replace_alu$7296 [27] $auto$alumacc.cc:490:replace_alu$7296 [28] $auto$alumacc.cc:490:replace_alu$7296 [29] $auto$alumacc.cc:490:replace_alu$7296 [30] $auto$alumacc.cc:490:replace_alu$7296 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7175: { $auto$alumacc.cc:490:replace_alu$7169 [0] $auto$alumacc.cc:490:replace_alu$7169 [1] $auto$alumacc.cc:490:replace_alu$7169 [2] $auto$alumacc.cc:490:replace_alu$7169 [3] $auto$alumacc.cc:490:replace_alu$7169 [4] $auto$alumacc.cc:490:replace_alu$7169 [5] $auto$alumacc.cc:490:replace_alu$7169 [6] $auto$alumacc.cc:490:replace_alu$7169 [7] $auto$alumacc.cc:490:replace_alu$7169 [8] $auto$alumacc.cc:490:replace_alu$7169 [9] $auto$alumacc.cc:490:replace_alu$7169 [10] $auto$alumacc.cc:490:replace_alu$7169 [11] $auto$alumacc.cc:490:replace_alu$7169 [12] $auto$alumacc.cc:490:replace_alu$7169 [13] $auto$alumacc.cc:490:replace_alu$7169 [14] $auto$alumacc.cc:490:replace_alu$7169 [15] $auto$alumacc.cc:490:replace_alu$7169 [16] $auto$alumacc.cc:490:replace_alu$7169 [17] $auto$alumacc.cc:490:replace_alu$7169 [18] $auto$alumacc.cc:490:replace_alu$7169 [19] $auto$alumacc.cc:490:replace_alu$7169 [20] $auto$alumacc.cc:490:replace_alu$7169 [21] $auto$alumacc.cc:490:replace_alu$7169 [22] $auto$alumacc.cc:490:replace_alu$7169 [23] $auto$alumacc.cc:490:replace_alu$7169 [24] $auto$alumacc.cc:490:replace_alu$7169 [25] $auto$alumacc.cc:490:replace_alu$7169 [26] $auto$alumacc.cc:490:replace_alu$7169 [27] $auto$alumacc.cc:490:replace_alu$7169 [28] $auto$alumacc.cc:490:replace_alu$7169 [29] $auto$alumacc.cc:490:replace_alu$7169 [30] $auto$alumacc.cc:490:replace_alu$7169 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7191: { $auto$alumacc.cc:490:replace_alu$7185 [0] $auto$alumacc.cc:490:replace_alu$7185 [1] $auto$alumacc.cc:490:replace_alu$7185 [2] $auto$alumacc.cc:490:replace_alu$7185 [3] $auto$alumacc.cc:490:replace_alu$7185 [4] $auto$alumacc.cc:490:replace_alu$7185 [5] $auto$alumacc.cc:490:replace_alu$7185 [6] $auto$alumacc.cc:490:replace_alu$7185 [7] $auto$alumacc.cc:490:replace_alu$7185 [8] $auto$alumacc.cc:490:replace_alu$7185 [9] $auto$alumacc.cc:490:replace_alu$7185 [10] $auto$alumacc.cc:490:replace_alu$7185 [11] $auto$alumacc.cc:490:replace_alu$7185 [12] $auto$alumacc.cc:490:replace_alu$7185 [13] $auto$alumacc.cc:490:replace_alu$7185 [14] $auto$alumacc.cc:490:replace_alu$7185 [15] $auto$alumacc.cc:490:replace_alu$7185 [16] $auto$alumacc.cc:490:replace_alu$7185 [17] $auto$alumacc.cc:490:replace_alu$7185 [18] $auto$alumacc.cc:490:replace_alu$7185 [19] $auto$alumacc.cc:490:replace_alu$7185 [20] $auto$alumacc.cc:490:replace_alu$7185 [21] $auto$alumacc.cc:490:replace_alu$7185 [22] $auto$alumacc.cc:490:replace_alu$7185 [23] $auto$alumacc.cc:490:replace_alu$7185 [24] $auto$alumacc.cc:490:replace_alu$7185 [25] $auto$alumacc.cc:490:replace_alu$7185 [26] $auto$alumacc.cc:490:replace_alu$7185 [27] $auto$alumacc.cc:490:replace_alu$7185 [28] $auto$alumacc.cc:490:replace_alu$7185 [29] $auto$alumacc.cc:490:replace_alu$7185 [30] $auto$alumacc.cc:490:replace_alu$7185 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7202: { $auto$alumacc.cc:490:replace_alu$7196 [0] $auto$alumacc.cc:490:replace_alu$7196 [1] $auto$alumacc.cc:490:replace_alu$7196 [2] $auto$alumacc.cc:490:replace_alu$7196 [3] $auto$alumacc.cc:490:replace_alu$7196 [4] $auto$alumacc.cc:490:replace_alu$7196 [5] $auto$alumacc.cc:490:replace_alu$7196 [6] $auto$alumacc.cc:490:replace_alu$7196 [7] $auto$alumacc.cc:490:replace_alu$7196 [8] $auto$alumacc.cc:490:replace_alu$7196 [9] $auto$alumacc.cc:490:replace_alu$7196 [10] $auto$alumacc.cc:490:replace_alu$7196 [11] $auto$alumacc.cc:490:replace_alu$7196 [12] $auto$alumacc.cc:490:replace_alu$7196 [13] $auto$alumacc.cc:490:replace_alu$7196 [14] $auto$alumacc.cc:490:replace_alu$7196 [15] $auto$alumacc.cc:490:replace_alu$7196 [16] $auto$alumacc.cc:490:replace_alu$7196 [17] $auto$alumacc.cc:490:replace_alu$7196 [18] $auto$alumacc.cc:490:replace_alu$7196 [19] $auto$alumacc.cc:490:replace_alu$7196 [20] $auto$alumacc.cc:490:replace_alu$7196 [21] $auto$alumacc.cc:490:replace_alu$7196 [22] $auto$alumacc.cc:490:replace_alu$7196 [23] $auto$alumacc.cc:490:replace_alu$7196 [24] $auto$alumacc.cc:490:replace_alu$7196 [25] $auto$alumacc.cc:490:replace_alu$7196 [26] $auto$alumacc.cc:490:replace_alu$7196 [27] $auto$alumacc.cc:490:replace_alu$7196 [28] $auto$alumacc.cc:490:replace_alu$7196 [29] $auto$alumacc.cc:490:replace_alu$7196 [30] $auto$alumacc.cc:490:replace_alu$7196 [31] $auto$alumacc.cc:490:replace_alu$7196 [32] $auto$alumacc.cc:490:replace_alu$7196 [33] $auto$alumacc.cc:490:replace_alu$7196 [34] $auto$alumacc.cc:490:replace_alu$7196 [35] $auto$alumacc.cc:490:replace_alu$7196 [36] $auto$alumacc.cc:490:replace_alu$7196 [37] $auto$alumacc.cc:490:replace_alu$7196 [38] $auto$alumacc.cc:490:replace_alu$7196 [39] $auto$alumacc.cc:490:replace_alu$7196 [40] $auto$alumacc.cc:490:replace_alu$7196 [41] $auto$alumacc.cc:490:replace_alu$7196 [42] $auto$alumacc.cc:490:replace_alu$7196 [43] $auto$alumacc.cc:490:replace_alu$7196 [44] $auto$alumacc.cc:490:replace_alu$7196 [45] $auto$alumacc.cc:490:replace_alu$7196 [46] $auto$alumacc.cc:490:replace_alu$7196 [47] $auto$alumacc.cc:490:replace_alu$7196 [48] $auto$alumacc.cc:490:replace_alu$7196 [49] $auto$alumacc.cc:490:replace_alu$7196 [50] $auto$alumacc.cc:490:replace_alu$7196 [51] $auto$alumacc.cc:490:replace_alu$7196 [52] $auto$alumacc.cc:490:replace_alu$7196 [53] $auto$alumacc.cc:490:replace_alu$7196 [54] $auto$alumacc.cc:490:replace_alu$7196 [55] $auto$alumacc.cc:490:replace_alu$7196 [56] $auto$alumacc.cc:490:replace_alu$7196 [57] $auto$alumacc.cc:490:replace_alu$7196 [58] $auto$alumacc.cc:490:replace_alu$7196 [59] $auto$alumacc.cc:490:replace_alu$7196 [60] $auto$alumacc.cc:490:replace_alu$7196 [61] $auto$alumacc.cc:490:replace_alu$7196 [62] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7213: { $auto$alumacc.cc:490:replace_alu$7209 [0] $auto$alumacc.cc:490:replace_alu$7209 [1] $auto$alumacc.cc:490:replace_alu$7209 [2] $auto$alumacc.cc:490:replace_alu$7209 [3] $auto$alumacc.cc:490:replace_alu$7209 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$7224: { $auto$alumacc.cc:490:replace_alu$7218 [0] $auto$alumacc.cc:490:replace_alu$7218 [1] $auto$alumacc.cc:490:replace_alu$7218 [2] $auto$alumacc.cc:490:replace_alu$7218 [3] $auto$alumacc.cc:490:replace_alu$7218 [4] $auto$alumacc.cc:490:replace_alu$7218 [5] $auto$alumacc.cc:490:replace_alu$7218 [6] $auto$alumacc.cc:490:replace_alu$7218 [7] $auto$alumacc.cc:490:replace_alu$7218 [8] $auto$alumacc.cc:490:replace_alu$7218 [9] $auto$alumacc.cc:490:replace_alu$7218 [10] $auto$alumacc.cc:490:replace_alu$7218 [11] $auto$alumacc.cc:490:replace_alu$7218 [12] $auto$alumacc.cc:490:replace_alu$7218 [13] $auto$alumacc.cc:490:replace_alu$7218 [14] $auto$alumacc.cc:490:replace_alu$7218 [15] $auto$alumacc.cc:490:replace_alu$7218 [16] $auto$alumacc.cc:490:replace_alu$7218 [17] $auto$alumacc.cc:490:replace_alu$7218 [18] $auto$alumacc.cc:490:replace_alu$7218 [19] $auto$alumacc.cc:490:replace_alu$7218 [20] $auto$alumacc.cc:490:replace_alu$7218 [21] $auto$alumacc.cc:490:replace_alu$7218 [22] $auto$alumacc.cc:490:replace_alu$7218 [23] $auto$alumacc.cc:490:replace_alu$7218 [24] $auto$alumacc.cc:490:replace_alu$7218 [25] $auto$alumacc.cc:490:replace_alu$7218 [26] $auto$alumacc.cc:490:replace_alu$7218 [27] $auto$alumacc.cc:490:replace_alu$7218 [28] $auto$alumacc.cc:490:replace_alu$7218 [29] $auto$alumacc.cc:490:replace_alu$7218 [30] $auto$alumacc.cc:490:replace_alu$7218 [31] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3410: { $auto$opt_reduce.cc:132:opt_mux$7360 $techmap\soc.cpu.$procmux$2685_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4363: { }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4376: { }
  Optimizing cells in module \hardware.
Performed a total of 12 changes.

9.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 18 unused cells and 40 unused wires.
<suppressed ~19 debug messages>

9.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.19.9. Rerunning OPT passes. (Maybe there is more to do..)

9.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~304 debug messages>

9.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

9.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.19.16. Rerunning OPT passes. (Maybe there is more to do..)

9.19.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~304 debug messages>

9.19.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.19.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.19.20. Executing OPT_RMDFF pass (remove dff with constant values).

9.19.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.19.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.19.23. Finished OPT passes. (There is nothing left to do.)

9.20. Executing FSM pass (extract and optimize FSM).

9.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register hardware.soc.cpu.cpu_state.
Not marking hardware.soc.cpu.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.cpu.mem_wordsize as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hardware.soc.spimemio.state as FSM state register:
    Users of register don't seem to benefit from recoding.

9.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc.cpu.cpu_state' from module `\hardware'.
  found $dff cell for state register: $techmap\soc.cpu.$procdff$6641
  root of input selection tree: $techmap\soc.cpu.$0\cpu_state[7:0]
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1909$2616_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1893$2597_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$6977
  found ctrl input: $techmap\soc.cpu.$procmux$2685_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2686_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2687_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2688_CMP
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y
  found ctrl input: $techmap\soc.cpu.$logic_or$picorv32.v:1835$2582_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1850$2586_Y
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1809$2564_Y
  found ctrl input: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \soc.cpu.mem_done
  found ctrl input: \soc.cpu.is_sb_sh_sw
  found ctrl input: \soc.cpu.instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \soc.cpu.pcpi_int_ready
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1583$2514_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1586$2518_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$6895
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$6893
  found state code: 8'00000001
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1516$2493_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1526$2501_Y
  found ctrl input: \soc.cpu.decoder_trigger
  found ctrl input: \soc.cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1901$2607_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1894$2600_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1896$2604_Y
  found ctrl output: $techmap\soc.cpu.$procmux$2690_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2688_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2687_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2686_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2685_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2684_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2683_CMP
  found ctrl output: $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y
  ctrl inputs: { $auto$opt_reduce.cc:132:opt_mux$6895 $auto$opt_reduce.cc:132:opt_mux$6893 $auto$opt_reduce.cc:132:opt_mux$6977 \soc.cpu.pcpi_int_ready \soc.cpu.mem_done \soc.cpu.instr_jal \soc.cpu.instr_trap \soc.cpu.decoder_trigger \soc.cpu.is_sb_sh_sw \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu $techmap\soc.cpu.$logic_and$picorv32.v:1516$2493_Y $techmap\soc.cpu.$logic_and$picorv32.v:1526$2501_Y $techmap\soc.cpu.$logic_and$picorv32.v:1583$2514_Y $techmap\soc.cpu.$logic_and$picorv32.v:1586$2518_Y $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y $techmap\soc.cpu.$eq$picorv32.v:1809$2564_Y $techmap\soc.cpu.$logic_or$picorv32.v:1835$2582_Y $techmap\soc.cpu.$logic_and$picorv32.v:1850$2586_Y $techmap\soc.cpu.$logic_and$picorv32.v:1893$2597_Y $techmap\soc.cpu.$logic_and$picorv32.v:1894$2600_Y $techmap\soc.cpu.$logic_and$picorv32.v:1896$2604_Y $techmap\soc.cpu.$logic_and$picorv32.v:1901$2607_Y $techmap\soc.cpu.$logic_and$picorv32.v:1909$2616_Y \resetn }
  ctrl outputs: { $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y $techmap\soc.cpu.$0\cpu_state[7:0] $techmap\soc.cpu.$procmux$2683_CMP $techmap\soc.cpu.$procmux$2684_CMP $techmap\soc.cpu.$procmux$2685_CMP $techmap\soc.cpu.$procmux$2686_CMP $techmap\soc.cpu.$procmux$2687_CMP $techmap\soc.cpu.$procmux$2688_CMP $techmap\soc.cpu.$procmux$2690_CMP }
  transition: 8'10000000 24'------------------0---00 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0---01 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------10-000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------10-001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------11000- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------1-010- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'--------------------0-1- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------0-1-10 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0-1-11 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101111 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111111 -> 8'10000000 16'0100000000000001
  transition: 8'01000000 24'------------------0---00 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0---01 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------10-000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------10-001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------11000- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------111000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------1-010- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------101100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'--------------------0-1- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------0-1-10 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0-1-11 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111111 -> 8'01000000 16'1010000000000000
  transition: 8'00100000 24'------------------0---00 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0---01 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0---01 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0---01 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0---01 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------10-000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---10-001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----10-001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----10-001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---10-001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------11000- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------111000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------1-010- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------101100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'--------------------0-1- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------0-1-10 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0-1-11 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0-1-11 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0-1-11 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0-1-11 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111111 -> 8'00001000 16'0000010000000010
  transition: 8'00001000 24'------------------0---00 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0---01 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------10-000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------10-001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------11000- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------111000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------1-010- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------101100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'--------------------0-1- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------0-1-10 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0-1-11 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 24'------------------0---00 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110---01 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------10-000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-10-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1010-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1110-001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------11000- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------111000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------1-010- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------101100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'--------------------0-1- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------0-1-10 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110-1-11 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101111 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111111 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 24'------------------0---00 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110---01 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------10-000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-10-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1010-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1110-001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------11000- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------111000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------1-010- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------101100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'--------------------0-1- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------0-1-10 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110-1-11 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101111 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111111 -> 8'01000000 16'0010000001000000

9.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$7361' from module `\hardware'.
  Merging pattern 24'------------------111001 and 24'------------------111011 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101101 and 24'------------------101111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111101 and 24'------------------111111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111011 and 24'------------------111001 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101111 and 24'------------------101101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111111 and 24'------------------111101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1110-1 and 24'------------------1111-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1111-1 and 24'------------------1110-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111001 and 24'-------0--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111001 and 24'-----1-1--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111001 and 24'----------01------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111001 and 24'----------1-------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101101 and 24'-------0--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101101 and 24'-----1-1--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101101 and 24'----------01------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101101 and 24'----------1-------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111101 and 24'-------0--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111101 and 24'-----1-1--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111101 and 24'----------01------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111101 and 24'----------1-------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111011 and 24'-------0--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111011 and 24'-----1-1--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111011 and 24'----------01------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111011 and 24'----------1-------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101111 and 24'-------0--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101111 and 24'-----1-1--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101111 and 24'----------01------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101111 and 24'----------1-------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111111 and 24'-------0--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111111 and 24'-----1-1--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111111 and 24'----------01------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111111 and 24'----------1-------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1110-1 and 24'-------0--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1110-1 and 24'-----1-1--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1110-1 and 24'----------01------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1110-1 and 24'----------1-------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1111-1 and 24'-------0--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1111-1 and 24'-----1-1--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1111-1 and 24'----------01------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1111-1 and 24'----------1-------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----0-1--00------111001 and 24'-----0-1--00------111011 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101101 and 24'-----0-1--00------101111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111101 and 24'-----0-1--00------111111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111011 and 24'-----0-1--00------111001 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101111 and 24'-----0-1--00------101101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111111 and 24'-----0-1--00------111101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1110-1 and 24'-----0-1--00------1111-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1111-1 and 24'-----0-1--00------1110-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'---0--1-----10----111001 and 24'---0--1-----10----111011 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101101 and 24'---0--1-----10----101111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111101 and 24'---0--1-----10----111111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111011 and 24'---0--1-----10----111001 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101111 and 24'---0--1-----10----101101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111111 and 24'---0--1-----10----111101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1110-1 and 24'---0--1-----10----1111-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1111-1 and 24'---0--1-----10----1110-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111001 and 24'---0--1-----11----111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111001 and 24'---1--1-----------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111001 and 24'-1----------------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101101 and 24'---0--1-----11----101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101101 and 24'---1--1-----------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101101 and 24'-1----------------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111101 and 24'---0--1-----11----111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111101 and 24'---1--1-----------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111101 and 24'-1----------------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111011 and 24'---0--1-----11----111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111011 and 24'---1--1-----------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111011 and 24'-1----------------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101111 and 24'---0--1-----11----101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101111 and 24'---1--1-----------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101111 and 24'-1----------------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111111 and 24'---0--1-----11----111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111111 and 24'---1--1-----------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111111 and 24'-1----------------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1110-1 and 24'---0--1-----11----1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1110-1 and 24'---1--1-----------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1110-1 and 24'-1----------------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1111-1 and 24'---0--1-----11----1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1111-1 and 24'---1--1-----------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1111-1 and 24'-1----------------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----0-----111001 and 24'---0--1-----0-----111011 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101101 and 24'---0--1-----0-----101111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111101 and 24'---0--1-----0-----111111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111011 and 24'---0--1-----0-----111001 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101111 and 24'---0--1-----0-----101101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111111 and 24'---0--1-----0-----111101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1110-1 and 24'---0--1-----0-----1111-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1111-1 and 24'---0--1-----0-----1110-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'00----0-0-----0---111001 and 24'00----0-0-----0---111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111001 and 24'1-----------------111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101101 and 24'00----0-0-----0---101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101101 and 24'1-----------------101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111101 and 24'00----0-0-----0---111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111101 and 24'1-----------------111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111011 and 24'00----0-0-----0---111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111011 and 24'1-----------------111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101111 and 24'00----0-0-----0---101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101111 and 24'1-----------------101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111111 and 24'00----0-0-----0---111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111111 and 24'1-----------------111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1110-1 and 24'00----0-0-----0---1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1110-1 and 24'1-----------------1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1111-1 and 24'00----0-0-----0---1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1111-1 and 24'1-----------------1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00------1-----0---111001 and 24'00------1-----0---111011 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101101 and 24'00------1-----0---101111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111101 and 24'00------1-----0---111111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111011 and 24'00------1-----0---111001 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101111 and 24'00------1-----0---101101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111111 and 24'00------1-----0---111101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1110-1 and 24'00------1-----0---1111-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1111-1 and 24'00------1-----0---1110-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'--------------1---111001 and 24'--------------1---111011 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101101 and 24'--------------1---101111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111101 and 24'--------------1---111111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111011 and 24'--------------1---111001 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101111 and 24'--------------1---101101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111111 and 24'--------------1---111101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1110-1 and 24'--------------1---1111-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1111-1 and 24'--------------1---1110-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111001 and 24'---------0--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111001 and 24'----1----1--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101101 and 24'---------0--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101101 and 24'----1----1--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111101 and 24'---------0--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111101 and 24'----1----1--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111011 and 24'---------0--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111011 and 24'----1----1--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101111 and 24'---------0--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101111 and 24'----1----1--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111111 and 24'---------0--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111111 and 24'----1----1--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1110-1 and 24'---------0--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1110-1 and 24'----1----1--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1111-1 and 24'---------0--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1111-1 and 24'----1----1--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----0----1--------111001 and 24'----0----1--------111011 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101101 and 24'----0----1--------101111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111101 and 24'----0----1--------111111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111011 and 24'----0----1--------111001 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101111 and 24'----0----1--------101101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111111 and 24'----0----1--------111101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1110-1 and 24'----0----1--------1111-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1111-1 and 24'----0----1--------1110-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (5 5 16'0000000011000000).
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$6977.
  Removing unused input signal $techmap\soc.cpu.$eq$picorv32.v:1809$2564_Y.

9.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

9.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$7361' from module `\hardware'.
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [7].

9.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc.cpu.cpu_state$7361' from module `\hardware' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> -----1
  01000000 -> ----1-
  00100000 -> ---1--
  00001000 -> --1---
  00000010 -> -1----
  00000001 -> 1-----

9.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc.cpu.cpu_state$7361' from module `\hardware':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.cpu_state$7361 (\soc.cpu.cpu_state):

  Number of input signals:   22
  Number of output signals:   8
  Number of state bits:       6

  Input signals:
    0: \resetn
    1: $techmap\soc.cpu.$logic_and$picorv32.v:1909$2616_Y
    2: $techmap\soc.cpu.$logic_and$picorv32.v:1901$2607_Y
    3: $techmap\soc.cpu.$logic_and$picorv32.v:1896$2604_Y
    4: $techmap\soc.cpu.$logic_and$picorv32.v:1894$2600_Y
    5: $techmap\soc.cpu.$logic_and$picorv32.v:1893$2597_Y
    6: $techmap\soc.cpu.$logic_and$picorv32.v:1850$2586_Y
    7: $techmap\soc.cpu.$logic_or$picorv32.v:1835$2582_Y
    8: $techmap\soc.cpu.$logic_and$picorv32.v:1674$2533_Y
    9: $techmap\soc.cpu.$logic_and$picorv32.v:1586$2518_Y
   10: $techmap\soc.cpu.$logic_and$picorv32.v:1583$2514_Y
   11: $techmap\soc.cpu.$logic_and$picorv32.v:1526$2501_Y
   12: $techmap\soc.cpu.$logic_and$picorv32.v:1516$2493_Y
   13: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
   14: \soc.cpu.is_sb_sh_sw
   15: \soc.cpu.decoder_trigger
   16: \soc.cpu.instr_trap
   17: \soc.cpu.instr_jal
   18: \soc.cpu.mem_done
   19: \soc.cpu.pcpi_int_ready
   20: $auto$opt_reduce.cc:132:opt_mux$6893
   21: $auto$opt_reduce.cc:132:opt_mux$6895

  Output signals:
    0: $techmap\soc.cpu.$procmux$2690_CMP
    1: $techmap\soc.cpu.$procmux$2688_CMP
    2: $techmap\soc.cpu.$procmux$2687_CMP
    3: $techmap\soc.cpu.$procmux$2686_CMP
    4: $techmap\soc.cpu.$procmux$2685_CMP
    5: $techmap\soc.cpu.$procmux$2684_CMP
    6: $techmap\soc.cpu.$procmux$2683_CMP
    7: $techmap\soc.cpu.$eq$picorv32.v:1291$2412_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 22'----------------10-001   ->     0 8'00000001
      1:     0 22'----------------0---01   ->     0 8'00000001
      2:     0 22'----------------101011   ->     0 8'00000001
      3:     0 22'----------------0-1-11   ->     0 8'00000001
      4:     0 22'----------------1011-1   ->     0 8'00000001
      5:     0 22'----------------111--1   ->     0 8'00000001
      6:     0 22'----------------11000-   ->     0 8'00000001
      7:     0 22'----------------1-010-   ->     0 8'00000001
      8:     0 22'------------------0-1-   ->     0 8'00000001
      9:     0 22'----------------10-000   ->     1 8'00000001
     10:     0 22'----------------0---00   ->     1 8'00000001
     11:     0 22'----------------101010   ->     1 8'00000001
     12:     0 22'----------------0-1-10   ->     1 8'00000001
     13:     0 22'----------------1011-0   ->     1 8'00000001
     14:     0 22'----------------111--0   ->     1 8'00000001
     15:     1 22'----------------11000-   ->     0 8'10000000
     16:     1 22'----------------1-010-   ->     0 8'10000000
     17:     1 22'------------------0-1-   ->     0 8'10000000
     18:     1 22'----------------10-000   ->     1 8'10000000
     19:     1 22'----------------0---00   ->     1 8'10000000
     20:     1 22'----------------101010   ->     1 8'10000000
     21:     1 22'----------------0-1-10   ->     1 8'10000000
     22:     1 22'----------------1011-0   ->     1 8'10000000
     23:     1 22'----------------111--0   ->     1 8'10000000
     24:     1 22'------0--00-----10-001   ->     1 8'10000000
     25:     1 22'----1-1--00-----10-001   ->     1 8'10000000
     26:     1 22'---------01-----10-001   ->     1 8'10000000
     27:     1 22'---------1------10-001   ->     1 8'10000000
     28:     1 22'------0--00-----0---01   ->     1 8'10000000
     29:     1 22'----1-1--00-----0---01   ->     1 8'10000000
     30:     1 22'---------01-----0---01   ->     1 8'10000000
     31:     1 22'---------1------0---01   ->     1 8'10000000
     32:     1 22'------0--00-----101011   ->     1 8'10000000
     33:     1 22'----1-1--00-----101011   ->     1 8'10000000
     34:     1 22'---------01-----101011   ->     1 8'10000000
     35:     1 22'---------1------101011   ->     1 8'10000000
     36:     1 22'------0--00-----0-1-11   ->     1 8'10000000
     37:     1 22'----1-1--00-----0-1-11   ->     1 8'10000000
     38:     1 22'---------01-----0-1-11   ->     1 8'10000000
     39:     1 22'---------1------0-1-11   ->     1 8'10000000
     40:     1 22'------0--00-----1011-1   ->     1 8'10000000
     41:     1 22'----1-1--00-----1011-1   ->     1 8'10000000
     42:     1 22'---------01-----1011-1   ->     1 8'10000000
     43:     1 22'---------1------1011-1   ->     1 8'10000000
     44:     1 22'------0--00-----111--1   ->     1 8'10000000
     45:     1 22'----1-1--00-----111--1   ->     1 8'10000000
     46:     1 22'---------01-----111--1   ->     1 8'10000000
     47:     1 22'---------1------111--1   ->     1 8'10000000
     48:     1 22'----0-1--00-----10-001   ->     2 8'10000000
     49:     1 22'----0-1--00-----0---01   ->     2 8'10000000
     50:     1 22'----0-1--00-----101011   ->     2 8'10000000
     51:     1 22'----0-1--00-----0-1-11   ->     2 8'10000000
     52:     1 22'----0-1--00-----1011-1   ->     2 8'10000000
     53:     1 22'----0-1--00-----111--1   ->     2 8'10000000
     54:     2 22'--0--1-----10---10-001   ->     0 8'00000010
     55:     2 22'--0--1-----10---0---01   ->     0 8'00000010
     56:     2 22'--0--1-----10---101011   ->     0 8'00000010
     57:     2 22'--0--1-----10---0-1-11   ->     0 8'00000010
     58:     2 22'--0--1-----10---1011-1   ->     0 8'00000010
     59:     2 22'--0--1-----10---111--1   ->     0 8'00000010
     60:     2 22'----------------11000-   ->     0 8'00000010
     61:     2 22'----------------1-010-   ->     0 8'00000010
     62:     2 22'------------------0-1-   ->     0 8'00000010
     63:     2 22'----------------10-000   ->     1 8'00000010
     64:     2 22'----------------0---00   ->     1 8'00000010
     65:     2 22'----------------101010   ->     1 8'00000010
     66:     2 22'----------------0-1-10   ->     1 8'00000010
     67:     2 22'----------------1011-0   ->     1 8'00000010
     68:     2 22'----------------111--0   ->     1 8'00000010
     69:     2 22'--0--1-----11---10-001   ->     1 8'00000010
     70:     2 22'--1--1----------10-001   ->     1 8'00000010
     71:     2 22'-1--------------10-001   ->     1 8'00000010
     72:     2 22'--0--1-----11---0---01   ->     1 8'00000010
     73:     2 22'--1--1----------0---01   ->     1 8'00000010
     74:     2 22'-1--------------0---01   ->     1 8'00000010
     75:     2 22'--0--1-----11---101011   ->     1 8'00000010
     76:     2 22'--1--1----------101011   ->     1 8'00000010
     77:     2 22'-1--------------101011   ->     1 8'00000010
     78:     2 22'--0--1-----11---0-1-11   ->     1 8'00000010
     79:     2 22'--1--1----------0-1-11   ->     1 8'00000010
     80:     2 22'-1--------------0-1-11   ->     1 8'00000010
     81:     2 22'--0--1-----11---1011-1   ->     1 8'00000010
     82:     2 22'--1--1----------1011-1   ->     1 8'00000010
     83:     2 22'-1--------------1011-1   ->     1 8'00000010
     84:     2 22'--0--1-----11---111--1   ->     1 8'00000010
     85:     2 22'--1--1----------111--1   ->     1 8'00000010
     86:     2 22'-1--------------111--1   ->     1 8'00000010
     87:     2 22'--0--1-----0----10-001   ->     2 8'00000010
     88:     2 22'--0--1-----0----0---01   ->     2 8'00000010
     89:     2 22'--0--1-----0----101011   ->     2 8'00000010
     90:     2 22'--0--1-----0----0-1-11   ->     2 8'00000010
     91:     2 22'--0--1-----0----1011-1   ->     2 8'00000010
     92:     2 22'--0--1-----0----111--1   ->     2 8'00000010
     93:     2 22'00---0-0-----0--10-001   ->     3 8'00000010
     94:     2 22'1---------------10-001   ->     3 8'00000010
     95:     2 22'00---0-0-----0--0---01   ->     3 8'00000010
     96:     2 22'1---------------0---01   ->     3 8'00000010
     97:     2 22'00---0-0-----0--101011   ->     3 8'00000010
     98:     2 22'1---------------101011   ->     3 8'00000010
     99:     2 22'00---0-0-----0--0-1-11   ->     3 8'00000010
    100:     2 22'1---------------0-1-11   ->     3 8'00000010
    101:     2 22'00---0-0-----0--1011-1   ->     3 8'00000010
    102:     2 22'1---------------1011-1   ->     3 8'00000010
    103:     2 22'00---0-0-----0--111--1   ->     3 8'00000010
    104:     2 22'1---------------111--1   ->     3 8'00000010
    105:     2 22'00-----1-----0--10-001   ->     4 8'00000010
    106:     2 22'00-----1-----0--0---01   ->     4 8'00000010
    107:     2 22'00-----1-----0--101011   ->     4 8'00000010
    108:     2 22'00-----1-----0--0-1-11   ->     4 8'00000010
    109:     2 22'00-----1-----0--1011-1   ->     4 8'00000010
    110:     2 22'00-----1-----0--111--1   ->     4 8'00000010
    111:     2 22'-------------1--10-001   ->     5 8'00000010
    112:     2 22'-------------1--0---01   ->     5 8'00000010
    113:     2 22'-------------1--101011   ->     5 8'00000010
    114:     2 22'-------------1--0-1-11   ->     5 8'00000010
    115:     2 22'-------------1--1011-1   ->     5 8'00000010
    116:     2 22'-------------1--111--1   ->     5 8'00000010
    117:     3 22'----------------11000-   ->     0 8'00001000
    118:     3 22'----------------1-010-   ->     0 8'00001000
    119:     3 22'------------------0-1-   ->     0 8'00001000
    120:     3 22'----------------10-000   ->     1 8'00001000
    121:     3 22'----------------0---00   ->     1 8'00001000
    122:     3 22'----------------101010   ->     1 8'00001000
    123:     3 22'----------------0-1-10   ->     1 8'00001000
    124:     3 22'----------------1011-0   ->     1 8'00001000
    125:     3 22'----------------111--0   ->     1 8'00001000
    126:     3 22'--------0-------10-001   ->     1 8'00001000
    127:     3 22'---1----1-------10-001   ->     1 8'00001000
    128:     3 22'--------0-------0---01   ->     1 8'00001000
    129:     3 22'---1----1-------0---01   ->     1 8'00001000
    130:     3 22'--------0-------101011   ->     1 8'00001000
    131:     3 22'---1----1-------101011   ->     1 8'00001000
    132:     3 22'--------0-------0-1-11   ->     1 8'00001000
    133:     3 22'---1----1-------0-1-11   ->     1 8'00001000
    134:     3 22'--------0-------1011-1   ->     1 8'00001000
    135:     3 22'---1----1-------1011-1   ->     1 8'00001000
    136:     3 22'--------0-------111--1   ->     1 8'00001000
    137:     3 22'---1----1-------111--1   ->     1 8'00001000
    138:     3 22'---0----1-------10-001   ->     3 8'00001000
    139:     3 22'---0----1-------0---01   ->     3 8'00001000
    140:     3 22'---0----1-------101011   ->     3 8'00001000
    141:     3 22'---0----1-------0-1-11   ->     3 8'00001000
    142:     3 22'---0----1-------1011-1   ->     3 8'00001000
    143:     3 22'---0----1-------111--1   ->     3 8'00001000
    144:     4 22'----------------11000-   ->     0 8'00100000
    145:     4 22'----------------1-010-   ->     0 8'00100000
    146:     4 22'------------------0-1-   ->     0 8'00100000
    147:     4 22'----------------10-000   ->     1 8'00100000
    148:     4 22'----------------0---00   ->     1 8'00100000
    149:     4 22'----------------101010   ->     1 8'00100000
    150:     4 22'----------------0-1-10   ->     1 8'00100000
    151:     4 22'----------------1011-0   ->     1 8'00100000
    152:     4 22'----------------111--0   ->     1 8'00100000
    153:     4 22'--------------1110-001   ->     1 8'00100000
    154:     4 22'--------------110---01   ->     1 8'00100000
    155:     4 22'--------------11101011   ->     1 8'00100000
    156:     4 22'--------------110-1-11   ->     1 8'00100000
    157:     4 22'--------------111011-1   ->     1 8'00100000
    158:     4 22'--------------11111--1   ->     1 8'00100000
    159:     4 22'--------------1010-001   ->     4 8'00100000
    160:     4 22'--------------0-10-001   ->     4 8'00100000
    161:     4 22'--------------100---01   ->     4 8'00100000
    162:     4 22'--------------0-0---01   ->     4 8'00100000
    163:     4 22'--------------10101011   ->     4 8'00100000
    164:     4 22'--------------0-101011   ->     4 8'00100000
    165:     4 22'--------------100-1-11   ->     4 8'00100000
    166:     4 22'--------------0-0-1-11   ->     4 8'00100000
    167:     4 22'--------------101011-1   ->     4 8'00100000
    168:     4 22'--------------0-1011-1   ->     4 8'00100000
    169:     4 22'--------------10111--1   ->     4 8'00100000
    170:     4 22'--------------0-111--1   ->     4 8'00100000
    171:     5 22'----------------11000-   ->     0 8'01000000
    172:     5 22'----------------1-010-   ->     0 8'01000000
    173:     5 22'------------------0-1-   ->     0 8'01000000
    174:     5 22'----------------10-000   ->     1 8'01000000
    175:     5 22'----------------0---00   ->     1 8'01000000
    176:     5 22'----------------101010   ->     1 8'01000000
    177:     5 22'----------------0-1-10   ->     1 8'01000000
    178:     5 22'----------------1011-0   ->     1 8'01000000
    179:     5 22'----------------111--0   ->     1 8'01000000
    180:     5 22'--------------1110-001   ->     1 8'01000000
    181:     5 22'--------------110---01   ->     1 8'01000000
    182:     5 22'--------------11101011   ->     1 8'01000000
    183:     5 22'--------------110-1-11   ->     1 8'01000000
    184:     5 22'--------------111011-1   ->     1 8'01000000
    185:     5 22'--------------11111--1   ->     1 8'01000000
    186:     5 22'--------------1010-001   ->     5 8'01000000
    187:     5 22'--------------0-10-001   ->     5 8'01000000
    188:     5 22'--------------100---01   ->     5 8'01000000
    189:     5 22'--------------0-0---01   ->     5 8'01000000
    190:     5 22'--------------10101011   ->     5 8'01000000
    191:     5 22'--------------0-101011   ->     5 8'01000000
    192:     5 22'--------------100-1-11   ->     5 8'01000000
    193:     5 22'--------------0-0-1-11   ->     5 8'01000000
    194:     5 22'--------------101011-1   ->     5 8'01000000
    195:     5 22'--------------0-1011-1   ->     5 8'01000000
    196:     5 22'--------------10111--1   ->     5 8'01000000
    197:     5 22'--------------0-111--1   ->     5 8'01000000

-------------------------------------

9.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc.cpu.cpu_state$7361' from module `\hardware'.

9.21. Executing OPT pass (performing simple optimizations).

9.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~3 debug messages>

9.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

9.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

9.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

9.21.5. Finished fast OPT passes.

9.22. Executing MEMORY pass.

9.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:215$211' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:234$1940' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:235$1941' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:236$1942' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:237$1943' in module `\hardware': merged $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209' in module `\hardware': merged address $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$210' in module `\hardware': merged address $dff to cell.
Checking cell `$techmap\soc.memory.$memrd$\mem$picosoc.v:233$1939' in module `\hardware': merged data $dff to cell.

9.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 13 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

9.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory hardware.soc.memory.mem by address:
  New clock domain: posedge \clk_16mhz
    Port 0 ($techmap\soc.memory.$memwr$\mem$picosoc.v:234$1940) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\soc.memory.$memwr$\mem$picosoc.v:235$1941) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\soc.memory.$memwr$\mem$picosoc.v:236$1942) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\soc.memory.$memwr$\mem$picosoc.v:237$1943) has addr \soc.cpu.mem_addr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

9.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\soc.cpu.cpuregs.regs' in module `\hardware':
  $techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:215$211 ($memwr)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:218$210 ($memrd)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:217$209 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\soc.memory.mem' in module `\hardware':
  $techmap\soc.memory.$memwr$\mem$picosoc.v:237$1943 ($memwr)
  $techmap\soc.memory.$memrd$\mem$picosoc.v:233$1939 ($memrd)

9.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing hardware.soc.cpu.cpuregs.regs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 2 rules:
    Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_16mhz.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: soc.cpu.cpuregs.regs.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: soc.cpu.cpuregs.regs.0.0.1
        Adding extra logic for transparent port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: soc.cpu.cpuregs.regs.1.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: soc.cpu.cpuregs.regs.1.0.1
        Adding extra logic for transparent port A1.2.
Processing hardware.soc.memory.mem:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_16mhz.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_16mhz.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: soc.memory.mem.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: soc.memory.mem.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: soc.memory.mem.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: soc.memory.mem.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: soc.memory.mem.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: soc.memory.mem.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: soc.memory.mem.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: soc.memory.mem.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: soc.memory.mem.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: soc.memory.mem.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: soc.memory.mem.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: soc.memory.mem.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: soc.memory.mem.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: soc.memory.mem.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: soc.memory.mem.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: soc.memory.mem.15.0.0

9.25. Executing TECHMAP pass (map to technology primitives).

9.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

9.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~122 debug messages>

9.26. Executing ICE40_BRAMINIT pass.

9.27. Executing OPT pass (performing simple optimizations).

9.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~196 debug messages>

9.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~38 debug messages>
Removed a total of 12 cells.

9.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

9.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 24 unused cells and 631 unused wires.
<suppressed ~28 debug messages>

9.27.5. Finished fast OPT passes.

9.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

9.29. Executing OPT pass (performing simple optimizations).

9.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/6 on $pmux $techmap\soc.cpu.$procmux$3351.
    dead port 4/6 on $pmux $techmap\soc.cpu.$procmux$3351.
    dead port 3/6 on $pmux $techmap\soc.cpu.$procmux$3598.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3614.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3614.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3880.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3880.
    dead port 1/5 on $pmux $techmap\soc.cpu.$procmux$3882.
    dead port 2/5 on $pmux $techmap\soc.cpu.$procmux$3882.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3892.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$3892.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$3892.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4090.
    dead port 3/5 on $pmux $techmap\soc.cpu.$procmux$4115.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4124.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$4124.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$4124.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4129.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$4129.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$4129.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$4133.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4133.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$4136.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4136.
Removed 24 multiplexer ports.
<suppressed ~287 debug messages>

9.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6884: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6880: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [3] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$7962: { $auto$fsm_map.cc:118:implement_pattern_cache$7952 $auto$fsm_map.cc:118:implement_pattern_cache$7948 $auto$fsm_map.cc:118:implement_pattern_cache$7944 $auto$fsm_map.cc:118:implement_pattern_cache$7940 $auto$fsm_map.cc:118:implement_pattern_cache$7936 $auto$fsm_map.cc:118:implement_pattern_cache$7932 $auto$fsm_map.cc:118:implement_pattern_cache$7928 $auto$fsm_map.cc:118:implement_pattern_cache$7924 $auto$fsm_map.cc:118:implement_pattern_cache$7920 $auto$fsm_map.cc:118:implement_pattern_cache$7916 $auto$fsm_map.cc:118:implement_pattern_cache$7912 $auto$fsm_map.cc:118:implement_pattern_cache$7908 $auto$fsm_map.cc:118:implement_pattern_cache$7904 $auto$fsm_map.cc:118:implement_pattern_cache$7900 $auto$fsm_map.cc:118:implement_pattern_cache$7896 $auto$fsm_map.cc:118:implement_pattern_cache$7892 $auto$fsm_map.cc:118:implement_pattern_cache$7956 $auto$fsm_map.cc:118:implement_pattern_cache$7960 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$7694: { $auto$fsm_map.cc:118:implement_pattern_cache$7500 $auto$fsm_map.cc:118:implement_pattern_cache$7512 $auto$fsm_map.cc:118:implement_pattern_cache$7504 $auto$fsm_map.cc:118:implement_pattern_cache$7588 $auto$fsm_map.cc:118:implement_pattern_cache$7692 $auto$fsm_map.cc:118:implement_pattern_cache$7688 $auto$fsm_map.cc:118:implement_pattern_cache$7684 $auto$fsm_map.cc:118:implement_pattern_cache$7680 $auto$fsm_map.cc:118:implement_pattern_cache$7676 $auto$fsm_map.cc:118:implement_pattern_cache$7672 $auto$fsm_map.cc:118:implement_pattern_cache$7592 $auto$fsm_map.cc:118:implement_pattern_cache$7668 $auto$fsm_map.cc:118:implement_pattern_cache$7664 $auto$fsm_map.cc:118:implement_pattern_cache$7660 $auto$fsm_map.cc:118:implement_pattern_cache$7656 $auto$fsm_map.cc:118:implement_pattern_cache$7650 $auto$fsm_map.cc:118:implement_pattern_cache$7646 $auto$fsm_map.cc:118:implement_pattern_cache$7642 $auto$fsm_map.cc:118:implement_pattern_cache$7638 $auto$fsm_map.cc:118:implement_pattern_cache$7634 $auto$fsm_map.cc:118:implement_pattern_cache$7630 $auto$fsm_map.cc:118:implement_pattern_cache$7626 $auto$fsm_map.cc:118:implement_pattern_cache$7622 $auto$fsm_map.cc:118:implement_pattern_cache$7618 $auto$fsm_map.cc:118:implement_pattern_cache$7614 $auto$fsm_map.cc:118:implement_pattern_cache$7608 $auto$fsm_map.cc:118:implement_pattern_cache$7604 $auto$fsm_map.cc:118:implement_pattern_cache$7530 $auto$fsm_map.cc:118:implement_pattern_cache$7562 $auto$fsm_map.cc:118:implement_pattern_cache$7534 $auto$fsm_map.cc:118:implement_pattern_cache$7508 $auto$fsm_map.cc:118:implement_pattern_cache$7558 $auto$fsm_map.cc:118:implement_pattern_cache$7496 $auto$fsm_map.cc:118:implement_pattern_cache$7542 $auto$fsm_map.cc:118:implement_pattern_cache$7546 $auto$fsm_map.cc:118:implement_pattern_cache$7554 $auto$fsm_map.cc:118:implement_pattern_cache$7596 $auto$fsm_map.cc:74:implement_pattern_cache$7434 $auto$fsm_map.cc:118:implement_pattern_cache$7492 $auto$fsm_map.cc:118:implement_pattern_cache$7584 $auto$fsm_map.cc:118:implement_pattern_cache$7580 $auto$fsm_map.cc:118:implement_pattern_cache$7474 $auto$fsm_map.cc:118:implement_pattern_cache$7516 $auto$fsm_map.cc:118:implement_pattern_cache$7576 $auto$fsm_map.cc:118:implement_pattern_cache$7520 $auto$fsm_map.cc:74:implement_pattern_cache$7432 $auto$fsm_map.cc:74:implement_pattern_cache$7430 $auto$fsm_map.cc:118:implement_pattern_cache$7600 $auto$fsm_map.cc:118:implement_pattern_cache$7566 $auto$fsm_map.cc:118:implement_pattern_cache$7478 $auto$fsm_map.cc:118:implement_pattern_cache$7550 $auto$fsm_map.cc:118:implement_pattern_cache$7538 $auto$fsm_map.cc:118:implement_pattern_cache$7482 $auto$fsm_map.cc:118:implement_pattern_cache$7488 $auto$fsm_map.cc:118:implement_pattern_cache$7524 $auto$fsm_map.cc:118:implement_pattern_cache$7450 $auto$fsm_map.cc:118:implement_pattern_cache$7446 $auto$fsm_map.cc:74:implement_pattern_cache$7440 $auto$fsm_map.cc:74:implement_pattern_cache$7438 $auto$fsm_map.cc:74:implement_pattern_cache$7436 $auto$fsm_map.cc:118:implement_pattern_cache$7470 $auto$fsm_map.cc:118:implement_pattern_cache$7466 $auto$fsm_map.cc:118:implement_pattern_cache$7462 $auto$fsm_map.cc:118:implement_pattern_cache$7458 $auto$fsm_map.cc:118:implement_pattern_cache$7572 $auto$fsm_map.cc:118:implement_pattern_cache$7454 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$7429: { $auto$fsm_map.cc:118:implement_pattern_cache$7401 $auto$fsm_map.cc:118:implement_pattern_cache$7397 $auto$fsm_map.cc:118:implement_pattern_cache$7393 $auto$fsm_map.cc:118:implement_pattern_cache$7389 $auto$fsm_map.cc:118:implement_pattern_cache$7385 $auto$fsm_map.cc:118:implement_pattern_cache$7381 $auto$fsm_map.cc:118:implement_pattern_cache$7377 $auto$fsm_map.cc:74:implement_pattern_cache$7427 $auto$fsm_map.cc:74:implement_pattern_cache$7425 $auto$fsm_map.cc:74:implement_pattern_cache$7423 $auto$fsm_map.cc:118:implement_pattern_cache$7421 $auto$fsm_map.cc:118:implement_pattern_cache$7417 $auto$fsm_map.cc:118:implement_pattern_cache$7413 $auto$fsm_map.cc:118:implement_pattern_cache$7409 $auto$fsm_map.cc:118:implement_pattern_cache$7405 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$7655: { \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$8011:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$8014
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$8014 [0]
      New connections: $auto$rtlil.cc:1918:Mux$8014 [15:1] = { $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] $auto$rtlil.cc:1918:Mux$8014 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$8055:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$7975
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$7975 [0]
      New connections: $auto$rtlil.cc:1918:Mux$7975 [15:1] = { $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] $auto$rtlil.cc:1918:Mux$7975 [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$3343:
      Old ports: A=\soc.cpu.mem_rdata_word, B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:0] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7:0] }, Y=$techmap\soc.cpu.$procmux$3343_Y
      New ports: A=\soc.cpu.mem_rdata_word [31:8], B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] }, Y=$techmap\soc.cpu.$procmux$3343_Y [31:8]
      New connections: $techmap\soc.cpu.$procmux$3343_Y [7:0] = \soc.cpu.mem_rdata_word [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$3467:
      Old ports: A=\soc.cpu.latched_rd, B={ 1'1 \soc.cpu.latched_rd [4:0] }, Y=$techmap\soc.cpu.$procmux$3467_Y
      New ports: A=\soc.cpu.latched_rd [5], B=1'1, Y=$techmap\soc.cpu.$procmux$3467_Y [5]
      New connections: $techmap\soc.cpu.$procmux$3467_Y [4:0] = \soc.cpu.latched_rd [4:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4410:
      Old ports: A={ \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4410_Y
      New ports: A=\soc.cpu.mem_rdata_latched [31], B=\soc.cpu.mem_rdata_latched [12], Y=$techmap\soc.cpu.$procmux$4410_Y [0]
      New connections: $techmap\soc.cpu.$procmux$4410_Y [11:1] = { $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] $techmap\soc.cpu.$procmux$4410_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4438:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$7002 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7002 [1]
      New connections: $auto$wreduce.cc:454:run$7002 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4598:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$7003 [4:0] }, B={ 1'0 \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4598_Y
      New ports: A=$auto$wreduce.cc:454:run$7003 [4:0], B=\soc.cpu.mem_rdata_latched [6:2], Y=$techmap\soc.cpu.$procmux$4598_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4598_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4616:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4616_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4616_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4616_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4623:
      Old ports: A=\soc.cpu.mem_rdata_latched [19:12], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4623_Y
      New ports: A=\soc.cpu.mem_rdata_latched [19:13], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4623_Y [7:1]
      New connections: $techmap\soc.cpu.$procmux$4623_Y [0] = \soc.cpu.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4631:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$7005 [4:0] }, B=6'000001, Y=$techmap\soc.cpu.$procmux$4631_Y
      New ports: A=$auto$wreduce.cc:454:run$7005 [4:0], B=5'00001, Y=$techmap\soc.cpu.$procmux$4631_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4631_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4648:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4648_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4648_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4648_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4666:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4666_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4666_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4666_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$5283:
      Old ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 4'0000 }, Y=$techmap\soc.cpu.$procmux$5283_Y
      New ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 1'0 }, Y={ $techmap\soc.cpu.$procmux$5283_Y [4] $techmap\soc.cpu.$procmux$5283_Y [0] }
      New connections: $techmap\soc.cpu.$procmux$5283_Y [3:1] = { $techmap\soc.cpu.$procmux$5283_Y [0] $techmap\soc.cpu.$procmux$5283_Y [0] $techmap\soc.cpu.$procmux$5283_Y [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$5450:
      Old ports: A=\soc.cpu.reg_op2, B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata
      New ports: A=\soc.cpu.reg_op2 [31:8], B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata [31:8]
      New connections: \soc.cpu.mem_la_wdata [7:0] = \soc.cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1295$2413:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$7012 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$7012 [2:1]
      New connections: $auto$wreduce.cc:454:run$7012 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1519$2496:
      Old ports: A=2'00, B=2'10, Y=$techmap\soc.cpu.$ternary$picorv32.v:1519$2496_Y
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.$ternary$picorv32.v:1519$2496_Y [1]
      New connections: $techmap\soc.cpu.$ternary$picorv32.v:1519$2496_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1530$2503:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$7013 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$7013 [2:1]
      New connections: $auto$wreduce.cc:454:run$7013 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:365$2022:
      Old ports: A={ \soc.cpu.reg_op1 [31:2] 2'00 }, B={ $techmap\soc.cpu.$add$picorv32.v:365$2021_Y 2'00 }, Y=\soc.cpu.mem_la_addr
      New ports: A=\soc.cpu.reg_op1 [31:2], B=$techmap\soc.cpu.$add$picorv32.v:365$2021_Y, Y=\soc.cpu.mem_la_addr [31:2]
      New connections: \soc.cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:394$2037:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\soc.cpu.$ternary$picorv32.v:394$2037_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\soc.cpu.$ternary$picorv32.v:394$2037_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:394$2037_Y [0] }
      New connections: { $techmap\soc.cpu.$ternary$picorv32.v:394$2037_Y [3] $techmap\soc.cpu.$ternary$picorv32.v:394$2037_Y [1] } = { $techmap\soc.cpu.$ternary$picorv32.v:394$2037_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:394$2037_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:474$2055:
      Old ports: A=6'000000, B=6'100000, Y=$auto$wreduce.cc:454:run$7014 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7014 [5]
      New connections: $auto$wreduce.cc:454:run$7014 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:600$2099:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$7015 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$7015 [0]
      New connections: $auto$wreduce.cc:454:run$7015 [1] = $auto$wreduce.cc:454:run$7015 [0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5635:
      Old ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] 3'000 \soc.cpu.pcpi_mul.next_rdt [55] 3'000 \soc.cpu.pcpi_mul.next_rdt [51] 3'000 \soc.cpu.pcpi_mul.next_rdt [47] 3'000 \soc.cpu.pcpi_mul.next_rdt [43] 3'000 \soc.cpu.pcpi_mul.next_rdt [39] 3'000 \soc.cpu.pcpi_mul.next_rdt [35] 3'000 \soc.cpu.pcpi_mul.next_rdt [31] 3'000 \soc.cpu.pcpi_mul.next_rdt [27] 3'000 \soc.cpu.pcpi_mul.next_rdt [23] 3'000 \soc.cpu.pcpi_mul.next_rdt [19] 3'000 \soc.cpu.pcpi_mul.next_rdt [15] 3'000 \soc.cpu.pcpi_mul.next_rdt [11] 3'000 \soc.cpu.pcpi_mul.next_rdt [7] 3'000 \soc.cpu.pcpi_mul.next_rdt [3] 4'0000 }, B=61'0000000000000000000000000000000000000000000000000000000000000, Y=$auto$wreduce.cc:454:run$7018 [60:0]
      New ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] \soc.cpu.pcpi_mul.next_rdt [55] \soc.cpu.pcpi_mul.next_rdt [51] \soc.cpu.pcpi_mul.next_rdt [47] \soc.cpu.pcpi_mul.next_rdt [43] \soc.cpu.pcpi_mul.next_rdt [39] \soc.cpu.pcpi_mul.next_rdt [35] \soc.cpu.pcpi_mul.next_rdt [31] \soc.cpu.pcpi_mul.next_rdt [27] \soc.cpu.pcpi_mul.next_rdt [23] \soc.cpu.pcpi_mul.next_rdt [19] \soc.cpu.pcpi_mul.next_rdt [15] \soc.cpu.pcpi_mul.next_rdt [11] \soc.cpu.pcpi_mul.next_rdt [7] \soc.cpu.pcpi_mul.next_rdt [3] }, B=15'000000000000000, Y={ $auto$wreduce.cc:454:run$7018 [60] $auto$wreduce.cc:454:run$7018 [56] $auto$wreduce.cc:454:run$7018 [52] $auto$wreduce.cc:454:run$7018 [48] $auto$wreduce.cc:454:run$7018 [44] $auto$wreduce.cc:454:run$7018 [40] $auto$wreduce.cc:454:run$7018 [36] $auto$wreduce.cc:454:run$7018 [32] $auto$wreduce.cc:454:run$7018 [28] $auto$wreduce.cc:454:run$7018 [24] $auto$wreduce.cc:454:run$7018 [20] $auto$wreduce.cc:454:run$7018 [16] $auto$wreduce.cc:454:run$7018 [12] $auto$wreduce.cc:454:run$7018 [8] $auto$wreduce.cc:454:run$7018 [4] }
      New connections: { $auto$wreduce.cc:454:run$7018 [59:57] $auto$wreduce.cc:454:run$7018 [55:53] $auto$wreduce.cc:454:run$7018 [51:49] $auto$wreduce.cc:454:run$7018 [47:45] $auto$wreduce.cc:454:run$7018 [43:41] $auto$wreduce.cc:454:run$7018 [39:37] $auto$wreduce.cc:454:run$7018 [35:33] $auto$wreduce.cc:454:run$7018 [31:29] $auto$wreduce.cc:454:run$7018 [27:25] $auto$wreduce.cc:454:run$7018 [23:21] $auto$wreduce.cc:454:run$7018 [19:17] $auto$wreduce.cc:454:run$7018 [15:13] $auto$wreduce.cc:454:run$7018 [11:9] $auto$wreduce.cc:454:run$7018 [7:5] $auto$wreduce.cc:454:run$7018 [3:0] } = 46'0000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5648:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op2 }, B={ \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 }, Y=$techmap\soc.cpu.pcpi_mul.$procmux$5648_Y
      New ports: A=1'0, B=\soc.cpu.reg_op2 [31], Y=$techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32]
      New connections: { $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [63:33] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [31:0] } = { $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5648_Y [32] \soc.cpu.reg_op2 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$5657:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op1 }, B={ \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 }, Y=$techmap\soc.cpu.pcpi_mul.$procmux$5657_Y
      New ports: A=1'0, B=\soc.cpu.reg_op1 [31], Y=$techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32]
      New connections: { $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [63:33] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [31:0] } = { $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [32] \soc.cpu.reg_op1 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$ternary$picorv32.v:2219$997:
      Old ports: A=6'011110, B=6'111110, Y=$auto$wreduce.cc:454:run$7020 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$7020 [5]
      New connections: $auto$wreduce.cc:454:run$7020 [4:0] = 5'11110
    Consolidated identical input bits for $mux cell $techmap\soc.simpleuart.$ternary$simpleuart.v:53$138:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do [8:0]
      New connections: \soc.simpleuart_reg_dat_do [31:9] = { \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.spimemio.$procmux$6404:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$techmap\soc.spimemio.$procmux$6404_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $techmap\soc.spimemio.$procmux$6404_Y [6] $techmap\soc.spimemio.$procmux$6404_Y [4:1] }
      New connections: { $techmap\soc.spimemio.$procmux$6404_Y [7] $techmap\soc.spimemio.$procmux$6404_Y [5] $techmap\soc.spimemio.$procmux$6404_Y [0] } = { $techmap\soc.spimemio.$procmux$6404_Y [3] $techmap\soc.spimemio.$procmux$6404_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$ternary$spimemio.v:316$83:
      Old ports: A=7'1111111, B=7'0100101, Y=$auto$wreduce.cc:454:run$7049 [6:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$7049 [1]
      New connections: { $auto$wreduce.cc:454:run$7049 [6:2] $auto$wreduce.cc:454:run$7049 [0] } = { $auto$wreduce.cc:454:run$7049 [1] 1'1 $auto$wreduce.cc:454:run$7049 [1] $auto$wreduce.cc:454:run$7049 [1] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5899:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$117_Y [3:1] \soc.spimemio.xfer.count [0] }, Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$117_Y [3:1], Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1]
      New connections: $techmap\soc.spimemio.xfer.$5\next_count[3:0] [0] = \soc.spimemio.xfer.count [0]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5940:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$105_Y [3:2] \soc.spimemio.xfer.count [1:0] }, Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:2], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$105_Y [3:2], Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0] [3:2]
      New connections: $techmap\soc.spimemio.xfer.$4\next_count[3:0] [1:0] = \soc.spimemio.xfer.count [1:0]
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.$ternary$picosoc.v:114$1180:
      Old ports: A=0, B=\soc.simpleuart_reg_dat_do, Y=$techmap\soc.$ternary$picosoc.v:114$1180_Y
      New ports: A=9'000000000, B=\soc.simpleuart_reg_dat_do [8:0], Y=$techmap\soc.$ternary$picosoc.v:114$1180_Y [8:0]
      New connections: $techmap\soc.$ternary$picosoc.v:114$1180_Y [31:9] = { $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] $techmap\soc.$ternary$picosoc.v:114$1180_Y [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4594:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7004 [4:0] $techmap\soc.cpu.$procmux$4598_Y 1'0 \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4594_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7004 [4:0] $techmap\soc.cpu.$procmux$4598_Y [4:0] \soc.cpu.mem_rdata_latched [6:2] }, Y=$techmap\soc.cpu.$procmux$4594_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4594_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4633:
      Old ports: A=$techmap\soc.cpu.$procmux$4631_Y, B={ 1'0 \soc.cpu.mem_rdata_latched [11:7] }, Y=$techmap\soc.cpu.$procmux$4633_Y
      New ports: A=$techmap\soc.cpu.$procmux$4631_Y [4:0], B=\soc.cpu.mem_rdata_latched [11:7], Y=$techmap\soc.cpu.$procmux$4633_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4633_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4650:
      Old ports: A=$techmap\soc.cpu.$procmux$4648_Y, B={ 1'0 $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4650_Y
      New ports: A=$techmap\soc.cpu.$procmux$4648_Y [4:0], B={ $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4650_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4650_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$procmux$6394:
      Old ports: A={ 1'1 $auto$wreduce.cc:454:run$7049 [6:0] }, B={ 4'0000 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6394_Y
      New ports: A={ 1'1 $auto$wreduce.cc:454:run$7049 [1] $auto$wreduce.cc:454:run$7049 [1] 1'1 $auto$wreduce.cc:454:run$7049 [1] 1'1 }, B={ 2'00 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6394_Y [5:0]
      New connections: $techmap\soc.spimemio.$procmux$6394_Y [7:6] = $techmap\soc.spimemio.$procmux$6394_Y [5:4]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$6016:
      Old ports: A=\soc.spimemio.xfer.count, B=$techmap\soc.spimemio.xfer.$5\next_count[3:0], Y=$techmap\soc.spimemio.xfer.$procmux$6016_Y
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1], Y=$techmap\soc.spimemio.xfer.$procmux$6016_Y [3:1]
      New connections: $techmap\soc.spimemio.xfer.$procmux$6016_Y [0] = \soc.spimemio.xfer.count [0]
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4635:
      Old ports: A=6'000000, B={ 1'0 $auto$wreduce.cc:454:run$7007 [4:0] 1'0 $auto$wreduce.cc:454:run$7006 [4:0] $techmap\soc.cpu.$procmux$4633_Y }, Y=$techmap\soc.cpu.$procmux$4635_Y
      New ports: A=5'00000, B={ $auto$wreduce.cc:454:run$7007 [4:0] $auto$wreduce.cc:454:run$7006 [4:0] $techmap\soc.cpu.$procmux$4633_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4635_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4635_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4652:
      Old ports: A=$techmap\soc.cpu.$procmux$4650_Y, B={ 1'0 $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4652_Y
      New ports: A=$techmap\soc.cpu.$procmux$4650_Y [4:0], B={ $auto$wreduce.cc:454:run$6997 [4:3] \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4652_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4652_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4654:
      Old ports: A=6'000000, B={ 7'0000010 \soc.cpu.mem_rdata_latched [11:7] 1'0 $auto$wreduce.cc:454:run$7008 [4:0] $techmap\soc.cpu.$procmux$4652_Y }, Y=$techmap\soc.cpu.$procmux$4654_Y
      New ports: A=5'00000, B={ 5'00001 \soc.cpu.mem_rdata_latched [11:7] $auto$wreduce.cc:454:run$7008 [4:0] $techmap\soc.cpu.$procmux$4652_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4654_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4654_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4643:
      Old ports: A=6'000000, B={ 1'0 $techmap\soc.cpu.$procmux$4666_Y [4:0] $techmap\soc.cpu.$procmux$4654_Y 1'0 $techmap\soc.cpu.$procmux$4635_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4643_Y
      New ports: A=5'00000, B={ $techmap\soc.cpu.$procmux$4666_Y [4:0] $techmap\soc.cpu.$procmux$4654_Y [4:0] $techmap\soc.cpu.$procmux$4635_Y [4:0] }, Y=$techmap\soc.cpu.$procmux$4643_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4643_Y [5] = 1'0
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4670:
      Old ports: A={ 1'0 \soc.cpu.mem_rdata_latched [11:7] }, B=$techmap\soc.cpu.$procmux$4643_Y, Y=$techmap\soc.cpu.$procmux$4670_Y
      New ports: A=\soc.cpu.mem_rdata_latched [11:7], B=$techmap\soc.cpu.$procmux$4643_Y [4:0], Y=$techmap\soc.cpu.$procmux$4670_Y [4:0]
      New connections: $techmap\soc.cpu.$procmux$4670_Y [5] = 1'0
  Optimizing cells in module \hardware.
Performed a total of 47 changes.

9.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 6 unused cells and 18 unused wires.
<suppressed ~8 debug messages>

9.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.9. Rerunning OPT passes. (Maybe there is more to do..)

9.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~285 debug messages>

9.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4169:
      Old ports: A=$techmap\soc.cpu.$3\current_pc[31:0], B=$techmap\soc.cpu.$add$picorv32.v:1530$2504_Y, Y=$techmap\soc.cpu.$procmux$4169_Y
      New ports: A=$techmap\soc.cpu.$3\current_pc[31:0] [31:1], B=$techmap\soc.cpu.$add$picorv32.v:1530$2504_Y [31:1], Y=$techmap\soc.cpu.$procmux$4169_Y [31:1]
      New connections: $techmap\soc.cpu.$procmux$4169_Y [0] = $techmap\soc.cpu.$3\current_pc[31:0] [0]
  Optimizing cells in module \hardware.
Performed a total of 1 changes.

9.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

9.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.16. Rerunning OPT passes. (Maybe there is more to do..)

9.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hardware..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~285 debug messages>

9.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hardware.
Performed a total of 0 changes.

9.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

9.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.29.23. Finished OPT passes. (There is nothing left to do.)

9.30. Executing ICE40_WRAPCARRY pass (wrap carries).

9.31. Executing TECHMAP pass (map to technology primitives).

9.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

9.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $lut.
Using extmapper maccmap for cells of type $macc.
  add \soc.cpu.pcpi_mul.rd [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [11:8] (4 bits, unsigned)
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=24\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=26\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=63\Y_WIDTH=63 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=13 for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
  add \soc.cpu.pcpi_mul.rd [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [35:32] (4 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=23 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=4 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.
<suppressed ~4953 debug messages>

9.32. Executing ICE40_OPT pass (performing simple optimizations).

9.32.1. Running ICE40 specific optimizations.

9.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~3716 debug messages>

9.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~6405 debug messages>
Removed a total of 2135 cells.

9.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 820 unused cells and 3905 unused wires.
<suppressed ~821 debug messages>

9.32.6. Rerunning OPT passes. (Removed registers in this run.)

9.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7217.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7228.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7233.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7249.slice[0].fadd: CO=\clock.counterI [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7252.slice[0].fadd: CO=\clock.counterO [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7258.slice[0].fadd: CO=\soc.cpu.count_cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7264.slice[0].fadd: CO=\soc.cpu.count_instr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7302.slice[0].fadd: CO=\soc.cpu.pcpi_timeout_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7305.slice[0].fadd: CO=\soc.cpu.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7314.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7314.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7317.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7285.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7320.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7320.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7323.slice[0].fadd: CO=$auto$alumacc.cc:474:replace_alu$7323.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7341.slice[0].fadd: CO=\soc.spimemio.rd_addr [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7341.slice[22].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7344.slice[0].fadd: CO=\soc.simpleuart.send_bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7347.slice[0].fadd: CO=\soc.simpleuart.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7350.slice[0].fadd: CO=\soc.simpleuart.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7353.slice[0].fadd: CO=\soc.simpleuart.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7356.slice[0].fadd: CO=\soc.cpu.pcpi_mul.mul_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$11744.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23524.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23531.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23558.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23566.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23573.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23600.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23607.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23615.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23622.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23651.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23658.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23666.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23673.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23707.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$maccmap.cc:240:synth$23714.slice[0].fadd: CO=1'0

9.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~48 debug messages>

9.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 2 unused cells and 1 unused wires.
<suppressed ~3 debug messages>

9.32.12. Rerunning OPT passes. (Removed registers in this run.)

9.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hardware.$auto$alumacc.cc:474:replace_alu$7228.slice[1].fadd: CO=$auto$alumacc.cc:474:replace_alu$7217.BB [25]

9.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

9.32.18. Rerunning OPT passes. (Removed registers in this run.)

9.32.19. Running ICE40 specific optimizations.

9.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

9.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.32.24. Finished OPT passes. (There is nothing left to do.)

9.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

9.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module hardware:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12836 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [0] -> \soc.cpu.mem_rdata_q [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12837 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [1] -> \soc.cpu.mem_rdata_q [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12838 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [2] -> \soc.cpu.mem_rdata_q [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12839 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [3] -> \soc.cpu.mem_rdata_q [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12840 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [4] -> \soc.cpu.mem_rdata_q [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12841 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [5] -> \soc.cpu.mem_rdata_q [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12842 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [6] -> \soc.cpu.mem_rdata_q [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12868 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [0] -> \soc.cpu.mem_16bit_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12869 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [1] -> \soc.cpu.mem_16bit_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12870 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [2] -> \soc.cpu.mem_16bit_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12871 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [3] -> \soc.cpu.mem_16bit_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12872 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [4] -> \soc.cpu.mem_16bit_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12873 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [5] -> \soc.cpu.mem_16bit_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12874 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [6] -> \soc.cpu.mem_16bit_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12875 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [7] -> \soc.cpu.mem_16bit_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12876 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [8] -> \soc.cpu.mem_16bit_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12877 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [9] -> \soc.cpu.mem_16bit_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12878 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [10] -> \soc.cpu.mem_16bit_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12879 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [11] -> \soc.cpu.mem_16bit_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12880 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [12] -> \soc.cpu.mem_16bit_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12881 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [13] -> \soc.cpu.mem_16bit_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12882 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [14] -> \soc.cpu.mem_16bit_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12883 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [15] -> \soc.cpu.mem_16bit_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12884 to $_DFFE_PP_ for $techmap\soc.cpu.$0\prefetched_high_word[0:0] -> \soc.cpu.prefetched_high_word.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12885 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_la_secondword[0:0] -> \soc.cpu.mem_la_secondword.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12886 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [0] -> \soc.cpu.mem_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12887 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [1] -> \soc.cpu.mem_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12888 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [0] -> \soc.cpu.mem_wstrb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12889 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [1] -> \soc.cpu.mem_wstrb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12890 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [2] -> \soc.cpu.mem_wstrb [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12891 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [3] -> \soc.cpu.mem_wstrb [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12892 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [0] -> \soc.cpu.mem_wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12893 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [1] -> \soc.cpu.mem_wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12894 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [2] -> \soc.cpu.mem_wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12895 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [3] -> \soc.cpu.mem_wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12896 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [4] -> \soc.cpu.mem_wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12897 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [5] -> \soc.cpu.mem_wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12898 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [6] -> \soc.cpu.mem_wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12899 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [7] -> \soc.cpu.mem_wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12900 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [8] -> \soc.cpu.mem_wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12901 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [9] -> \soc.cpu.mem_wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12902 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [10] -> \soc.cpu.mem_wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12903 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [11] -> \soc.cpu.mem_wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12904 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [12] -> \soc.cpu.mem_wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12905 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [13] -> \soc.cpu.mem_wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12906 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [14] -> \soc.cpu.mem_wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12907 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [15] -> \soc.cpu.mem_wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12908 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [16] -> \soc.cpu.mem_wdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12909 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [17] -> \soc.cpu.mem_wdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12910 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [18] -> \soc.cpu.mem_wdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12911 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [19] -> \soc.cpu.mem_wdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12912 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [20] -> \soc.cpu.mem_wdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12913 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [21] -> \soc.cpu.mem_wdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12914 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [22] -> \soc.cpu.mem_wdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12915 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [23] -> \soc.cpu.mem_wdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12916 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [24] -> \soc.cpu.mem_wdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12917 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [25] -> \soc.cpu.mem_wdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12918 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [26] -> \soc.cpu.mem_wdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12919 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [27] -> \soc.cpu.mem_wdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12920 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [28] -> \soc.cpu.mem_wdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12921 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [29] -> \soc.cpu.mem_wdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12922 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [30] -> \soc.cpu.mem_wdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12923 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [31] -> \soc.cpu.mem_wdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12924 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [0] -> \soc.cpu.mem_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12925 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [1] -> \soc.cpu.mem_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12926 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [2] -> \soc.cpu.mem_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12927 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [3] -> \soc.cpu.mem_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12928 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [4] -> \soc.cpu.mem_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12929 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [5] -> \soc.cpu.mem_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12930 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [6] -> \soc.cpu.mem_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12931 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [7] -> \soc.cpu.mem_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12932 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [8] -> \soc.cpu.mem_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12933 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [9] -> \soc.cpu.mem_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12934 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [10] -> \soc.cpu.mem_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12935 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [11] -> \soc.cpu.mem_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12936 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [12] -> \soc.cpu.mem_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12937 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [13] -> \soc.cpu.mem_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12938 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [14] -> \soc.cpu.mem_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12939 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [15] -> \soc.cpu.mem_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12940 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [16] -> \soc.cpu.mem_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12941 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [17] -> \soc.cpu.mem_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12942 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [18] -> \soc.cpu.mem_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12943 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [19] -> \soc.cpu.mem_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12944 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [20] -> \soc.cpu.mem_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12945 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [21] -> \soc.cpu.mem_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12946 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [22] -> \soc.cpu.mem_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12947 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [23] -> \soc.cpu.mem_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12948 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [24] -> \soc.cpu.mem_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12949 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [25] -> \soc.cpu.mem_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12950 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [26] -> \soc.cpu.mem_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12951 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [27] -> \soc.cpu.mem_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12952 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [28] -> \soc.cpu.mem_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12953 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [29] -> \soc.cpu.mem_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12954 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [30] -> \soc.cpu.mem_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12955 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [31] -> \soc.cpu.mem_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12956 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_valid[0:0] -> \soc.cpu.mem_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12958 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_reg[0:0] -> \soc.cpu.is_alu_reg_reg.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12959 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_imm[0:0] -> \soc.cpu.is_alu_reg_imm.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12960 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_beq_bne_blt_bge_bltu_bgeu[0:0] -> \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12963 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_sb_sh_sw[0:0] -> \soc.cpu.is_sb_sh_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12964 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0] -> \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12965 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_slli_srli_srai[0:0] -> \soc.cpu.is_slli_srli_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12966 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_lb_lh_lw_lbu_lhu[0:0] -> \soc.cpu.is_lb_lh_lw_lbu_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12968 to $_DFFE_PP_ for $techmap\soc.cpu.$0\compressed_instr[0:0] -> \soc.cpu.compressed_instr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12969 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [0] -> \soc.cpu.decoded_imm_uj [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12970 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [1] -> \soc.cpu.decoded_imm_uj [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12971 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [2] -> \soc.cpu.decoded_imm_uj [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12972 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [3] -> \soc.cpu.decoded_imm_uj [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12973 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [4] -> \soc.cpu.decoded_imm_uj [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12974 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [5] -> \soc.cpu.decoded_imm_uj [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12975 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [6] -> \soc.cpu.decoded_imm_uj [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12976 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [7] -> \soc.cpu.decoded_imm_uj [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12977 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [8] -> \soc.cpu.decoded_imm_uj [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12978 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [9] -> \soc.cpu.decoded_imm_uj [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12979 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [10] -> \soc.cpu.decoded_imm_uj [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12980 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [11] -> \soc.cpu.decoded_imm_uj [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12981 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [12] -> \soc.cpu.decoded_imm_uj [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12982 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [13] -> \soc.cpu.decoded_imm_uj [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12983 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [14] -> \soc.cpu.decoded_imm_uj [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12984 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [15] -> \soc.cpu.decoded_imm_uj [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12985 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [16] -> \soc.cpu.decoded_imm_uj [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12986 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [17] -> \soc.cpu.decoded_imm_uj [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12987 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [18] -> \soc.cpu.decoded_imm_uj [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12988 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [19] -> \soc.cpu.decoded_imm_uj [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12989 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [20] -> \soc.cpu.decoded_imm_uj [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12990 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [21] -> \soc.cpu.decoded_imm_uj [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12991 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [22] -> \soc.cpu.decoded_imm_uj [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12992 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [23] -> \soc.cpu.decoded_imm_uj [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12993 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [24] -> \soc.cpu.decoded_imm_uj [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12994 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [25] -> \soc.cpu.decoded_imm_uj [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12995 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [26] -> \soc.cpu.decoded_imm_uj [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12996 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [27] -> \soc.cpu.decoded_imm_uj [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12997 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [28] -> \soc.cpu.decoded_imm_uj [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12998 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [29] -> \soc.cpu.decoded_imm_uj [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12999 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [30] -> \soc.cpu.decoded_imm_uj [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13000 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_uj[31:0] [31] -> \soc.cpu.decoded_imm_uj [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13001 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [0] -> \soc.cpu.decoded_imm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13002 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [1] -> \soc.cpu.decoded_imm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13003 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [2] -> \soc.cpu.decoded_imm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13004 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [3] -> \soc.cpu.decoded_imm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13005 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [4] -> \soc.cpu.decoded_imm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13006 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [5] -> \soc.cpu.decoded_imm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13007 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [6] -> \soc.cpu.decoded_imm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13008 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [7] -> \soc.cpu.decoded_imm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13009 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [8] -> \soc.cpu.decoded_imm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13010 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [9] -> \soc.cpu.decoded_imm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13011 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [10] -> \soc.cpu.decoded_imm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13012 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [11] -> \soc.cpu.decoded_imm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13013 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [12] -> \soc.cpu.decoded_imm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13014 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [13] -> \soc.cpu.decoded_imm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13015 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [14] -> \soc.cpu.decoded_imm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13016 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [15] -> \soc.cpu.decoded_imm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13017 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [16] -> \soc.cpu.decoded_imm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13018 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [17] -> \soc.cpu.decoded_imm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13019 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [18] -> \soc.cpu.decoded_imm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13020 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [19] -> \soc.cpu.decoded_imm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13021 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [20] -> \soc.cpu.decoded_imm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13022 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [21] -> \soc.cpu.decoded_imm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13023 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [22] -> \soc.cpu.decoded_imm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13024 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [23] -> \soc.cpu.decoded_imm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13025 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [24] -> \soc.cpu.decoded_imm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13026 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [25] -> \soc.cpu.decoded_imm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13027 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [26] -> \soc.cpu.decoded_imm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13028 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [27] -> \soc.cpu.decoded_imm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13029 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [28] -> \soc.cpu.decoded_imm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13030 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [29] -> \soc.cpu.decoded_imm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13031 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [30] -> \soc.cpu.decoded_imm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13032 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [31] -> \soc.cpu.decoded_imm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13038 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rs2[5:0] [5] -> \soc.cpu.decoded_rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13044 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rs1[5:0] [5] -> \soc.cpu.decoded_rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13045 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [0] -> \soc.cpu.decoded_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13046 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [1] -> \soc.cpu.decoded_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13047 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [2] -> \soc.cpu.decoded_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13048 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [3] -> \soc.cpu.decoded_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13049 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [4] -> \soc.cpu.decoded_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13050 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[5:0] [5] -> \soc.cpu.decoded_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13051 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_timer[0:0] -> \soc.cpu.instr_timer.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13052 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_waitirq[0:0] -> \soc.cpu.instr_waitirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13053 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_maskirq[0:0] -> \soc.cpu.instr_maskirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13054 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_retirq[0:0] -> \soc.cpu.instr_retirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13055 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_setq[0:0] -> \soc.cpu.instr_setq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13056 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_getq[0:0] -> \soc.cpu.instr_getq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13057 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ecall_ebreak[0:0] -> \soc.cpu.instr_ecall_ebreak.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13058 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstrh[0:0] -> \soc.cpu.instr_rdinstrh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13059 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstr[0:0] -> \soc.cpu.instr_rdinstr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13060 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycleh[0:0] -> \soc.cpu.instr_rdcycleh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13061 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycle[0:0] -> \soc.cpu.instr_rdcycle.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13062 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_and[0:0] -> \soc.cpu.instr_and.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13063 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_or[0:0] -> \soc.cpu.instr_or.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13064 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sra[0:0] -> \soc.cpu.instr_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13065 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srl[0:0] -> \soc.cpu.instr_srl.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13066 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xor[0:0] -> \soc.cpu.instr_xor.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13067 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltu[0:0] -> \soc.cpu.instr_sltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13068 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slt[0:0] -> \soc.cpu.instr_slt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13069 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sll[0:0] -> \soc.cpu.instr_sll.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13070 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sub[0:0] -> \soc.cpu.instr_sub.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13071 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_add[0:0] -> \soc.cpu.instr_add.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13072 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srai[0:0] -> \soc.cpu.instr_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13073 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srli[0:0] -> \soc.cpu.instr_srli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13074 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slli[0:0] -> \soc.cpu.instr_slli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13075 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_andi[0:0] -> \soc.cpu.instr_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13076 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ori[0:0] -> \soc.cpu.instr_ori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13077 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xori[0:0] -> \soc.cpu.instr_xori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13078 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltiu[0:0] -> \soc.cpu.instr_sltiu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13079 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slti[0:0] -> \soc.cpu.instr_slti.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13080 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_addi[0:0] -> \soc.cpu.instr_addi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13081 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sw[0:0] -> \soc.cpu.instr_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13082 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sh[0:0] -> \soc.cpu.instr_sh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13083 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sb[0:0] -> \soc.cpu.instr_sb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13084 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lhu[0:0] -> \soc.cpu.instr_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13085 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lbu[0:0] -> \soc.cpu.instr_lbu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13086 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lw[0:0] -> \soc.cpu.instr_lw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13087 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lh[0:0] -> \soc.cpu.instr_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13088 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lb[0:0] -> \soc.cpu.instr_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13089 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bgeu[0:0] -> \soc.cpu.instr_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13090 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bltu[0:0] -> \soc.cpu.instr_bltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13091 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bge[0:0] -> \soc.cpu.instr_bge.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13092 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_blt[0:0] -> \soc.cpu.instr_blt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13093 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bne[0:0] -> \soc.cpu.instr_bne.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13094 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_beq[0:0] -> \soc.cpu.instr_beq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13095 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jalr[0:0] -> \soc.cpu.instr_jalr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13096 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jal[0:0] -> \soc.cpu.instr_jal.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13097 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_auipc[0:0] -> \soc.cpu.instr_auipc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13098 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lui[0:0] -> \soc.cpu.instr_lui.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13099 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [0] -> \soc.cpu.pcpi_insn [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13100 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [1] -> \soc.cpu.pcpi_insn [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13101 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [2] -> \soc.cpu.pcpi_insn [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13102 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [3] -> \soc.cpu.pcpi_insn [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13103 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [4] -> \soc.cpu.pcpi_insn [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13104 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [5] -> \soc.cpu.pcpi_insn [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13105 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [6] -> \soc.cpu.pcpi_insn [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13111 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [12] -> \soc.cpu.pcpi_insn [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13112 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [13] -> \soc.cpu.pcpi_insn [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13113 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [14] -> \soc.cpu.pcpi_insn [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13124 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [25] -> \soc.cpu.pcpi_insn [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13125 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [26] -> \soc.cpu.pcpi_insn [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13126 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [27] -> \soc.cpu.pcpi_insn [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13127 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [28] -> \soc.cpu.pcpi_insn [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13128 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [29] -> \soc.cpu.pcpi_insn [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13129 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [30] -> \soc.cpu.pcpi_insn [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13130 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [31] -> \soc.cpu.pcpi_insn [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13166 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [0] -> \soc.cpu.pcpi_timeout_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13167 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [1] -> \soc.cpu.pcpi_timeout_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13168 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [2] -> \soc.cpu.pcpi_timeout_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13169 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [3] -> \soc.cpu.pcpi_timeout_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13170 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [0] -> \soc.cpu.latched_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13171 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [1] -> \soc.cpu.latched_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13172 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [2] -> \soc.cpu.latched_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13173 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [3] -> \soc.cpu.latched_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13174 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [4] -> \soc.cpu.latched_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13175 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[5:0] [5] -> \soc.cpu.latched_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13176 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lb[0:0] -> \soc.cpu.latched_is_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13177 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lh[0:0] -> \soc.cpu.latched_is_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13178 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_compr[0:0] -> \soc.cpu.latched_compr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13179 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_branch[0:0] -> \soc.cpu.latched_branch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13180 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_stalu[0:0] -> \soc.cpu.latched_stalu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13181 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_store[0:0] -> \soc.cpu.latched_store.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13182 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [0] -> \soc.cpu.irq_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13183 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [1] -> \soc.cpu.irq_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13186 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_wdata[0:0] -> \soc.cpu.mem_do_wdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13187 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rdata[0:0] -> \soc.cpu.mem_do_rdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13188 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rinst[0:0] -> \soc.cpu.mem_do_rinst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13189 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_prefetch[0:0] -> \soc.cpu.mem_do_prefetch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13190 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [0] -> \soc.cpu.mem_wordsize [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13191 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [1] -> \soc.cpu.mem_wordsize [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13225 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [1] -> \soc.cpu.irq_pending [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13227 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [3] -> \soc.cpu.irq_pending [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13228 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [4] -> \soc.cpu.irq_pending [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13229 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [5] -> \soc.cpu.irq_pending [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13230 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [6] -> \soc.cpu.irq_pending [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13231 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [7] -> \soc.cpu.irq_pending [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13232 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [8] -> \soc.cpu.irq_pending [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13233 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [9] -> \soc.cpu.irq_pending [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13234 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [10] -> \soc.cpu.irq_pending [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13235 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [11] -> \soc.cpu.irq_pending [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13236 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [12] -> \soc.cpu.irq_pending [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13237 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [13] -> \soc.cpu.irq_pending [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13238 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [14] -> \soc.cpu.irq_pending [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13239 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [15] -> \soc.cpu.irq_pending [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13240 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [16] -> \soc.cpu.irq_pending [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13241 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [17] -> \soc.cpu.irq_pending [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13242 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [18] -> \soc.cpu.irq_pending [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13243 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [19] -> \soc.cpu.irq_pending [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13244 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [20] -> \soc.cpu.irq_pending [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13245 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [21] -> \soc.cpu.irq_pending [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13246 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [22] -> \soc.cpu.irq_pending [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13247 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [23] -> \soc.cpu.irq_pending [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13248 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [24] -> \soc.cpu.irq_pending [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13249 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [25] -> \soc.cpu.irq_pending [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13250 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [26] -> \soc.cpu.irq_pending [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13251 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [27] -> \soc.cpu.irq_pending [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13252 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [28] -> \soc.cpu.irq_pending [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13253 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [29] -> \soc.cpu.irq_pending [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13254 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [30] -> \soc.cpu.irq_pending [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13255 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [31] -> \soc.cpu.irq_pending [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13256 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [0] -> \soc.cpu.irq_mask [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13257 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [1] -> \soc.cpu.irq_mask [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13258 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [2] -> \soc.cpu.irq_mask [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13259 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [3] -> \soc.cpu.irq_mask [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13260 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [4] -> \soc.cpu.irq_mask [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13261 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [5] -> \soc.cpu.irq_mask [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13262 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [6] -> \soc.cpu.irq_mask [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13263 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [7] -> \soc.cpu.irq_mask [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13264 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [8] -> \soc.cpu.irq_mask [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13265 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [9] -> \soc.cpu.irq_mask [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13266 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [10] -> \soc.cpu.irq_mask [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13267 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [11] -> \soc.cpu.irq_mask [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13268 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [12] -> \soc.cpu.irq_mask [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13269 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [13] -> \soc.cpu.irq_mask [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13270 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [14] -> \soc.cpu.irq_mask [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13271 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [15] -> \soc.cpu.irq_mask [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13272 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [16] -> \soc.cpu.irq_mask [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13273 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [17] -> \soc.cpu.irq_mask [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13274 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [18] -> \soc.cpu.irq_mask [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13275 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [19] -> \soc.cpu.irq_mask [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13276 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [20] -> \soc.cpu.irq_mask [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13277 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [21] -> \soc.cpu.irq_mask [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13278 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [22] -> \soc.cpu.irq_mask [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13279 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [23] -> \soc.cpu.irq_mask [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13280 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [24] -> \soc.cpu.irq_mask [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13281 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [25] -> \soc.cpu.irq_mask [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13282 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [26] -> \soc.cpu.irq_mask [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13283 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [27] -> \soc.cpu.irq_mask [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13284 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [28] -> \soc.cpu.irq_mask [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13285 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [29] -> \soc.cpu.irq_mask [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13286 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [30] -> \soc.cpu.irq_mask [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13287 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [31] -> \soc.cpu.irq_mask [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13288 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_active[0:0] -> \soc.cpu.irq_active.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13289 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_delay[0:0] -> \soc.cpu.irq_delay.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13322 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [0] -> \soc.cpu.reg_op2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13323 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [1] -> \soc.cpu.reg_op2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13324 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [2] -> \soc.cpu.reg_op2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13325 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [3] -> \soc.cpu.reg_op2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13326 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [4] -> \soc.cpu.reg_op2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13327 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [5] -> \soc.cpu.reg_op2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13328 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [6] -> \soc.cpu.reg_op2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13329 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [7] -> \soc.cpu.reg_op2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13330 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [8] -> \soc.cpu.reg_op2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13331 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [9] -> \soc.cpu.reg_op2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13332 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [10] -> \soc.cpu.reg_op2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13333 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [11] -> \soc.cpu.reg_op2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13334 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [12] -> \soc.cpu.reg_op2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13335 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [13] -> \soc.cpu.reg_op2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13336 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [14] -> \soc.cpu.reg_op2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13337 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [15] -> \soc.cpu.reg_op2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13338 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [16] -> \soc.cpu.reg_op2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13339 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [17] -> \soc.cpu.reg_op2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13340 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [18] -> \soc.cpu.reg_op2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13341 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [19] -> \soc.cpu.reg_op2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13342 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [20] -> \soc.cpu.reg_op2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13343 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [21] -> \soc.cpu.reg_op2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13344 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [22] -> \soc.cpu.reg_op2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13345 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [23] -> \soc.cpu.reg_op2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13346 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [24] -> \soc.cpu.reg_op2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13347 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [25] -> \soc.cpu.reg_op2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13348 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [26] -> \soc.cpu.reg_op2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13349 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [27] -> \soc.cpu.reg_op2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13350 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [28] -> \soc.cpu.reg_op2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13351 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [29] -> \soc.cpu.reg_op2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13352 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [30] -> \soc.cpu.reg_op2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13353 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [31] -> \soc.cpu.reg_op2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13354 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [0] -> \soc.cpu.reg_op1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13355 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [1] -> \soc.cpu.reg_op1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13356 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [2] -> \soc.cpu.reg_op1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13357 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [3] -> \soc.cpu.reg_op1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13358 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [4] -> \soc.cpu.reg_op1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13359 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [5] -> \soc.cpu.reg_op1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13360 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [6] -> \soc.cpu.reg_op1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13361 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [7] -> \soc.cpu.reg_op1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13362 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [8] -> \soc.cpu.reg_op1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13363 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [9] -> \soc.cpu.reg_op1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13364 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [10] -> \soc.cpu.reg_op1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13365 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [11] -> \soc.cpu.reg_op1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13366 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [12] -> \soc.cpu.reg_op1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13367 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [13] -> \soc.cpu.reg_op1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13368 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [14] -> \soc.cpu.reg_op1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13369 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [15] -> \soc.cpu.reg_op1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13370 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [16] -> \soc.cpu.reg_op1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13371 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [17] -> \soc.cpu.reg_op1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13372 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [18] -> \soc.cpu.reg_op1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13373 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [19] -> \soc.cpu.reg_op1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13374 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [20] -> \soc.cpu.reg_op1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13375 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [21] -> \soc.cpu.reg_op1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13376 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [22] -> \soc.cpu.reg_op1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13377 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [23] -> \soc.cpu.reg_op1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13378 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [24] -> \soc.cpu.reg_op1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13379 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [25] -> \soc.cpu.reg_op1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13380 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [26] -> \soc.cpu.reg_op1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13381 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [27] -> \soc.cpu.reg_op1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13382 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [28] -> \soc.cpu.reg_op1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13383 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [29] -> \soc.cpu.reg_op1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13384 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [30] -> \soc.cpu.reg_op1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13385 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [31] -> \soc.cpu.reg_op1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13386 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [0] -> \soc.cpu.reg_next_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13387 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [1] -> \soc.cpu.reg_next_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13388 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [2] -> \soc.cpu.reg_next_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13389 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [3] -> \soc.cpu.reg_next_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13390 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [4] -> \soc.cpu.reg_next_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13391 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [5] -> \soc.cpu.reg_next_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13392 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [6] -> \soc.cpu.reg_next_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13393 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [7] -> \soc.cpu.reg_next_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13394 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [8] -> \soc.cpu.reg_next_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13395 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [9] -> \soc.cpu.reg_next_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13396 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [10] -> \soc.cpu.reg_next_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13397 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [11] -> \soc.cpu.reg_next_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13398 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [12] -> \soc.cpu.reg_next_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13399 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [13] -> \soc.cpu.reg_next_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13400 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [14] -> \soc.cpu.reg_next_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13401 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [15] -> \soc.cpu.reg_next_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13402 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [16] -> \soc.cpu.reg_next_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13403 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [17] -> \soc.cpu.reg_next_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13404 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [18] -> \soc.cpu.reg_next_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13405 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [19] -> \soc.cpu.reg_next_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13406 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [20] -> \soc.cpu.reg_next_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13407 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [21] -> \soc.cpu.reg_next_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13408 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [22] -> \soc.cpu.reg_next_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13409 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [23] -> \soc.cpu.reg_next_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13410 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [24] -> \soc.cpu.reg_next_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13411 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [25] -> \soc.cpu.reg_next_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13412 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [26] -> \soc.cpu.reg_next_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13413 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [27] -> \soc.cpu.reg_next_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13414 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [28] -> \soc.cpu.reg_next_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13415 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [29] -> \soc.cpu.reg_next_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13416 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [30] -> \soc.cpu.reg_next_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13417 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [31] -> \soc.cpu.reg_next_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13418 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [0] -> \soc.cpu.reg_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13419 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [1] -> \soc.cpu.reg_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13420 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [2] -> \soc.cpu.reg_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13421 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [3] -> \soc.cpu.reg_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13422 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [4] -> \soc.cpu.reg_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13423 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [5] -> \soc.cpu.reg_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13424 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [6] -> \soc.cpu.reg_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13425 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [7] -> \soc.cpu.reg_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13426 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [8] -> \soc.cpu.reg_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13427 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [9] -> \soc.cpu.reg_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13428 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [10] -> \soc.cpu.reg_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13429 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [11] -> \soc.cpu.reg_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13430 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [12] -> \soc.cpu.reg_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13431 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [13] -> \soc.cpu.reg_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13432 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [14] -> \soc.cpu.reg_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13433 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [15] -> \soc.cpu.reg_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13434 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [16] -> \soc.cpu.reg_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13435 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [17] -> \soc.cpu.reg_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13436 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [18] -> \soc.cpu.reg_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13437 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [19] -> \soc.cpu.reg_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13438 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [20] -> \soc.cpu.reg_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13439 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [21] -> \soc.cpu.reg_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13440 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [22] -> \soc.cpu.reg_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13441 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [23] -> \soc.cpu.reg_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13442 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [24] -> \soc.cpu.reg_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13443 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [25] -> \soc.cpu.reg_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13444 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [26] -> \soc.cpu.reg_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13445 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [27] -> \soc.cpu.reg_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13446 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [28] -> \soc.cpu.reg_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13447 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [29] -> \soc.cpu.reg_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13448 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [30] -> \soc.cpu.reg_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13449 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [31] -> \soc.cpu.reg_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13450 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [0] -> \soc.cpu.count_instr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13451 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [1] -> \soc.cpu.count_instr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13452 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [2] -> \soc.cpu.count_instr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13453 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [3] -> \soc.cpu.count_instr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13454 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [4] -> \soc.cpu.count_instr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13455 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [5] -> \soc.cpu.count_instr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13456 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [6] -> \soc.cpu.count_instr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13457 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [7] -> \soc.cpu.count_instr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13458 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [8] -> \soc.cpu.count_instr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13459 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [9] -> \soc.cpu.count_instr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13460 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [10] -> \soc.cpu.count_instr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13461 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [11] -> \soc.cpu.count_instr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13462 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [12] -> \soc.cpu.count_instr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13463 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [13] -> \soc.cpu.count_instr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13464 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [14] -> \soc.cpu.count_instr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13465 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [15] -> \soc.cpu.count_instr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13466 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [16] -> \soc.cpu.count_instr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13467 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [17] -> \soc.cpu.count_instr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13468 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [18] -> \soc.cpu.count_instr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13469 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [19] -> \soc.cpu.count_instr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13470 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [20] -> \soc.cpu.count_instr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13471 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [21] -> \soc.cpu.count_instr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13472 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [22] -> \soc.cpu.count_instr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13473 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [23] -> \soc.cpu.count_instr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13474 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [24] -> \soc.cpu.count_instr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13475 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [25] -> \soc.cpu.count_instr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13476 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [26] -> \soc.cpu.count_instr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13477 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [27] -> \soc.cpu.count_instr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13478 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [28] -> \soc.cpu.count_instr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13479 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [29] -> \soc.cpu.count_instr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13480 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [30] -> \soc.cpu.count_instr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13481 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [31] -> \soc.cpu.count_instr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13482 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [32] -> \soc.cpu.count_instr [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13483 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [33] -> \soc.cpu.count_instr [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13484 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [34] -> \soc.cpu.count_instr [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13485 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [35] -> \soc.cpu.count_instr [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13486 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [36] -> \soc.cpu.count_instr [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13487 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [37] -> \soc.cpu.count_instr [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13488 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [38] -> \soc.cpu.count_instr [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13489 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [39] -> \soc.cpu.count_instr [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13490 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [40] -> \soc.cpu.count_instr [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13491 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [41] -> \soc.cpu.count_instr [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13492 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [42] -> \soc.cpu.count_instr [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13493 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [43] -> \soc.cpu.count_instr [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13494 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [44] -> \soc.cpu.count_instr [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13495 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [45] -> \soc.cpu.count_instr [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13496 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [46] -> \soc.cpu.count_instr [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13497 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [47] -> \soc.cpu.count_instr [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13498 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [48] -> \soc.cpu.count_instr [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13499 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [49] -> \soc.cpu.count_instr [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13500 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [50] -> \soc.cpu.count_instr [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13501 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [51] -> \soc.cpu.count_instr [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13502 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [52] -> \soc.cpu.count_instr [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13503 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [53] -> \soc.cpu.count_instr [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13504 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [54] -> \soc.cpu.count_instr [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13505 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [55] -> \soc.cpu.count_instr [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13506 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [56] -> \soc.cpu.count_instr [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13507 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [57] -> \soc.cpu.count_instr [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13508 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [58] -> \soc.cpu.count_instr [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13509 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [59] -> \soc.cpu.count_instr [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13510 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [60] -> \soc.cpu.count_instr [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13511 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [61] -> \soc.cpu.count_instr [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13512 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [62] -> \soc.cpu.count_instr [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13513 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [63] -> \soc.cpu.count_instr [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13578 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_valid[0:0] -> \soc.cpu.pcpi_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19910 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [0] -> \soc.simpleuart.cfg_divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19911 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [1] -> \soc.simpleuart.cfg_divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19912 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [2] -> \soc.simpleuart.cfg_divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19913 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [3] -> \soc.simpleuart.cfg_divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19914 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [4] -> \soc.simpleuart.cfg_divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19915 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [5] -> \soc.simpleuart.cfg_divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19916 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [6] -> \soc.simpleuart.cfg_divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19917 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [7] -> \soc.simpleuart.cfg_divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19918 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [8] -> \soc.simpleuart.cfg_divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19919 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [9] -> \soc.simpleuart.cfg_divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19920 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [10] -> \soc.simpleuart.cfg_divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19921 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [11] -> \soc.simpleuart.cfg_divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19922 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [12] -> \soc.simpleuart.cfg_divider [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19923 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [13] -> \soc.simpleuart.cfg_divider [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19924 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [14] -> \soc.simpleuart.cfg_divider [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19925 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [15] -> \soc.simpleuart.cfg_divider [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19926 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [16] -> \soc.simpleuart.cfg_divider [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19927 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [17] -> \soc.simpleuart.cfg_divider [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19928 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [18] -> \soc.simpleuart.cfg_divider [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19929 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [19] -> \soc.simpleuart.cfg_divider [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19930 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [20] -> \soc.simpleuart.cfg_divider [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19931 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [21] -> \soc.simpleuart.cfg_divider [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19932 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [22] -> \soc.simpleuart.cfg_divider [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19933 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [23] -> \soc.simpleuart.cfg_divider [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19934 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [24] -> \soc.simpleuart.cfg_divider [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19935 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [25] -> \soc.simpleuart.cfg_divider [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19936 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [26] -> \soc.simpleuart.cfg_divider [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19937 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [27] -> \soc.simpleuart.cfg_divider [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19938 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [28] -> \soc.simpleuart.cfg_divider [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19939 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [29] -> \soc.simpleuart.cfg_divider [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19940 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [30] -> \soc.simpleuart.cfg_divider [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19941 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [31] -> \soc.simpleuart.cfg_divider [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19943 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [0] -> \soc.simpleuart.recv_buf_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19944 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [1] -> \soc.simpleuart.recv_buf_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19945 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [2] -> \soc.simpleuart.recv_buf_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19946 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [3] -> \soc.simpleuart.recv_buf_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19947 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [4] -> \soc.simpleuart.recv_buf_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19948 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [5] -> \soc.simpleuart.recv_buf_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19949 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [6] -> \soc.simpleuart.recv_buf_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19950 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [7] -> \soc.simpleuart.recv_buf_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19951 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [0] -> \soc.simpleuart.recv_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19952 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [1] -> \soc.simpleuart.recv_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19953 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [2] -> \soc.simpleuart.recv_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19954 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [3] -> \soc.simpleuart.recv_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19955 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [4] -> \soc.simpleuart.recv_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19956 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [5] -> \soc.simpleuart.recv_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19957 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [6] -> \soc.simpleuart.recv_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19958 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [7] -> \soc.simpleuart.recv_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19991 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [0] -> \soc.simpleuart.recv_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19992 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [1] -> \soc.simpleuart.recv_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19993 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [2] -> \soc.simpleuart.recv_state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19994 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [3] -> \soc.simpleuart.recv_state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19995 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_dummy[0:0] -> \soc.simpleuart.send_dummy.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20028 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [0] -> \soc.simpleuart.send_bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20029 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [1] -> \soc.simpleuart.send_bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20030 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [2] -> \soc.simpleuart.send_bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20031 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [3] -> \soc.simpleuart.send_bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20032 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [0] -> \soc.simpleuart.send_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20033 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [1] -> \soc.simpleuart.send_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20034 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [2] -> \soc.simpleuart.send_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20035 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [3] -> \soc.simpleuart.send_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20036 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [4] -> \soc.simpleuart.send_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20037 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [5] -> \soc.simpleuart.send_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20038 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [6] -> \soc.simpleuart.send_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20039 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [7] -> \soc.simpleuart.send_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20040 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [8] -> \soc.simpleuart.send_pattern [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20041 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [9] -> \soc.simpleuart.send_pattern [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20615 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [0] -> \soc.spimemio.config_do [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20616 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [1] -> \soc.spimemio.config_do [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20617 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [2] -> \soc.spimemio.config_do [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20618 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [3] -> \soc.spimemio.config_do [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20619 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_clk[0:0] -> \soc.spimemio.config_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20620 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_csb[0:0] -> \soc.spimemio.config_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20621 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [0] -> \soc.spimemio.config_oe [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20622 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [1] -> \soc.spimemio.config_oe [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20623 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [2] -> \soc.spimemio.config_oe [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20624 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [3] -> \soc.spimemio.config_oe [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20625 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [0] -> \soc.spimemio.config_dummy [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20626 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [1] -> \soc.spimemio.config_dummy [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20627 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [2] -> \soc.spimemio.config_dummy [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20628 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [3] -> \soc.spimemio.config_dummy [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20629 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_cont[0:0] -> \soc.spimemio.config_cont.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20630 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_qspi[0:0] -> \soc.spimemio.config_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20631 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_ddr[0:0] -> \soc.spimemio.config_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20632 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_en[0:0] -> \soc.spimemio.config_en.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20638 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [0] -> \soc.spimemio.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20639 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [1] -> \soc.spimemio.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20640 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [2] -> \soc.spimemio.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20641 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [3] -> \soc.spimemio.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20642 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_inc[0:0] -> \soc.spimemio.rd_inc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20643 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_wait[0:0] -> \soc.spimemio.rd_wait.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20644 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_valid[0:0] -> \soc.spimemio.rd_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20645 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [0] -> \soc.spimemio.rd_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20646 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [1] -> \soc.spimemio.rd_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20647 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [2] -> \soc.spimemio.rd_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20648 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [3] -> \soc.spimemio.rd_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20649 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [4] -> \soc.spimemio.rd_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20650 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [5] -> \soc.spimemio.rd_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20651 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [6] -> \soc.spimemio.rd_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20652 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [7] -> \soc.spimemio.rd_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20653 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [8] -> \soc.spimemio.rd_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20654 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [9] -> \soc.spimemio.rd_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20655 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [10] -> \soc.spimemio.rd_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20656 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [11] -> \soc.spimemio.rd_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20657 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [12] -> \soc.spimemio.rd_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20658 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [13] -> \soc.spimemio.rd_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20659 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [14] -> \soc.spimemio.rd_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20660 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [15] -> \soc.spimemio.rd_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20661 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [16] -> \soc.spimemio.rd_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20662 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [17] -> \soc.spimemio.rd_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20663 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [18] -> \soc.spimemio.rd_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20664 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [19] -> \soc.spimemio.rd_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20665 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [20] -> \soc.spimemio.rd_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20666 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [21] -> \soc.spimemio.rd_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20667 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [22] -> \soc.spimemio.rd_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20668 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [23] -> \soc.spimemio.rd_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20669 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [0] -> \soc.spimemio.buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20670 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [1] -> \soc.spimemio.buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20671 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [2] -> \soc.spimemio.buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20672 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [3] -> \soc.spimemio.buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20673 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [4] -> \soc.spimemio.buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20674 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [5] -> \soc.spimemio.buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20675 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [6] -> \soc.spimemio.buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20676 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [7] -> \soc.spimemio.buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20677 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [8] -> \soc.spimemio.buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20678 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [9] -> \soc.spimemio.buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20679 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [10] -> \soc.spimemio.buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20680 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [11] -> \soc.spimemio.buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20681 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [12] -> \soc.spimemio.buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20682 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [13] -> \soc.spimemio.buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20683 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [14] -> \soc.spimemio.buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20684 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [15] -> \soc.spimemio.buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20685 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [16] -> \soc.spimemio.buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20686 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [17] -> \soc.spimemio.buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20687 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [18] -> \soc.spimemio.buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20688 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [19] -> \soc.spimemio.buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20689 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [20] -> \soc.spimemio.buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20690 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [21] -> \soc.spimemio.buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20691 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [22] -> \soc.spimemio.buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20692 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [23] -> \soc.spimemio.buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20693 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_rd[0:0] -> \soc.spimemio.din_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20696 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [0] -> \soc.spimemio.din_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20697 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [1] -> \soc.spimemio.din_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20698 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [2] -> \soc.spimemio.din_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20699 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [3] -> \soc.spimemio.din_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20700 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [0] -> \soc.spimemio.din_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20701 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [1] -> \soc.spimemio.din_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20702 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [2] -> \soc.spimemio.din_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20703 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [3] -> \soc.spimemio.din_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20704 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [4] -> \soc.spimemio.din_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20705 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [5] -> \soc.spimemio.din_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20706 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [6] -> \soc.spimemio.din_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20707 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [7] -> \soc.spimemio.din_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20710 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [0] -> \soc.spimemio.rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20711 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [1] -> \soc.spimemio.rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20712 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [2] -> \soc.spimemio.rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20713 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [3] -> \soc.spimemio.rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20714 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [4] -> \soc.spimemio.rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20715 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [5] -> \soc.spimemio.rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20716 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [6] -> \soc.spimemio.rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20717 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [7] -> \soc.spimemio.rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20718 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [8] -> \soc.spimemio.rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20719 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [9] -> \soc.spimemio.rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20720 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [10] -> \soc.spimemio.rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20721 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [11] -> \soc.spimemio.rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20722 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [12] -> \soc.spimemio.rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20723 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [13] -> \soc.spimemio.rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20724 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [14] -> \soc.spimemio.rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20725 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [15] -> \soc.spimemio.rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20726 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [16] -> \soc.spimemio.rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20727 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [17] -> \soc.spimemio.rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20728 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [18] -> \soc.spimemio.rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20729 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [19] -> \soc.spimemio.rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20730 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [20] -> \soc.spimemio.rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20731 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [21] -> \soc.spimemio.rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20732 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [22] -> \soc.spimemio.rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20733 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [23] -> \soc.spimemio.rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20734 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [24] -> \soc.spimemio.rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20735 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [25] -> \soc.spimemio.rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20736 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [26] -> \soc.spimemio.rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20737 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [27] -> \soc.spimemio.rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20738 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [28] -> \soc.spimemio.rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20739 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [29] -> \soc.spimemio.rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20740 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [30] -> \soc.spimemio.rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20741 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [31] -> \soc.spimemio.rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21446 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\outsign[0:0] -> \soc.cpu.pcpi_div.outsign.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21447 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\running[0:0] -> \soc.cpu.pcpi_div.running.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21448 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [0] -> \soc.cpu.pcpi_div.quotient_msk [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21449 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [1] -> \soc.cpu.pcpi_div.quotient_msk [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21450 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [2] -> \soc.cpu.pcpi_div.quotient_msk [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21451 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [3] -> \soc.cpu.pcpi_div.quotient_msk [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21452 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [4] -> \soc.cpu.pcpi_div.quotient_msk [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21453 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [5] -> \soc.cpu.pcpi_div.quotient_msk [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21454 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [6] -> \soc.cpu.pcpi_div.quotient_msk [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21455 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [7] -> \soc.cpu.pcpi_div.quotient_msk [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21456 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [8] -> \soc.cpu.pcpi_div.quotient_msk [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21457 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [9] -> \soc.cpu.pcpi_div.quotient_msk [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21458 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [10] -> \soc.cpu.pcpi_div.quotient_msk [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21459 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [11] -> \soc.cpu.pcpi_div.quotient_msk [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21460 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [12] -> \soc.cpu.pcpi_div.quotient_msk [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21461 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [13] -> \soc.cpu.pcpi_div.quotient_msk [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21462 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [14] -> \soc.cpu.pcpi_div.quotient_msk [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21463 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [15] -> \soc.cpu.pcpi_div.quotient_msk [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21464 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [16] -> \soc.cpu.pcpi_div.quotient_msk [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21465 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [17] -> \soc.cpu.pcpi_div.quotient_msk [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21466 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [18] -> \soc.cpu.pcpi_div.quotient_msk [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21467 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [19] -> \soc.cpu.pcpi_div.quotient_msk [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21468 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [20] -> \soc.cpu.pcpi_div.quotient_msk [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21469 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [21] -> \soc.cpu.pcpi_div.quotient_msk [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21470 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [22] -> \soc.cpu.pcpi_div.quotient_msk [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21471 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [23] -> \soc.cpu.pcpi_div.quotient_msk [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21472 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [24] -> \soc.cpu.pcpi_div.quotient_msk [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21473 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [25] -> \soc.cpu.pcpi_div.quotient_msk [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21474 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [26] -> \soc.cpu.pcpi_div.quotient_msk [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21475 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [27] -> \soc.cpu.pcpi_div.quotient_msk [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21476 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [28] -> \soc.cpu.pcpi_div.quotient_msk [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21477 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [29] -> \soc.cpu.pcpi_div.quotient_msk [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21478 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [30] -> \soc.cpu.pcpi_div.quotient_msk [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21479 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [31] -> \soc.cpu.pcpi_div.quotient_msk [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21480 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [0] -> \soc.cpu.pcpi_div.quotient [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21481 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [1] -> \soc.cpu.pcpi_div.quotient [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21482 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [2] -> \soc.cpu.pcpi_div.quotient [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21483 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [3] -> \soc.cpu.pcpi_div.quotient [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21484 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [4] -> \soc.cpu.pcpi_div.quotient [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21485 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [5] -> \soc.cpu.pcpi_div.quotient [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21486 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [6] -> \soc.cpu.pcpi_div.quotient [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21487 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [7] -> \soc.cpu.pcpi_div.quotient [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21488 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [8] -> \soc.cpu.pcpi_div.quotient [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21489 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [9] -> \soc.cpu.pcpi_div.quotient [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21490 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [10] -> \soc.cpu.pcpi_div.quotient [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21491 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [11] -> \soc.cpu.pcpi_div.quotient [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21492 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [12] -> \soc.cpu.pcpi_div.quotient [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21493 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [13] -> \soc.cpu.pcpi_div.quotient [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21494 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [14] -> \soc.cpu.pcpi_div.quotient [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21495 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [15] -> \soc.cpu.pcpi_div.quotient [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21496 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [16] -> \soc.cpu.pcpi_div.quotient [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21497 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [17] -> \soc.cpu.pcpi_div.quotient [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21498 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [18] -> \soc.cpu.pcpi_div.quotient [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21499 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [19] -> \soc.cpu.pcpi_div.quotient [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21500 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [20] -> \soc.cpu.pcpi_div.quotient [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21501 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [21] -> \soc.cpu.pcpi_div.quotient [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21502 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [22] -> \soc.cpu.pcpi_div.quotient [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21503 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [23] -> \soc.cpu.pcpi_div.quotient [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21504 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [24] -> \soc.cpu.pcpi_div.quotient [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21505 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [25] -> \soc.cpu.pcpi_div.quotient [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21506 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [26] -> \soc.cpu.pcpi_div.quotient [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21507 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [27] -> \soc.cpu.pcpi_div.quotient [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21508 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [28] -> \soc.cpu.pcpi_div.quotient [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21509 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [29] -> \soc.cpu.pcpi_div.quotient [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21510 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [30] -> \soc.cpu.pcpi_div.quotient [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21511 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [31] -> \soc.cpu.pcpi_div.quotient [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21512 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [0] -> \soc.cpu.pcpi_div.divisor [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21513 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [1] -> \soc.cpu.pcpi_div.divisor [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21514 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [2] -> \soc.cpu.pcpi_div.divisor [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21515 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [3] -> \soc.cpu.pcpi_div.divisor [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21516 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [4] -> \soc.cpu.pcpi_div.divisor [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21517 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [5] -> \soc.cpu.pcpi_div.divisor [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21518 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [6] -> \soc.cpu.pcpi_div.divisor [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21519 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [7] -> \soc.cpu.pcpi_div.divisor [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21520 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [8] -> \soc.cpu.pcpi_div.divisor [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21521 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [9] -> \soc.cpu.pcpi_div.divisor [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21522 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [10] -> \soc.cpu.pcpi_div.divisor [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21523 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [11] -> \soc.cpu.pcpi_div.divisor [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21524 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [12] -> \soc.cpu.pcpi_div.divisor [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21525 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [13] -> \soc.cpu.pcpi_div.divisor [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21526 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [14] -> \soc.cpu.pcpi_div.divisor [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21527 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [15] -> \soc.cpu.pcpi_div.divisor [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21528 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [16] -> \soc.cpu.pcpi_div.divisor [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21529 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [17] -> \soc.cpu.pcpi_div.divisor [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21530 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [18] -> \soc.cpu.pcpi_div.divisor [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21531 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [19] -> \soc.cpu.pcpi_div.divisor [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21532 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [20] -> \soc.cpu.pcpi_div.divisor [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21533 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [21] -> \soc.cpu.pcpi_div.divisor [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21534 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [22] -> \soc.cpu.pcpi_div.divisor [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21535 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [23] -> \soc.cpu.pcpi_div.divisor [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21536 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [24] -> \soc.cpu.pcpi_div.divisor [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21537 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [25] -> \soc.cpu.pcpi_div.divisor [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21538 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [26] -> \soc.cpu.pcpi_div.divisor [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21539 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [27] -> \soc.cpu.pcpi_div.divisor [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21540 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [28] -> \soc.cpu.pcpi_div.divisor [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21541 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [29] -> \soc.cpu.pcpi_div.divisor [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21542 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [30] -> \soc.cpu.pcpi_div.divisor [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21543 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [31] -> \soc.cpu.pcpi_div.divisor [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21544 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [32] -> \soc.cpu.pcpi_div.divisor [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21545 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [33] -> \soc.cpu.pcpi_div.divisor [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21546 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [34] -> \soc.cpu.pcpi_div.divisor [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21547 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [35] -> \soc.cpu.pcpi_div.divisor [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21548 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [36] -> \soc.cpu.pcpi_div.divisor [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21549 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [37] -> \soc.cpu.pcpi_div.divisor [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21550 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [38] -> \soc.cpu.pcpi_div.divisor [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21551 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [39] -> \soc.cpu.pcpi_div.divisor [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21552 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [40] -> \soc.cpu.pcpi_div.divisor [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21553 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [41] -> \soc.cpu.pcpi_div.divisor [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21554 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [42] -> \soc.cpu.pcpi_div.divisor [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21555 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [43] -> \soc.cpu.pcpi_div.divisor [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21556 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [44] -> \soc.cpu.pcpi_div.divisor [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21557 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [45] -> \soc.cpu.pcpi_div.divisor [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21558 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [46] -> \soc.cpu.pcpi_div.divisor [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21559 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [47] -> \soc.cpu.pcpi_div.divisor [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21560 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [48] -> \soc.cpu.pcpi_div.divisor [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21561 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [49] -> \soc.cpu.pcpi_div.divisor [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21562 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [50] -> \soc.cpu.pcpi_div.divisor [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21563 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [51] -> \soc.cpu.pcpi_div.divisor [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21564 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [52] -> \soc.cpu.pcpi_div.divisor [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21565 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [53] -> \soc.cpu.pcpi_div.divisor [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21566 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [54] -> \soc.cpu.pcpi_div.divisor [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21567 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [55] -> \soc.cpu.pcpi_div.divisor [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21568 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [56] -> \soc.cpu.pcpi_div.divisor [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21569 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [57] -> \soc.cpu.pcpi_div.divisor [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21570 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [58] -> \soc.cpu.pcpi_div.divisor [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21571 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [59] -> \soc.cpu.pcpi_div.divisor [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21572 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [60] -> \soc.cpu.pcpi_div.divisor [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21573 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [61] -> \soc.cpu.pcpi_div.divisor [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21574 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [62] -> \soc.cpu.pcpi_div.divisor [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21575 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [0] -> \soc.cpu.pcpi_div.dividend [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21576 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [1] -> \soc.cpu.pcpi_div.dividend [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21577 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [2] -> \soc.cpu.pcpi_div.dividend [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21578 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [3] -> \soc.cpu.pcpi_div.dividend [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21579 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [4] -> \soc.cpu.pcpi_div.dividend [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21580 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [5] -> \soc.cpu.pcpi_div.dividend [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21581 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [6] -> \soc.cpu.pcpi_div.dividend [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21582 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [7] -> \soc.cpu.pcpi_div.dividend [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21583 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [8] -> \soc.cpu.pcpi_div.dividend [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21584 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [9] -> \soc.cpu.pcpi_div.dividend [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21585 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [10] -> \soc.cpu.pcpi_div.dividend [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21586 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [11] -> \soc.cpu.pcpi_div.dividend [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21587 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [12] -> \soc.cpu.pcpi_div.dividend [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21588 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [13] -> \soc.cpu.pcpi_div.dividend [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21589 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [14] -> \soc.cpu.pcpi_div.dividend [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21590 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [15] -> \soc.cpu.pcpi_div.dividend [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21591 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [16] -> \soc.cpu.pcpi_div.dividend [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21592 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [17] -> \soc.cpu.pcpi_div.dividend [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21593 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [18] -> \soc.cpu.pcpi_div.dividend [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21594 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [19] -> \soc.cpu.pcpi_div.dividend [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21595 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [20] -> \soc.cpu.pcpi_div.dividend [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21596 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [21] -> \soc.cpu.pcpi_div.dividend [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21597 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [22] -> \soc.cpu.pcpi_div.dividend [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21598 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [23] -> \soc.cpu.pcpi_div.dividend [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21599 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [24] -> \soc.cpu.pcpi_div.dividend [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21600 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [25] -> \soc.cpu.pcpi_div.dividend [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21601 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [26] -> \soc.cpu.pcpi_div.dividend [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21602 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [27] -> \soc.cpu.pcpi_div.dividend [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21603 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [28] -> \soc.cpu.pcpi_div.dividend [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21604 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [29] -> \soc.cpu.pcpi_div.dividend [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21605 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [30] -> \soc.cpu.pcpi_div.dividend [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21606 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [31] -> \soc.cpu.pcpi_div.dividend [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22666 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [0] -> \soc.cpu.pcpi_mul.mul_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22667 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [1] -> \soc.cpu.pcpi_mul.mul_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22668 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [2] -> \soc.cpu.pcpi_mul.mul_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22669 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [3] -> \soc.cpu.pcpi_mul.mul_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22670 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [4] -> \soc.cpu.pcpi_mul.mul_counter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22671 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [5] -> \soc.cpu.pcpi_mul.mul_counter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22672 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [6] -> \soc.cpu.pcpi_mul.mul_counter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22673 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [0] -> \soc.cpu.pcpi_mul.rdx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22674 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [1] -> \soc.cpu.pcpi_mul.rdx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22675 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [2] -> \soc.cpu.pcpi_mul.rdx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22676 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [3] -> \soc.cpu.pcpi_mul.rdx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22677 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [4] -> \soc.cpu.pcpi_mul.rdx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22678 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [5] -> \soc.cpu.pcpi_mul.rdx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22679 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [6] -> \soc.cpu.pcpi_mul.rdx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22680 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [7] -> \soc.cpu.pcpi_mul.rdx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22681 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [8] -> \soc.cpu.pcpi_mul.rdx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22682 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [9] -> \soc.cpu.pcpi_mul.rdx [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22683 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [10] -> \soc.cpu.pcpi_mul.rdx [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22684 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [11] -> \soc.cpu.pcpi_mul.rdx [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22685 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [12] -> \soc.cpu.pcpi_mul.rdx [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22686 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [13] -> \soc.cpu.pcpi_mul.rdx [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22687 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [14] -> \soc.cpu.pcpi_mul.rdx [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22688 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [15] -> \soc.cpu.pcpi_mul.rdx [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22689 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [16] -> \soc.cpu.pcpi_mul.rdx [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22690 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [17] -> \soc.cpu.pcpi_mul.rdx [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22691 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [18] -> \soc.cpu.pcpi_mul.rdx [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22692 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [19] -> \soc.cpu.pcpi_mul.rdx [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22693 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [20] -> \soc.cpu.pcpi_mul.rdx [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22694 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [21] -> \soc.cpu.pcpi_mul.rdx [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22695 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [22] -> \soc.cpu.pcpi_mul.rdx [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22696 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [23] -> \soc.cpu.pcpi_mul.rdx [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22697 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [24] -> \soc.cpu.pcpi_mul.rdx [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22698 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [25] -> \soc.cpu.pcpi_mul.rdx [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22699 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [26] -> \soc.cpu.pcpi_mul.rdx [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22700 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [27] -> \soc.cpu.pcpi_mul.rdx [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22701 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [28] -> \soc.cpu.pcpi_mul.rdx [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22702 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [29] -> \soc.cpu.pcpi_mul.rdx [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22703 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [30] -> \soc.cpu.pcpi_mul.rdx [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22704 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [31] -> \soc.cpu.pcpi_mul.rdx [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22705 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [32] -> \soc.cpu.pcpi_mul.rdx [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22706 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [33] -> \soc.cpu.pcpi_mul.rdx [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22707 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [34] -> \soc.cpu.pcpi_mul.rdx [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22708 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [35] -> \soc.cpu.pcpi_mul.rdx [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22709 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [36] -> \soc.cpu.pcpi_mul.rdx [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22710 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [37] -> \soc.cpu.pcpi_mul.rdx [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22711 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [38] -> \soc.cpu.pcpi_mul.rdx [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22712 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [39] -> \soc.cpu.pcpi_mul.rdx [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22713 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [40] -> \soc.cpu.pcpi_mul.rdx [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22714 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [41] -> \soc.cpu.pcpi_mul.rdx [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22715 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [42] -> \soc.cpu.pcpi_mul.rdx [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22716 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [43] -> \soc.cpu.pcpi_mul.rdx [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22717 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [44] -> \soc.cpu.pcpi_mul.rdx [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22718 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [45] -> \soc.cpu.pcpi_mul.rdx [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22719 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [46] -> \soc.cpu.pcpi_mul.rdx [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22720 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [47] -> \soc.cpu.pcpi_mul.rdx [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22721 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [48] -> \soc.cpu.pcpi_mul.rdx [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22722 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [49] -> \soc.cpu.pcpi_mul.rdx [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22723 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [50] -> \soc.cpu.pcpi_mul.rdx [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22724 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [51] -> \soc.cpu.pcpi_mul.rdx [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22725 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [52] -> \soc.cpu.pcpi_mul.rdx [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22726 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [53] -> \soc.cpu.pcpi_mul.rdx [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22727 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [54] -> \soc.cpu.pcpi_mul.rdx [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22728 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [55] -> \soc.cpu.pcpi_mul.rdx [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22729 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [56] -> \soc.cpu.pcpi_mul.rdx [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22730 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [57] -> \soc.cpu.pcpi_mul.rdx [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22731 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [58] -> \soc.cpu.pcpi_mul.rdx [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22732 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [59] -> \soc.cpu.pcpi_mul.rdx [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22733 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [60] -> \soc.cpu.pcpi_mul.rdx [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22734 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [61] -> \soc.cpu.pcpi_mul.rdx [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22735 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [62] -> \soc.cpu.pcpi_mul.rdx [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22736 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [63] -> \soc.cpu.pcpi_mul.rdx [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22737 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [0] -> \soc.cpu.pcpi_mul.rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22738 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [1] -> \soc.cpu.pcpi_mul.rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22739 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [2] -> \soc.cpu.pcpi_mul.rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22740 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [3] -> \soc.cpu.pcpi_mul.rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22741 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [4] -> \soc.cpu.pcpi_mul.rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22742 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [5] -> \soc.cpu.pcpi_mul.rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22743 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [6] -> \soc.cpu.pcpi_mul.rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22744 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [7] -> \soc.cpu.pcpi_mul.rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22745 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [8] -> \soc.cpu.pcpi_mul.rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22746 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [9] -> \soc.cpu.pcpi_mul.rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22747 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [10] -> \soc.cpu.pcpi_mul.rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22748 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [11] -> \soc.cpu.pcpi_mul.rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22749 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [12] -> \soc.cpu.pcpi_mul.rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22750 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [13] -> \soc.cpu.pcpi_mul.rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22751 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [14] -> \soc.cpu.pcpi_mul.rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22752 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [15] -> \soc.cpu.pcpi_mul.rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22753 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [16] -> \soc.cpu.pcpi_mul.rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22754 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [17] -> \soc.cpu.pcpi_mul.rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22755 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [18] -> \soc.cpu.pcpi_mul.rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22756 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [19] -> \soc.cpu.pcpi_mul.rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22757 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [20] -> \soc.cpu.pcpi_mul.rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22758 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [21] -> \soc.cpu.pcpi_mul.rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22759 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [22] -> \soc.cpu.pcpi_mul.rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22760 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [23] -> \soc.cpu.pcpi_mul.rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22761 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [24] -> \soc.cpu.pcpi_mul.rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22762 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [25] -> \soc.cpu.pcpi_mul.rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22763 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [26] -> \soc.cpu.pcpi_mul.rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22764 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [27] -> \soc.cpu.pcpi_mul.rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22765 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [28] -> \soc.cpu.pcpi_mul.rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22766 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [29] -> \soc.cpu.pcpi_mul.rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22767 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [30] -> \soc.cpu.pcpi_mul.rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22768 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [31] -> \soc.cpu.pcpi_mul.rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22769 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [32] -> \soc.cpu.pcpi_mul.rd [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22770 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [33] -> \soc.cpu.pcpi_mul.rd [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22771 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [34] -> \soc.cpu.pcpi_mul.rd [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22772 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [35] -> \soc.cpu.pcpi_mul.rd [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22773 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [36] -> \soc.cpu.pcpi_mul.rd [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22774 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [37] -> \soc.cpu.pcpi_mul.rd [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22775 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [38] -> \soc.cpu.pcpi_mul.rd [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22776 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [39] -> \soc.cpu.pcpi_mul.rd [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22777 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [40] -> \soc.cpu.pcpi_mul.rd [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22778 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [41] -> \soc.cpu.pcpi_mul.rd [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22779 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [42] -> \soc.cpu.pcpi_mul.rd [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22780 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [43] -> \soc.cpu.pcpi_mul.rd [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22781 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [44] -> \soc.cpu.pcpi_mul.rd [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22782 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [45] -> \soc.cpu.pcpi_mul.rd [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22783 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [46] -> \soc.cpu.pcpi_mul.rd [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22784 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [47] -> \soc.cpu.pcpi_mul.rd [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22785 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [48] -> \soc.cpu.pcpi_mul.rd [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22786 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [49] -> \soc.cpu.pcpi_mul.rd [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22787 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [50] -> \soc.cpu.pcpi_mul.rd [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22788 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [51] -> \soc.cpu.pcpi_mul.rd [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22789 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [52] -> \soc.cpu.pcpi_mul.rd [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22790 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [53] -> \soc.cpu.pcpi_mul.rd [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22791 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [54] -> \soc.cpu.pcpi_mul.rd [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22792 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [55] -> \soc.cpu.pcpi_mul.rd [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22793 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [56] -> \soc.cpu.pcpi_mul.rd [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22794 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [57] -> \soc.cpu.pcpi_mul.rd [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22795 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [58] -> \soc.cpu.pcpi_mul.rd [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22796 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [59] -> \soc.cpu.pcpi_mul.rd [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22797 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [60] -> \soc.cpu.pcpi_mul.rd [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22798 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [61] -> \soc.cpu.pcpi_mul.rd [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22799 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [62] -> \soc.cpu.pcpi_mul.rd [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22800 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [63] -> \soc.cpu.pcpi_mul.rd [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22801 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [0] -> \soc.cpu.pcpi_mul.rs2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22802 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [1] -> \soc.cpu.pcpi_mul.rs2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22803 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [2] -> \soc.cpu.pcpi_mul.rs2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22804 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [3] -> \soc.cpu.pcpi_mul.rs2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22805 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [4] -> \soc.cpu.pcpi_mul.rs2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22806 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [5] -> \soc.cpu.pcpi_mul.rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22807 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [6] -> \soc.cpu.pcpi_mul.rs2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22808 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [7] -> \soc.cpu.pcpi_mul.rs2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22809 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [8] -> \soc.cpu.pcpi_mul.rs2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22810 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [9] -> \soc.cpu.pcpi_mul.rs2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22811 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [10] -> \soc.cpu.pcpi_mul.rs2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22812 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [11] -> \soc.cpu.pcpi_mul.rs2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22813 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [12] -> \soc.cpu.pcpi_mul.rs2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22814 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [13] -> \soc.cpu.pcpi_mul.rs2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22815 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [14] -> \soc.cpu.pcpi_mul.rs2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22816 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [15] -> \soc.cpu.pcpi_mul.rs2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22817 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [16] -> \soc.cpu.pcpi_mul.rs2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22818 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [17] -> \soc.cpu.pcpi_mul.rs2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22819 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [18] -> \soc.cpu.pcpi_mul.rs2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22820 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [19] -> \soc.cpu.pcpi_mul.rs2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22821 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [20] -> \soc.cpu.pcpi_mul.rs2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22822 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [21] -> \soc.cpu.pcpi_mul.rs2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22823 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [22] -> \soc.cpu.pcpi_mul.rs2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22824 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [23] -> \soc.cpu.pcpi_mul.rs2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22825 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [24] -> \soc.cpu.pcpi_mul.rs2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22826 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [25] -> \soc.cpu.pcpi_mul.rs2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22827 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [26] -> \soc.cpu.pcpi_mul.rs2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22828 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [27] -> \soc.cpu.pcpi_mul.rs2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22829 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [28] -> \soc.cpu.pcpi_mul.rs2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22830 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [29] -> \soc.cpu.pcpi_mul.rs2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22831 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [30] -> \soc.cpu.pcpi_mul.rs2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22832 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [31] -> \soc.cpu.pcpi_mul.rs2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22833 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [32] -> \soc.cpu.pcpi_mul.rs2 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22834 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [33] -> \soc.cpu.pcpi_mul.rs2 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22835 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [34] -> \soc.cpu.pcpi_mul.rs2 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22836 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [35] -> \soc.cpu.pcpi_mul.rs2 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22837 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [36] -> \soc.cpu.pcpi_mul.rs2 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22838 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [37] -> \soc.cpu.pcpi_mul.rs2 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22839 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [38] -> \soc.cpu.pcpi_mul.rs2 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22840 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [39] -> \soc.cpu.pcpi_mul.rs2 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22841 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [40] -> \soc.cpu.pcpi_mul.rs2 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22842 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [41] -> \soc.cpu.pcpi_mul.rs2 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22843 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [42] -> \soc.cpu.pcpi_mul.rs2 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22844 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [43] -> \soc.cpu.pcpi_mul.rs2 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22845 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [44] -> \soc.cpu.pcpi_mul.rs2 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22846 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [45] -> \soc.cpu.pcpi_mul.rs2 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22847 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [46] -> \soc.cpu.pcpi_mul.rs2 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22848 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [47] -> \soc.cpu.pcpi_mul.rs2 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22849 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [48] -> \soc.cpu.pcpi_mul.rs2 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22850 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [49] -> \soc.cpu.pcpi_mul.rs2 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22851 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [50] -> \soc.cpu.pcpi_mul.rs2 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22852 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [51] -> \soc.cpu.pcpi_mul.rs2 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22853 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [52] -> \soc.cpu.pcpi_mul.rs2 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22854 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [53] -> \soc.cpu.pcpi_mul.rs2 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22855 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [54] -> \soc.cpu.pcpi_mul.rs2 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22856 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [55] -> \soc.cpu.pcpi_mul.rs2 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22857 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [56] -> \soc.cpu.pcpi_mul.rs2 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22858 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [57] -> \soc.cpu.pcpi_mul.rs2 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22859 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [58] -> \soc.cpu.pcpi_mul.rs2 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22860 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [59] -> \soc.cpu.pcpi_mul.rs2 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22861 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [60] -> \soc.cpu.pcpi_mul.rs2 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22862 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [61] -> \soc.cpu.pcpi_mul.rs2 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22863 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [62] -> \soc.cpu.pcpi_mul.rs2 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22864 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [63] -> \soc.cpu.pcpi_mul.rs2 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22865 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [0] -> \soc.cpu.pcpi_mul.rs1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22866 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [1] -> \soc.cpu.pcpi_mul.rs1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22867 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [2] -> \soc.cpu.pcpi_mul.rs1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22868 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [3] -> \soc.cpu.pcpi_mul.rs1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22869 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [4] -> \soc.cpu.pcpi_mul.rs1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22870 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [5] -> \soc.cpu.pcpi_mul.rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22871 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [6] -> \soc.cpu.pcpi_mul.rs1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22872 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [7] -> \soc.cpu.pcpi_mul.rs1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22873 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [8] -> \soc.cpu.pcpi_mul.rs1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22874 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [9] -> \soc.cpu.pcpi_mul.rs1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22875 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [10] -> \soc.cpu.pcpi_mul.rs1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22876 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [11] -> \soc.cpu.pcpi_mul.rs1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22877 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [12] -> \soc.cpu.pcpi_mul.rs1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22878 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [13] -> \soc.cpu.pcpi_mul.rs1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22879 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [14] -> \soc.cpu.pcpi_mul.rs1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22880 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [15] -> \soc.cpu.pcpi_mul.rs1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22881 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [16] -> \soc.cpu.pcpi_mul.rs1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22882 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [17] -> \soc.cpu.pcpi_mul.rs1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22883 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [18] -> \soc.cpu.pcpi_mul.rs1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22884 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [19] -> \soc.cpu.pcpi_mul.rs1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22885 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [20] -> \soc.cpu.pcpi_mul.rs1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22886 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [21] -> \soc.cpu.pcpi_mul.rs1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22887 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [22] -> \soc.cpu.pcpi_mul.rs1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22888 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [23] -> \soc.cpu.pcpi_mul.rs1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22889 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [24] -> \soc.cpu.pcpi_mul.rs1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22890 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [25] -> \soc.cpu.pcpi_mul.rs1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22891 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [26] -> \soc.cpu.pcpi_mul.rs1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22892 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [27] -> \soc.cpu.pcpi_mul.rs1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22893 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [28] -> \soc.cpu.pcpi_mul.rs1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22894 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [29] -> \soc.cpu.pcpi_mul.rs1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22895 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [30] -> \soc.cpu.pcpi_mul.rs1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22896 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [31] -> \soc.cpu.pcpi_mul.rs1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22897 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [32] -> \soc.cpu.pcpi_mul.rs1 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22898 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [33] -> \soc.cpu.pcpi_mul.rs1 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22899 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [34] -> \soc.cpu.pcpi_mul.rs1 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22900 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [35] -> \soc.cpu.pcpi_mul.rs1 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22901 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [36] -> \soc.cpu.pcpi_mul.rs1 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22902 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [37] -> \soc.cpu.pcpi_mul.rs1 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22903 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [38] -> \soc.cpu.pcpi_mul.rs1 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22904 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [39] -> \soc.cpu.pcpi_mul.rs1 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22905 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [40] -> \soc.cpu.pcpi_mul.rs1 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22906 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [41] -> \soc.cpu.pcpi_mul.rs1 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22907 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [42] -> \soc.cpu.pcpi_mul.rs1 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22908 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [43] -> \soc.cpu.pcpi_mul.rs1 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22909 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [44] -> \soc.cpu.pcpi_mul.rs1 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22910 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [45] -> \soc.cpu.pcpi_mul.rs1 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22911 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [46] -> \soc.cpu.pcpi_mul.rs1 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22912 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [47] -> \soc.cpu.pcpi_mul.rs1 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22913 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [48] -> \soc.cpu.pcpi_mul.rs1 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22914 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [49] -> \soc.cpu.pcpi_mul.rs1 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22915 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [50] -> \soc.cpu.pcpi_mul.rs1 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22916 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [51] -> \soc.cpu.pcpi_mul.rs1 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22917 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [52] -> \soc.cpu.pcpi_mul.rs1 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22918 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [53] -> \soc.cpu.pcpi_mul.rs1 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22919 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [54] -> \soc.cpu.pcpi_mul.rs1 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22920 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [55] -> \soc.cpu.pcpi_mul.rs1 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22921 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [56] -> \soc.cpu.pcpi_mul.rs1 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22922 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [57] -> \soc.cpu.pcpi_mul.rs1 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22923 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [58] -> \soc.cpu.pcpi_mul.rs1 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22924 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [59] -> \soc.cpu.pcpi_mul.rs1 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22925 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [60] -> \soc.cpu.pcpi_mul.rs1 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22926 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [61] -> \soc.cpu.pcpi_mul.rs1 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22927 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [62] -> \soc.cpu.pcpi_mul.rs1 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22928 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [63] -> \soc.cpu.pcpi_mul.rs1 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22929 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [0] -> \soc.cpu.pcpi_mul.pcpi_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22930 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [1] -> \soc.cpu.pcpi_mul.pcpi_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22931 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [2] -> \soc.cpu.pcpi_mul.pcpi_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22932 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [3] -> \soc.cpu.pcpi_mul.pcpi_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22933 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [4] -> \soc.cpu.pcpi_mul.pcpi_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22934 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [5] -> \soc.cpu.pcpi_mul.pcpi_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22935 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [6] -> \soc.cpu.pcpi_mul.pcpi_rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22936 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [7] -> \soc.cpu.pcpi_mul.pcpi_rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22937 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [8] -> \soc.cpu.pcpi_mul.pcpi_rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22938 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [9] -> \soc.cpu.pcpi_mul.pcpi_rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22939 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [10] -> \soc.cpu.pcpi_mul.pcpi_rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22940 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [11] -> \soc.cpu.pcpi_mul.pcpi_rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22941 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [12] -> \soc.cpu.pcpi_mul.pcpi_rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22942 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [13] -> \soc.cpu.pcpi_mul.pcpi_rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22943 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [14] -> \soc.cpu.pcpi_mul.pcpi_rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22944 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [15] -> \soc.cpu.pcpi_mul.pcpi_rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22945 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [16] -> \soc.cpu.pcpi_mul.pcpi_rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22946 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [17] -> \soc.cpu.pcpi_mul.pcpi_rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22947 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [18] -> \soc.cpu.pcpi_mul.pcpi_rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22948 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [19] -> \soc.cpu.pcpi_mul.pcpi_rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22949 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [20] -> \soc.cpu.pcpi_mul.pcpi_rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22950 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [21] -> \soc.cpu.pcpi_mul.pcpi_rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22951 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [22] -> \soc.cpu.pcpi_mul.pcpi_rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22952 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [23] -> \soc.cpu.pcpi_mul.pcpi_rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22953 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [24] -> \soc.cpu.pcpi_mul.pcpi_rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22954 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [25] -> \soc.cpu.pcpi_mul.pcpi_rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22955 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [26] -> \soc.cpu.pcpi_mul.pcpi_rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22956 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [27] -> \soc.cpu.pcpi_mul.pcpi_rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22957 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [28] -> \soc.cpu.pcpi_mul.pcpi_rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22958 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [29] -> \soc.cpu.pcpi_mul.pcpi_rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22959 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [30] -> \soc.cpu.pcpi_mul.pcpi_rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22960 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [31] -> \soc.cpu.pcpi_mul.pcpi_rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23904 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [0] -> \soc.spimemio.xfer.xfer_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23905 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [1] -> \soc.spimemio.xfer.xfer_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23906 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [2] -> \soc.spimemio.xfer.xfer_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23907 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [3] -> \soc.spimemio.xfer.xfer_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23908 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_rd[0:0] -> \soc.spimemio.xfer.xfer_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23909 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_qspi[0:0] -> \soc.spimemio.xfer.xfer_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23910 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [0] -> \soc.spimemio.xfer.dummy_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23911 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [1] -> \soc.spimemio.xfer.dummy_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23912 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [2] -> \soc.spimemio.xfer.dummy_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23913 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [3] -> \soc.spimemio.xfer.dummy_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23914 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [0] -> \soc.spimemio.xfer.count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23915 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [1] -> \soc.spimemio.xfer.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23916 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [2] -> \soc.spimemio.xfer.count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23917 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [3] -> \soc.spimemio.xfer.count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23918 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [0] -> \soc.spimemio.xfer.ibuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23919 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [1] -> \soc.spimemio.xfer.ibuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23920 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [2] -> \soc.spimemio.xfer.ibuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23921 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [3] -> \soc.spimemio.xfer.ibuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23922 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [4] -> \soc.spimemio.xfer.ibuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23923 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [5] -> \soc.spimemio.xfer.ibuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23924 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [6] -> \soc.spimemio.xfer.ibuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23925 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [7] -> \soc.spimemio.xfer.ibuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23926 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [0] -> \soc.spimemio.xfer.obuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23927 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [1] -> \soc.spimemio.xfer.obuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23928 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [2] -> \soc.spimemio.xfer.obuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23929 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [3] -> \soc.spimemio.xfer.obuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23930 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [4] -> \soc.spimemio.xfer.obuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23931 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [5] -> \soc.spimemio.xfer.obuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23932 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [6] -> \soc.spimemio.xfer.obuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23933 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [7] -> \soc.spimemio.xfer.obuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23934 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_ddr[0:0] -> \soc.spimemio.xfer.xfer_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23935 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_dspi[0:0] -> \soc.spimemio.xfer.xfer_dspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23936 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_clk[0:0] -> \soc.spimemio.xfer.flash_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$23937 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_csb[0:0] -> \soc.spimemio.xfer.flash_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8558 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [0] -> \clock.counterO [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8559 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [1] -> \clock.counterO [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8560 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [2] -> \clock.counterO [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8561 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [3] -> \clock.counterO [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8562 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [4] -> \clock.counterO [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8563 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [5] -> \clock.counterO [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8564 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [6] -> \clock.counterO [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8565 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [7] -> \clock.counterO [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8566 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [8] -> \clock.counterO [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8567 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [9] -> \clock.counterO [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8568 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [10] -> \clock.counterO [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8569 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [11] -> \clock.counterO [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8570 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [12] -> \clock.counterO [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8571 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [13] -> \clock.counterO [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8572 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [14] -> \clock.counterO [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8573 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [15] -> \clock.counterO [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8574 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [16] -> \clock.counterO [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8575 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [17] -> \clock.counterO [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8576 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [18] -> \clock.counterO [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8577 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [19] -> \clock.counterO [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8578 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [20] -> \clock.counterO [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8579 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [21] -> \clock.counterO [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8580 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [22] -> \clock.counterO [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8581 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [23] -> \clock.counterO [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8582 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [24] -> \clock.counterO [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8583 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [25] -> \clock.counterO [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8584 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [26] -> \clock.counterO [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8585 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [27] -> \clock.counterO [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8586 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [28] -> \clock.counterO [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8587 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [29] -> \clock.counterO [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8588 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [30] -> \clock.counterO [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8589 to $_DFFE_PP_ for $techmap\clock.$0\counterO[31:0] [31] -> \clock.counterO [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9162 to $_DFFE_PP_ for $0\iomem_ready[0:0] -> \iomem_ready.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9163 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [0] -> \iomem_rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9164 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [1] -> \iomem_rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9165 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [2] -> \iomem_rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9166 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [3] -> \iomem_rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9167 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [4] -> \iomem_rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9168 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [5] -> \iomem_rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9169 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [6] -> \iomem_rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9170 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [7] -> \iomem_rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9171 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [8] -> \iomem_rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9172 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [9] -> \iomem_rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9173 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [10] -> \iomem_rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9174 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [11] -> \iomem_rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9175 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [12] -> \iomem_rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9176 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [13] -> \iomem_rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9177 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [14] -> \iomem_rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9178 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [15] -> \iomem_rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9179 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [16] -> \iomem_rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9180 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [17] -> \iomem_rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9181 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [18] -> \iomem_rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9182 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [19] -> \iomem_rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9183 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [20] -> \iomem_rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9184 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [21] -> \iomem_rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9185 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [22] -> \iomem_rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9186 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [23] -> \iomem_rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9187 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [24] -> \iomem_rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9188 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [25] -> \iomem_rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9189 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [26] -> \iomem_rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9190 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [27] -> \iomem_rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9191 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [28] -> \iomem_rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9192 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [29] -> \iomem_rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9193 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [30] -> \iomem_rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9194 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [31] -> \iomem_rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9195 to $_DFFE_PP_ for $0\gpio[31:0] [0] -> \gpio [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9196 to $_DFFE_PP_ for $0\gpio[31:0] [1] -> \gpio [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9197 to $_DFFE_PP_ for $0\gpio[31:0] [2] -> \gpio [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9198 to $_DFFE_PP_ for $0\gpio[31:0] [3] -> \gpio [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9199 to $_DFFE_PP_ for $0\gpio[31:0] [4] -> \gpio [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9200 to $_DFFE_PP_ for $0\gpio[31:0] [5] -> \gpio [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9201 to $_DFFE_PP_ for $0\gpio[31:0] [6] -> \gpio [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9202 to $_DFFE_PP_ for $0\gpio[31:0] [7] -> \gpio [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9203 to $_DFFE_PP_ for $0\gpio[31:0] [8] -> \gpio [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9204 to $_DFFE_PP_ for $0\gpio[31:0] [9] -> \gpio [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9205 to $_DFFE_PP_ for $0\gpio[31:0] [10] -> \gpio [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9206 to $_DFFE_PP_ for $0\gpio[31:0] [11] -> \gpio [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9207 to $_DFFE_PP_ for $0\gpio[31:0] [12] -> \gpio [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9208 to $_DFFE_PP_ for $0\gpio[31:0] [13] -> \gpio [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9209 to $_DFFE_PP_ for $0\gpio[31:0] [14] -> \gpio [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9210 to $_DFFE_PP_ for $0\gpio[31:0] [15] -> \gpio [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9211 to $_DFFE_PP_ for $0\gpio[31:0] [16] -> \gpio [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9212 to $_DFFE_PP_ for $0\gpio[31:0] [17] -> \gpio [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9213 to $_DFFE_PP_ for $0\gpio[31:0] [18] -> \gpio [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9214 to $_DFFE_PP_ for $0\gpio[31:0] [19] -> \gpio [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9215 to $_DFFE_PP_ for $0\gpio[31:0] [20] -> \gpio [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9216 to $_DFFE_PP_ for $0\gpio[31:0] [21] -> \gpio [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9217 to $_DFFE_PP_ for $0\gpio[31:0] [22] -> \gpio [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9218 to $_DFFE_PP_ for $0\gpio[31:0] [23] -> \gpio [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9219 to $_DFFE_PP_ for $0\gpio[31:0] [24] -> \gpio [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9220 to $_DFFE_PP_ for $0\gpio[31:0] [25] -> \gpio [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9221 to $_DFFE_PP_ for $0\gpio[31:0] [26] -> \gpio [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9222 to $_DFFE_PP_ for $0\gpio[31:0] [27] -> \gpio [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9223 to $_DFFE_PP_ for $0\gpio[31:0] [28] -> \gpio [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9224 to $_DFFE_PP_ for $0\gpio[31:0] [29] -> \gpio [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9225 to $_DFFE_PP_ for $0\gpio[31:0] [30] -> \gpio [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9226 to $_DFFE_PP_ for $0\gpio[31:0] [31] -> \gpio [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9227 to $_DFFE_PP_ for $0\pinTest[31:0] [0] -> \pinTest [0].

9.35. Executing TECHMAP pass (map to technology primitives).

9.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

9.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1712 debug messages>

9.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~5012 debug messages>

9.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7249.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7252.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7258.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7264.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7302.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7305.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7314.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7317.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7320.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7323.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7341.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7341.slice[22].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7344.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7347.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7350.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7353.slice[0].fadd ($lut).
Mapping hardware.$auto$alumacc.cc:474:replace_alu$7356.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$11744.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23524.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23531.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23558.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23566.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23573.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23600.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23607.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23615.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23622.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23651.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23658.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23666.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23673.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23707.slice[0].fadd ($lut).
Mapping hardware.$auto$maccmap.cc:240:synth$23714.slice[0].fadd ($lut).

9.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in hardware.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8602 (SB_DFF): \clock.counterI [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8606 (SB_DFF): \clock.counterI [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8565 (SB_DFFE): \clock.counterO [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8590 (SB_DFF): \clock.counterI [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8594 (SB_DFF): \clock.counterI [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8598 (SB_DFF): \clock.counterI [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8582 (SB_DFFE): \clock.counterO [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8588 (SB_DFFE): \clock.counterO [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8595 (SB_DFF): \clock.counterI [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8559 (SB_DFFE): \clock.counterO [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8560 (SB_DFFE): \clock.counterO [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8561 (SB_DFFE): \clock.counterO [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8566 (SB_DFFE): \clock.counterO [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8567 (SB_DFFE): \clock.counterO [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8568 (SB_DFFE): \clock.counterO [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8569 (SB_DFFE): \clock.counterO [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8570 (SB_DFFE): \clock.counterO [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8571 (SB_DFFE): \clock.counterO [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8572 (SB_DFFE): \clock.counterO [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8573 (SB_DFFE): \clock.counterO [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8574 (SB_DFFE): \clock.counterO [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8575 (SB_DFFE): \clock.counterO [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8576 (SB_DFFE): \clock.counterO [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8577 (SB_DFFE): \clock.counterO [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8578 (SB_DFFE): \clock.counterO [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8579 (SB_DFFE): \clock.counterO [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8580 (SB_DFFE): \clock.counterO [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8581 (SB_DFFE): \clock.counterO [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8583 (SB_DFFE): \clock.counterO [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8584 (SB_DFFE): \clock.counterO [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9261 (SB_DFF): \reset_cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9260 (SB_DFF): \reset_cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8587 (SB_DFFE): \clock.counterO [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8621 (SB_DFF): \clock.counterI [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8558 (SB_DFFE): \clock.counterO [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8589 (SB_DFFE): \clock.counterO [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8591 (SB_DFF): \clock.counterI [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8592 (SB_DFF): \clock.counterI [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8593 (SB_DFF): \clock.counterI [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8596 (SB_DFF): \clock.counterI [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8619 (SB_DFF): \clock.counterI [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8611 (SB_DFF): \clock.counterI [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8600 (SB_DFF): \clock.counterI [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8601 (SB_DFF): \clock.counterI [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8610 (SB_DFF): \clock.counterI [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8603 (SB_DFF): \clock.counterI [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8604 (SB_DFF): \clock.counterI [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8608 (SB_DFF): \clock.counterI [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8564 (SB_DFFE): \clock.counterO [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8609 (SB_DFF): \clock.counterI [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8605 (SB_DFF): \clock.counterI [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8612 (SB_DFF): \clock.counterI [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8613 (SB_DFF): \clock.counterI [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8614 (SB_DFF): \clock.counterI [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8615 (SB_DFF): \clock.counterI [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9259 (SB_DFF): \reset_cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8599 (SB_DFF): \clock.counterI [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8617 (SB_DFF): \clock.counterI [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8607 (SB_DFF): \clock.counterI [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8618 (SB_DFF): \clock.counterI [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8620 (SB_DFF): \clock.counterI [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8563 (SB_DFFE): \clock.counterO [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8597 (SB_DFF): \clock.counterI [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8562 (SB_DFFE): \clock.counterO [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9227 (SB_DFFE): \pinTest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8586 (SB_DFFE): \clock.counterO [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9262 (SB_DFF): \reset_cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9263 (SB_DFF): \reset_cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9264 (SB_DFF): \reset_cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8585 (SB_DFFE): \clock.counterO [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8616 (SB_DFF): \clock.counterI [26] = 0

9.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in hardware.
  Merging $auto$simplemap.cc:277:simplemap_mux$8666 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [12], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8602 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8670 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [16], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8606 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13614 (A=1'0, B=$techmap\soc.$logic_and$picosoc.v:189$1197_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12834 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13612 (A=1'0, B=$techmap\soc.cpu.$procmux$5457_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12835 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14241 (A=$techmap$techmap\soc.cpu.$procmux$5131.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14285_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2081_Y) into $auto$simplemap.cc:420:simplemap_dff$12887 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14291 (A=$techmap\soc.cpu.$procmux$5113_Y, B=1'0, S=\soc.cpu.clear_prefetched_high_word) into $auto$simplemap.cc:420:simplemap_dff$12884 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14288 (A=\soc.cpu.mem_la_read, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2081_Y) into $auto$simplemap.cc:420:simplemap_dff$12885 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14240 (A=$techmap$techmap\soc.cpu.$procmux$5131.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14284_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2081_Y) into $auto$simplemap.cc:420:simplemap_dff$12886 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16341 (A=1'1, B=$auto$alumacc.cc:474:replace_alu$7261.AA [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13434 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14090 (A=$techmap$techmap\soc.cpu.$procmux$5189.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14084_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:549$2081_Y) into $auto$simplemap.cc:420:simplemap_dff$12956 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14734 (A=1'0, B=$techmap\soc.cpu.$procmux$4581_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12957 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14749 (A=1'0, B=$techmap\soc.cpu.$procmux$4538_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12960 (SB_DFFE).
  Merging $auto$simplemap.cc:311:simplemap_lut$12403 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$12399 [1], S=\soc.cpu.mem_rdata_latched [1]) into $auto$simplemap.cc:420:simplemap_dff$12968 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16342 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13435 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16343 (A=1'1, B=$auto$alumacc.cc:474:replace_alu$7261.AA [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13436 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16344 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13437 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16345 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13438 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16346 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13439 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16347 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13440 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16348 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13441 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16349 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13442 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16350 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13443 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16351 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13444 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16352 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13445 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16353 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13446 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16354 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13447 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16355 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13448 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16356 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13449 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16006 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13451 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16007 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13452 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25586 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14703_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13002 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16008 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13453 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25588 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14705_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16009 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13454 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16010 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13455 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16011 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13456 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16012 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13457 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16013 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13458 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25594 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14711_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13010 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16014 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13459 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25596 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14713_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13012 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16015 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13460 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16016 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13461 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16017 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13462 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16018 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13463 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25601 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14718_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13017 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16019 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13464 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16020 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16021 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16022 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13467 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25606 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14723_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13022 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16023 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13468 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16024 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13469 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16025 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13470 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16026 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13471 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25611 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14728_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13027 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16027 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13472 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16028 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13473 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16029 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13474 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16030 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13475 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25616 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14733_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13032 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16031 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13476 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16032 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13477 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16033 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13478 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16034 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13479 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16035 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13480 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16036 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13481 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16037 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13482 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16038 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13483 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16039 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13484 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16040 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13485 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16041 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13486 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16042 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13487 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14511 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1058$2282_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13062 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14509 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1057$2278_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14507 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1056$2274_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14505 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1055$2270_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14503 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1054$2266_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14501 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1053$2262_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14499 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1052$2258_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13068 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14497 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1051$2254_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13069 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14495 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1050$2250_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13070 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14493 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1049$2246_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13071 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14488 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1043$2230_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14486 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1042$2228_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14484 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1041$2226_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14482 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1040$2224_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14480 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1039$2222_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13079 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14478 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1038$2220_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13080 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14468 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1026$2202_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14466 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1025$2200_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14464 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1024$2198_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14462 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1023$2196_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14460 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1022$2194_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13093 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14458 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1021$2192_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13094 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16043 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13488 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16044 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13489 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16045 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13490 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16046 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13491 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16047 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13492 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16048 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13493 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16052 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16053 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13498 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16054 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13499 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16061 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16062 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16063 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16064 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16065 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16066 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15949 (A=$techmap\soc.cpu.$1\clear_prefetched_high_word[0:0], B=1'1, S=$techmap\soc.cpu.$logic_or$picorv32.v:1277$2410_Y) into $auto$simplemap.cc:420:simplemap_dff$13131 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16067 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16068 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13513 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18065 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13515 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18066 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13516 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18067 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13517 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18068 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13518 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18069 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13519 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18070 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13520 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18071 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13521 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18072 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13522 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18073 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13523 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18074 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13524 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18075 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13525 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18076 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13526 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18077 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13527 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18078 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13528 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18079 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13529 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18080 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13530 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18081 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13531 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18082 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13532 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17344 (A=1'1, B=$auto$wreduce.cc:454:run$7009 [1], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2445_Y) into $auto$simplemap.cc:420:simplemap_dff$13167 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17394 (A=1'0, B=$techmap\soc.cpu.$procmux$3211_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17399 (A=1'0, B=$techmap\soc.cpu.$logic_not$picorv32.v:1401$2448_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18083 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13533 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18084 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13534 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18085 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13535 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17343 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$59219, S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2445_Y) into $auto$simplemap.cc:420:simplemap_dff$13166 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17326 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3458.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$13854_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13172 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18086 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13536 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17328 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3458.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$13856_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13174 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18087 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13537 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18088 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13538 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17324 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3458.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$13852_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13170 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17321 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3484.$and$/usr/local/bin/../share/yosys/techmap.v:434$14068_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13176 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17318 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3497.$and$/usr/local/bin/../share/yosys/techmap.v:434$14068_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13177 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17309 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3555.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14084_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13179 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17307 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3591.$and$/usr/local/bin/../share/yosys/techmap.v:434$14068_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17302 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3598.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$17144_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18089 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13539 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17296 (A=1'0, B=$techmap\soc.cpu.$eq$picorv32.v:1518$2494_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17391 (A=1'0, B=$techmap\soc.cpu.$procmux$3222_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13184 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17409 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_wdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17408 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_rdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17130 (A=$techmap\soc.cpu.$procmux$3946_Y, B=1'1, S=$techmap\soc.cpu.$0\set_mem_do_rinst[0:0]) into $auto$simplemap.cc:420:simplemap_dff$13188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17123 (A=$techmap\soc.cpu.$logic_and$picorv32.v:1551$2511_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:1920$2626_Y) into $auto$simplemap.cc:420:simplemap_dff$13189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18090 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13540 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18091 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16975 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13195 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18092 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13542 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16977 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13197 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18093 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13543 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16979 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13199 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18094 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18095 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18096 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18097 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18098 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16985 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13205 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18099 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16987 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13207 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18100 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16989 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13209 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18101 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18102 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18103 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18104 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18105 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16995 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13215 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18106 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16997 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18107 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16999 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18108 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17001 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18109 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17003 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18110 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16972 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13192 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18111 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17414 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13228 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18112 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17416 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13230 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18113 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17418 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18114 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17420 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18115 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13565 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17422 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18116 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13566 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17424 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18117 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13567 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17426 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13240 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18118 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13568 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17428 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18119 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13569 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17430 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18120 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13570 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17432 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18121 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13571 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17434 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13248 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18122 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13572 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17436 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13250 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18123 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13573 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17438 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13252 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18124 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13574 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17440 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13254 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18125 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13575 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16877 (A=1'1, B=\soc.cpu.cpuregs_rs1 [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13257 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17410 (A=1'0, B=$techmap\soc.cpu.$5\next_irq_pending[31:0] [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13224 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18126 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13576 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16879 (A=1'1, B=\soc.cpu.cpuregs_rs1 [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13259 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18127 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1405$2449_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13577 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16881 (A=1'1, B=\soc.cpu.cpuregs_rs1 [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13261 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16882 (A=1'1, B=\soc.cpu.cpuregs_rs1 [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13262 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16883 (A=1'1, B=\soc.cpu.cpuregs_rs1 [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13263 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16884 (A=1'1, B=\soc.cpu.cpuregs_rs1 [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13264 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16885 (A=1'1, B=\soc.cpu.cpuregs_rs1 [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13265 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16886 (A=1'1, B=\soc.cpu.cpuregs_rs1 [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13266 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16887 (A=1'1, B=\soc.cpu.cpuregs_rs1 [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13267 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16888 (A=1'1, B=\soc.cpu.cpuregs_rs1 [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13268 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16889 (A=1'1, B=\soc.cpu.cpuregs_rs1 [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13269 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16890 (A=1'1, B=\soc.cpu.cpuregs_rs1 [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13270 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16891 (A=1'1, B=\soc.cpu.cpuregs_rs1 [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13271 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16892 (A=1'1, B=\soc.cpu.cpuregs_rs1 [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13272 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16893 (A=1'1, B=\soc.cpu.cpuregs_rs1 [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13273 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16894 (A=1'1, B=\soc.cpu.cpuregs_rs1 [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13274 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16895 (A=1'1, B=\soc.cpu.cpuregs_rs1 [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13275 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16896 (A=1'1, B=\soc.cpu.cpuregs_rs1 [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13276 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16897 (A=1'1, B=\soc.cpu.cpuregs_rs1 [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13277 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16898 (A=1'1, B=\soc.cpu.cpuregs_rs1 [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13278 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16899 (A=1'1, B=\soc.cpu.cpuregs_rs1 [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13279 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16900 (A=1'1, B=\soc.cpu.cpuregs_rs1 [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13280 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16901 (A=1'1, B=\soc.cpu.cpuregs_rs1 [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13281 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16902 (A=1'1, B=\soc.cpu.cpuregs_rs1 [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13282 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16903 (A=1'1, B=\soc.cpu.cpuregs_rs1 [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13283 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16904 (A=1'1, B=\soc.cpu.cpuregs_rs1 [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13284 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16905 (A=1'1, B=\soc.cpu.cpuregs_rs1 [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13285 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16906 (A=1'1, B=\soc.cpu.cpuregs_rs1 [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13286 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16907 (A=1'1, B=\soc.cpu.cpuregs_rs1 [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13287 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8654 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$59143, S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8590 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16876 (A=1'1, B=\soc.cpu.cpuregs_rs1 [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13256 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16873 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4055.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14070_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13288 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16868 (A=1'0, B=\soc.cpu.irq_active, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13289 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17356 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13292 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17357 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13293 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17358 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13294 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17359 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13295 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17360 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13296 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17361 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13297 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17362 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13298 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17363 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13299 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17364 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13300 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17365 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13301 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17366 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13302 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17367 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13303 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17368 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13304 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17369 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13305 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17370 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13306 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17371 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13307 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17372 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13308 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17373 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13309 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17374 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13310 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17375 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13311 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17376 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13312 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17377 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13313 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17378 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13314 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17379 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13315 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17380 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13316 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17381 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13317 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17382 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13318 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17383 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13319 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17384 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13320 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17385 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13321 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17354 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13290 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16390 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13387 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16391 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13388 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16392 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13389 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16393 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13390 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16394 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13391 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16395 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13392 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16396 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13393 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16397 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13394 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16398 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13395 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16399 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13396 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16400 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13397 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16401 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13398 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16402 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13399 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16403 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13400 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16404 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13401 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16405 (A=1'1, B=$techmap\soc.cpu.$procmux$4174_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13402 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16406 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13403 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16407 (A=1'1, B=$techmap\soc.cpu.$procmux$4174_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13404 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16408 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13405 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16409 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13406 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16410 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13407 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16411 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13408 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16412 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13409 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16413 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13410 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16414 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13411 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16415 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13412 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16416 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13413 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16417 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13414 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16418 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13415 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16419 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13416 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16326 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13419 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16389 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13386 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16327 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13420 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16328 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13421 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16329 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13422 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16330 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13423 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16331 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13424 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16332 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13425 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16333 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13426 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16334 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13427 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16335 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13428 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16336 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13429 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16337 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13430 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16338 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13431 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16339 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13432 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16340 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7261.AA [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13433 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9160 (A=$procmux$6603_Y, B=1'1, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9162 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16325 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$7267.BB [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13418 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25587 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14704_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13003 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25589 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14706_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13005 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25590 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14707_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13006 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25591 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14708_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13007 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25592 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14709_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13008 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25593 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14710_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13009 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25595 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14712_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13011 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25597 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14714_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13013 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25598 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14715_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13014 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25599 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14716_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13015 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25600 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14717_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25602 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14719_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13018 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25603 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14720_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13019 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25604 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14721_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13020 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25605 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14722_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13021 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25607 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14724_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13023 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25608 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14725_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13024 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25609 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14726_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13025 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25610 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14727_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13026 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25612 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14729_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25613 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14730_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13029 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25614 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14731_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13030 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25615 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$14732_Y, S=$techmap$techmap\soc.cpu.$procmux$4586.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$14695_Y) into $auto$simplemap.cc:420:simplemap_dff$13031 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14624 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4604.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$13848_Y [5], S=$auto$simplemap.cc:309:simplemap_lut$12402) into $auto$simplemap.cc:420:simplemap_dff$13038 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14887 (A=$techmap\soc.cpu.$procmux$4350_Y, B=1'0, S=$auto$simplemap.cc:309:simplemap_lut$12402) into $auto$simplemap.cc:420:simplemap_dff$13044 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16049 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13494 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16050 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16051 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16055 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16056 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16057 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16058 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16059 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16060 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1542$2507_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16005 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$59200, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13450 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17345 (A=1'1, B=$auto$wreduce.cc:454:run$7009 [2], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2445_Y) into $auto$simplemap.cc:420:simplemap_dff$13168 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17346 (A=1'1, B=$auto$wreduce.cc:454:run$7009 [3], S=$techmap\soc.cpu.$logic_and$picorv32.v:1396$2445_Y) into $auto$simplemap.cc:420:simplemap_dff$13169 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17325 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3458.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$13853_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13171 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17327 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3458.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$13855_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13173 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17329 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3458.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$13857_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13175 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17297 (A=1'0, B=$techmap\soc.cpu.$ternary$picorv32.v:1519$2497_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16973 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13193 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16974 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13194 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16976 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13196 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16978 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13198 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16980 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13200 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16981 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13201 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16982 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13202 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16983 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13203 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16984 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13204 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16986 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13206 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16988 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13208 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16990 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13210 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16991 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13211 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16992 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16993 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16994 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13214 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16996 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16998 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17000 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17002 (A=1'0, B=$techmap\soc.cpu.$procmux$4018_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17411 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2704.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14067_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17413 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17415 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13229 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17417 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17419 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13233 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17421 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17423 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17425 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17427 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13241 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17429 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17431 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17433 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13247 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17435 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13249 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17437 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13251 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17439 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13253 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17441 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1491$2473_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13255 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16878 (A=1'1, B=\soc.cpu.cpuregs_rs1 [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13258 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16880 (A=1'1, B=\soc.cpu.cpuregs_rs1 [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13260 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18064 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$59181, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13514 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16000 (A=1'0, B=$techmap\soc.cpu.$procmux$4248_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13578 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8658 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [4], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8594 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8662 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [8], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8598 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20043 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19911 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20044 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19912 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20045 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19913 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20046 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19914 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20047 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19915 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20048 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19916 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20049 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19917 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20058 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19918 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20059 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19919 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20060 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19920 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20061 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19921 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20062 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19922 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20063 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19923 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20064 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19924 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20065 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19925 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20074 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19926 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20075 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19927 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20076 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19928 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20077 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19929 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20078 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19930 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20079 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19931 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20080 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19932 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20081 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19933 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20090 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19934 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20091 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19935 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20092 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19936 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20093 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19937 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20094 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19938 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20095 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19939 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20096 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19940 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20042 (A=1'1, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19910 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20174 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5750_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19942 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20097 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19941 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20151 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19944 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20152 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19945 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20153 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19946 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20154 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19947 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20155 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19948 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20156 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19949 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20150 (A=1'0, B=\soc.simpleuart.recv_pattern [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19943 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20157 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19950 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20127 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19952 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20128 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19953 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20129 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19954 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20130 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19955 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20131 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19956 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20132 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19957 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20126 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19951 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20133 (A=1'0, B=\uart_in, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19958 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20179 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19960 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20180 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19961 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20181 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19962 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20182 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19963 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20183 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19964 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20184 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19965 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20185 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19966 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20186 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19967 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20187 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19968 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20188 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19969 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20189 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19970 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20190 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19971 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20191 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19972 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20192 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19973 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20193 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19974 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20194 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19975 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20195 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19976 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20196 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19977 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20197 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19978 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20198 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19979 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20199 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19980 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20200 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19981 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20201 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19982 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20202 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19983 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20203 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19984 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20204 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19985 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20205 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19986 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20206 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19987 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20207 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19988 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20208 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19989 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20178 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19959 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20209 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5736.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19990 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20107 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5778.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$13901_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19992 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20108 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5778.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$13901_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19993 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20106 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5778.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$13901_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19991 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20336 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5706_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19995 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20109 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5778.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$13901_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19994 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20340 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19997 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20341 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19998 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20342 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19999 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20343 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20000 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20344 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20001 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20345 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20002 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20346 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20003 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20347 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20004 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20348 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20005 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20349 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20006 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20350 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20007 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20351 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20008 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20352 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20009 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20353 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20010 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20354 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20011 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20355 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20012 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20356 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20013 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20357 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20014 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20358 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20015 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20359 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20016 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20360 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20017 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20361 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20018 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20362 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20019 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20363 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20020 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20364 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20021 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20365 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20022 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20366 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20023 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20367 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20024 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20368 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20025 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20369 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20026 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20339 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19996 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20370 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5698_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20027 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20321 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5717_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20029 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20322 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5717_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20030 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20320 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5717_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20323 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5717_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20031 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20281 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20033 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20282 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20034 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20283 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20035 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20284 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20036 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20285 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20037 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20286 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20038 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20287 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20039 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20288 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20040 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20561 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$20550) into $auto$simplemap.cc:420:simplemap_dff$20541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20771 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20616 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20772 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20617 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8921 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9215 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20768 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20766 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20620 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20773 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20618 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20759 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20760 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20758 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20761 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20751 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20752 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20750 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20748 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20746 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20630 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20744 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20631 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20742 (A=1'1, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20632 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20778 (A=1'1, B=$techmap\soc.spimemio.$logic_or$spimemio.v:100$45_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23944 (A=$techmap\soc.spimemio.xfer.$2\flash_io3_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24255) into $auto$simplemap.cc:420:simplemap_dff$20634 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$23942 (A=$techmap\soc.spimemio.xfer.$2\flash_io2_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24255) into $auto$simplemap.cc:420:simplemap_dff$20635 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$23941 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$6100.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14067_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24255) into $auto$simplemap.cc:420:simplemap_dff$20636 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$23939 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$6048.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14067_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$24255) into $auto$simplemap.cc:420:simplemap_dff$20637 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$20753 (A=1'1, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20996 (A=$techmap\soc.spimemio.$procmux$6235_Y [1], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20639 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20997 (A=$techmap\soc.spimemio.$procmux$6235_Y [2], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20995 (A=$techmap\soc.spimemio.$procmux$6235_Y [0], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20638 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20992 (A=$techmap\soc.spimemio.$procmux$6250_Y, B=1'0, S=\soc.spimemio.jump) into $auto$simplemap.cc:420:simplemap_dff$20642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20989 (A=\soc.spimemio.rd_inc, B=1'0, S=\soc.spimemio.valid) into $auto$simplemap.cc:420:simplemap_dff$20643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20985 (A=$techmap\soc.spimemio.$procmux$6266_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20998 (A=$techmap\soc.spimemio.$procmux$6235_Y [3], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20929 (A=$techmap\soc.spimemio.$procmux$6325_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20924 (A=$techmap\soc.spimemio.$procmux$6344_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20694 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20919 (A=$techmap\soc.spimemio.$procmux$6363_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20695 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20896 (A=$techmap$techmap\soc.spimemio.$procmux$6373.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$20912_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20897 (A=$techmap$techmap\soc.spimemio.$procmux$6373.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$20913_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20698 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20895 (A=$techmap$techmap\soc.spimemio.$procmux$6373.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$20911_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20898 (A=$techmap$techmap\soc.spimemio.$procmux$6373.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$20914_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20933 (A=$techmap$techmap\soc.spimemio.$procmux$6280.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14080_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20708 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21122 (A=$techmap\soc.spimemio.$procmux$6183_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$67_Y) into $auto$simplemap.cc:420:simplemap_dff$20709 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9103 (A=$procmux$6590_Y [10], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9173 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9095 (A=$procmux$6590_Y [2], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9165 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21642 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$11823, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1048_Y) into $auto$simplemap.cc:420:simplemap_dff$21441 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21641 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$11872, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1048_Y) into $auto$simplemap.cc:420:simplemap_dff$21442 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21640 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$11883, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1048_Y) into $auto$simplemap.cc:420:simplemap_dff$21443 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22186 (A=1'0, B=\soc.cpu.pcpi_div.start, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$21447 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22123 (A=\soc.cpu.pcpi_div.quotient_msk [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21449 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22124 (A=\soc.cpu.pcpi_div.quotient_msk [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21450 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22125 (A=\soc.cpu.pcpi_div.quotient_msk [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21451 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22126 (A=\soc.cpu.pcpi_div.quotient_msk [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21452 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22127 (A=\soc.cpu.pcpi_div.quotient_msk [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21453 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22128 (A=\soc.cpu.pcpi_div.quotient_msk [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21454 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22129 (A=\soc.cpu.pcpi_div.quotient_msk [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21455 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22130 (A=\soc.cpu.pcpi_div.quotient_msk [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21456 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22131 (A=\soc.cpu.pcpi_div.quotient_msk [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21457 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22132 (A=\soc.cpu.pcpi_div.quotient_msk [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21458 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22133 (A=\soc.cpu.pcpi_div.quotient_msk [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21459 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22134 (A=\soc.cpu.pcpi_div.quotient_msk [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21460 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22135 (A=\soc.cpu.pcpi_div.quotient_msk [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21461 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22136 (A=\soc.cpu.pcpi_div.quotient_msk [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21462 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22137 (A=\soc.cpu.pcpi_div.quotient_msk [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21463 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22138 (A=\soc.cpu.pcpi_div.quotient_msk [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21464 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22139 (A=\soc.cpu.pcpi_div.quotient_msk [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22140 (A=\soc.cpu.pcpi_div.quotient_msk [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22141 (A=\soc.cpu.pcpi_div.quotient_msk [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21467 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22142 (A=\soc.cpu.pcpi_div.quotient_msk [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21468 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22143 (A=\soc.cpu.pcpi_div.quotient_msk [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21469 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22144 (A=\soc.cpu.pcpi_div.quotient_msk [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21470 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22145 (A=\soc.cpu.pcpi_div.quotient_msk [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21471 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22146 (A=\soc.cpu.pcpi_div.quotient_msk [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21472 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22147 (A=\soc.cpu.pcpi_div.quotient_msk [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21473 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22148 (A=\soc.cpu.pcpi_div.quotient_msk [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21474 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22149 (A=\soc.cpu.pcpi_div.quotient_msk [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21475 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22150 (A=\soc.cpu.pcpi_div.quotient_msk [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21476 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22151 (A=\soc.cpu.pcpi_div.quotient_msk [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21477 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22152 (A=\soc.cpu.pcpi_div.quotient_msk [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21478 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22122 (A=\soc.cpu.pcpi_div.quotient_msk [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21448 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21995 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21481 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21996 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21482 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21997 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21483 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21998 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21484 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21999 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21485 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22000 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21486 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22001 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21487 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22002 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21488 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22003 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21489 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22004 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21490 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22005 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21491 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22006 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21492 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22007 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21493 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22008 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21494 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22009 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22010 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22011 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22012 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21498 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22013 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21499 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22014 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22015 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22016 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22017 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22018 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22019 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22020 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22021 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22022 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22023 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22024 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21994 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [0], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21480 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22025 (A=$techmap\soc.cpu.pcpi_div.$or$picorv32.v:2428$1079_Y [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21837 (A=\soc.cpu.pcpi_div.divisor [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21513 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21838 (A=\soc.cpu.pcpi_div.divisor [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21514 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21839 (A=\soc.cpu.pcpi_div.divisor [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21515 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21840 (A=\soc.cpu.pcpi_div.divisor [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21516 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21841 (A=\soc.cpu.pcpi_div.divisor [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21517 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21842 (A=\soc.cpu.pcpi_div.divisor [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21518 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21843 (A=\soc.cpu.pcpi_div.divisor [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21519 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21844 (A=\soc.cpu.pcpi_div.divisor [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21520 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21845 (A=\soc.cpu.pcpi_div.divisor [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21521 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21846 (A=\soc.cpu.pcpi_div.divisor [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21522 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21847 (A=\soc.cpu.pcpi_div.divisor [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21523 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21848 (A=\soc.cpu.pcpi_div.divisor [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21524 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21849 (A=\soc.cpu.pcpi_div.divisor [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21525 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21850 (A=\soc.cpu.pcpi_div.divisor [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21526 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21851 (A=\soc.cpu.pcpi_div.divisor [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21527 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21852 (A=\soc.cpu.pcpi_div.divisor [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21528 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21853 (A=\soc.cpu.pcpi_div.divisor [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21529 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21854 (A=\soc.cpu.pcpi_div.divisor [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21530 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21855 (A=\soc.cpu.pcpi_div.divisor [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21531 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21856 (A=\soc.cpu.pcpi_div.divisor [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21532 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21857 (A=\soc.cpu.pcpi_div.divisor [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21533 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21858 (A=\soc.cpu.pcpi_div.divisor [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21534 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21859 (A=\soc.cpu.pcpi_div.divisor [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21535 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21860 (A=\soc.cpu.pcpi_div.divisor [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21536 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21861 (A=\soc.cpu.pcpi_div.divisor [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21537 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21862 (A=\soc.cpu.pcpi_div.divisor [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21538 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21863 (A=\soc.cpu.pcpi_div.divisor [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21539 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21864 (A=\soc.cpu.pcpi_div.divisor [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21540 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21865 (A=\soc.cpu.pcpi_div.divisor [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21541 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21866 (A=\soc.cpu.pcpi_div.divisor [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21542 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21836 (A=\soc.cpu.pcpi_div.divisor [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21898 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$shl$picorv32.v:2403$1063_Y [62], S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$21574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8659 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [5], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8595 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22970 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$11761, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$956_Y) into $auto$simplemap.cc:420:simplemap_dff$22659 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22969 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$11789, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$956_Y) into $auto$simplemap.cc:420:simplemap_dff$22660 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22968 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$11799, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$956_Y) into $auto$simplemap.cc:420:simplemap_dff$22661 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9094 (A=$procmux$6590_Y [1], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9164 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22962 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$5682_Y, S=$techmap\soc.cpu.pcpi_mul.$logic_and$picorv32.v:2155$956_Y) into $auto$simplemap.cc:420:simplemap_dff$22662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23452 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$5615_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23450 (A=1'1, B=$techmap\soc.cpu.pcpi_mul.$procmux$5623_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$22665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23444 (A=$auto$wreduce.cc:454:run$7019 [1], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23445 (A=$auto$wreduce.cc:454:run$7019 [2], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23446 (A=$auto$wreduce.cc:454:run$7019 [3], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23447 (A=$auto$wreduce.cc:454:run$7019 [4], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23443 (A=$auto$simplemap.cc:309:simplemap_lut$59447, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22666 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23449 (A=$auto$wreduce.cc:454:run$7019 [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23421 (A=\soc.cpu.pcpi_mul.next_rdt [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23422 (A=\soc.cpu.pcpi_mul.next_rdt [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23423 (A=\soc.cpu.pcpi_mul.next_rdt [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23424 (A=\soc.cpu.pcpi_mul.next_rdt [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23425 (A=\soc.cpu.pcpi_mul.next_rdt [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23426 (A=\soc.cpu.pcpi_mul.next_rdt [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23427 (A=\soc.cpu.pcpi_mul.next_rdt [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22701 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23428 (A=\soc.cpu.pcpi_mul.next_rdt [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23429 (A=\soc.cpu.pcpi_mul.next_rdt [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22709 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23430 (A=\soc.cpu.pcpi_mul.next_rdt [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23431 (A=\soc.cpu.pcpi_mul.next_rdt [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23432 (A=\soc.cpu.pcpi_mul.next_rdt [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22721 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23433 (A=\soc.cpu.pcpi_mul.next_rdt [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22725 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23434 (A=\soc.cpu.pcpi_mul.next_rdt [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22729 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23435 (A=\soc.cpu.pcpi_mul.next_rdt [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23294 (A=\soc.cpu.pcpi_mul.next_rd [1], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23295 (A=\soc.cpu.pcpi_mul.next_rd [2], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23296 (A=\soc.cpu.pcpi_mul.next_rd [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23297 (A=$auto$simplemap.cc:309:simplemap_lut$59656, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23298 (A=\soc.cpu.pcpi_mul.next_rd [5], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23299 (A=\soc.cpu.pcpi_mul.next_rd [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23300 (A=\soc.cpu.pcpi_mul.next_rd [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23301 (A=$auto$simplemap.cc:309:simplemap_lut$59466, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23302 (A=\soc.cpu.pcpi_mul.next_rd [9], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23303 (A=\soc.cpu.pcpi_mul.next_rd [10], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23304 (A=\soc.cpu.pcpi_mul.next_rd [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23305 (A=$auto$simplemap.cc:309:simplemap_lut$59637, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23306 (A=\soc.cpu.pcpi_mul.next_rd [13], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23307 (A=\soc.cpu.pcpi_mul.next_rd [14], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23308 (A=\soc.cpu.pcpi_mul.next_rd [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23309 (A=$auto$simplemap.cc:309:simplemap_lut$59599, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23310 (A=\soc.cpu.pcpi_mul.next_rd [17], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22754 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23311 (A=\soc.cpu.pcpi_mul.next_rd [18], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23312 (A=\soc.cpu.pcpi_mul.next_rd [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23313 (A=$auto$simplemap.cc:309:simplemap_lut$59713, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23314 (A=\soc.cpu.pcpi_mul.next_rd [21], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23315 (A=\soc.cpu.pcpi_mul.next_rd [22], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23316 (A=\soc.cpu.pcpi_mul.next_rd [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23317 (A=$auto$simplemap.cc:309:simplemap_lut$59732, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22761 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23318 (A=\soc.cpu.pcpi_mul.next_rd [25], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22762 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23319 (A=\soc.cpu.pcpi_mul.next_rd [26], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22763 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23320 (A=\soc.cpu.pcpi_mul.next_rd [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22764 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23321 (A=$auto$simplemap.cc:309:simplemap_lut$59694, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22765 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23322 (A=\soc.cpu.pcpi_mul.next_rd [29], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22766 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23323 (A=\soc.cpu.pcpi_mul.next_rd [30], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22767 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23324 (A=\soc.cpu.pcpi_mul.next_rd [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22768 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23325 (A=$auto$simplemap.cc:309:simplemap_lut$59751, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22769 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23326 (A=\soc.cpu.pcpi_mul.next_rd [33], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22770 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23327 (A=\soc.cpu.pcpi_mul.next_rd [34], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22771 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23328 (A=\soc.cpu.pcpi_mul.next_rd [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22772 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23329 (A=$auto$simplemap.cc:309:simplemap_lut$59675, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22773 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23330 (A=\soc.cpu.pcpi_mul.next_rd [37], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22774 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23331 (A=\soc.cpu.pcpi_mul.next_rd [38], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22775 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23332 (A=\soc.cpu.pcpi_mul.next_rd [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22776 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23333 (A=$auto$simplemap.cc:309:simplemap_lut$59485, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22777 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23334 (A=\soc.cpu.pcpi_mul.next_rd [41], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22778 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23335 (A=\soc.cpu.pcpi_mul.next_rd [42], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22779 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23336 (A=\soc.cpu.pcpi_mul.next_rd [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22780 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23337 (A=$auto$simplemap.cc:309:simplemap_lut$59523, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22781 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23338 (A=\soc.cpu.pcpi_mul.next_rd [45], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22782 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23339 (A=\soc.cpu.pcpi_mul.next_rd [46], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22783 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23340 (A=\soc.cpu.pcpi_mul.next_rd [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22784 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23341 (A=$auto$simplemap.cc:309:simplemap_lut$59504, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22785 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23342 (A=\soc.cpu.pcpi_mul.next_rd [49], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22786 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23343 (A=\soc.cpu.pcpi_mul.next_rd [50], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22787 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23344 (A=\soc.cpu.pcpi_mul.next_rd [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22788 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23345 (A=$auto$simplemap.cc:309:simplemap_lut$59561, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22789 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23346 (A=\soc.cpu.pcpi_mul.next_rd [53], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22790 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23347 (A=\soc.cpu.pcpi_mul.next_rd [54], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22791 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23348 (A=\soc.cpu.pcpi_mul.next_rd [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22792 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23349 (A=$auto$simplemap.cc:309:simplemap_lut$59542, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22793 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23350 (A=\soc.cpu.pcpi_mul.next_rd [57], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22794 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23351 (A=\soc.cpu.pcpi_mul.next_rd [58], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22795 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23352 (A=\soc.cpu.pcpi_mul.next_rd [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22796 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23353 (A=$auto$simplemap.cc:309:simplemap_lut$59580, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22797 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23354 (A=\soc.cpu.pcpi_mul.next_rd [61], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22798 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23355 (A=\soc.cpu.pcpi_mul.next_rd [62], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22799 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23293 (A=$auto$simplemap.cc:309:simplemap_lut$59618, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23356 (A=\soc.cpu.pcpi_mul.next_rd [63], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22800 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23164 (A=1'0, B=\soc.cpu.reg_op2 [0], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22801 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23098 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$5657_Y [63], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$22928 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24187 (A=1'0, B=\soc.spimemio.din_tag [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23904 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24188 (A=1'0, B=\soc.spimemio.din_tag [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23905 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24189 (A=1'0, B=\soc.spimemio.din_tag [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23906 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24190 (A=1'0, B=\soc.spimemio.din_tag [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23907 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24097 (A=1'0, B=\soc.spimemio.xfer.din_ddr, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23934 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24196 (A=1'1, B=$auto$wreduce.cc:454:run$7051 [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23902 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24195 (A=1'1, B=\soc.spimemio.xfer.next_fetch, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23903 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$24185 (A=1'0, B=\soc.spimemio.din_rd, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23908 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24183 (A=1'0, B=\soc.spimemio.din_qspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23909 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24172 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5838_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23911 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24173 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5838_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23912 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24171 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5838_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23910 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24174 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5838_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23913 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24156 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5848_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23915 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24157 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5848_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23916 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24155 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5848_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23914 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24158 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5848_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23917 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24095 (A=1'0, B=\soc.spimemio.xfer.din_dspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23935 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$24091 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5886_Y, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$23936 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17355 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3351.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$15964_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13291 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22191 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$procmux$5515_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$21639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20280 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5728_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20032 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8685 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [31], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8621 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8655 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8591 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8656 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8592 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8657 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8593 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8660 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [6], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8596 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9121 (A=$procmux$6590_Y [28], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8683 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [29], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8619 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17351 (A=1'0, B=\soc.cpu.cpu_state [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13579 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8675 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [21], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8611 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8664 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [10], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8600 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8665 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [11], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8601 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8674 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [20], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8610 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8667 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [13], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8603 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8668 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [14], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8604 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8672 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [18], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8608 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8673 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [19], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8609 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8669 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [15], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8605 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10208 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$23882) into $auto$simplemap.cc:420:simplemap_dff$10143 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8676 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [22], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8612 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8677 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [23], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8678 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [24], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8614 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8679 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [25], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8920 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8663 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [9], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8599 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8681 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [27], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8671 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [17], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8607 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8682 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [28], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8684 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [30], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16420 (A=1'0, B=$techmap\soc.cpu.$procmux$4174_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$13417 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9096 (A=$procmux$6590_Y [3], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9166 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9097 (A=$procmux$6590_Y [4], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9167 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9098 (A=$procmux$6590_Y [5], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9168 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9099 (A=$procmux$6590_Y [6], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9169 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9100 (A=$procmux$6590_Y [7], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9170 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9101 (A=$procmux$6590_Y [8], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9171 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9102 (A=$procmux$6590_Y [9], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9172 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21643 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$11813, S=$techmap\soc.cpu.pcpi_div.$logic_and$picorv32.v:2372$1048_Y) into $auto$simplemap.cc:420:simplemap_dff$21440 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9104 (A=$procmux$6590_Y [11], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9174 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9105 (A=$procmux$6590_Y [12], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9175 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9106 (A=$procmux$6590_Y [13], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9176 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9107 (A=$procmux$6590_Y [14], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9177 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9108 (A=$procmux$6590_Y [15], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9178 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9109 (A=$procmux$6590_Y [16], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9179 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9110 (A=$procmux$6590_Y [17], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9111 (A=$procmux$6590_Y [18], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9112 (A=$procmux$6590_Y [19], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9113 (A=$procmux$6590_Y [20], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9114 (A=$procmux$6590_Y [21], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9184 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9115 (A=$procmux$6590_Y [22], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9116 (A=$procmux$6590_Y [23], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9117 (A=$procmux$6590_Y [24], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9118 (A=$procmux$6590_Y [25], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9119 (A=$procmux$6590_Y [26], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9120 (A=$procmux$6590_Y [27], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8661 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [7], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8597 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9122 (A=$procmux$6590_Y [29], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9123 (A=$procmux$6590_Y [30], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9193 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9124 (A=$procmux$6590_Y [31], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8966 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9196 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9093 (A=$procmux$6590_Y [0], B=1'0, S=$logic_and$hardware.v:161$26_Y) into $auto$simplemap.cc:420:simplemap_dff$9163 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8967 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8968 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8969 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8970 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8971 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8972 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8941 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8942 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8943 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8944 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8945 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8946 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8947 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8948 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8917 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8918 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8919 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8922 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9216 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8923 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9217 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8924 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9218 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8989 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9219 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8990 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9220 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8991 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8992 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8993 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9223 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8994 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9224 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8995 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8996 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20770 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20615 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8965 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$9195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8680 (A=1'0, B=$techmap\clock.$add$clock.v:17$1114_Y [26], S=$auto$simplemap.cc:256:simplemap_eqne$8738) into $auto$simplemap.cc:420:simplemap_dff$8616 (SB_DFF).

9.40. Executing ICE40_OPT pass (performing simple optimizations).

9.40.1. Running ICE40 specific optimizations.

9.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.
<suppressed ~1558 debug messages>

9.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
<suppressed ~18714 debug messages>
Removed a total of 6238 cells.

9.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

9.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..
Removed 849 unused cells and 15562 unused wires.
<suppressed ~850 debug messages>

9.40.6. Rerunning OPT passes. (Removed registers in this run.)

9.40.7. Running ICE40 specific optimizations.

9.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hardware.

9.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hardware'.
Removed a total of 0 cells.

9.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

9.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hardware..

9.40.12. Finished OPT passes. (There is nothing left to do.)

9.41. Executing TECHMAP pass (map to technology primitives).

9.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

9.41.2. Continuing TECHMAP pass.
No more expansions possible.

9.42. Executing ABC pass (technology mapping using ABC).

9.42.1. Extracting gate netlist of module `\hardware' to `<abc-temp-dir>/input.blif'..
Extracted 9437 gates and 11738 wires to a netlist network with 2299 inputs and 1668 outputs.

9.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2745.
ABC: Participating nodes from both networks       =    5767.
ABC: Participating nodes from the first network   =    2753. (  67.98 % of nodes)
ABC: Participating nodes from the second network  =    3014. (  74.42 % of nodes)
ABC: Node pairs (any polarity)                    =    2753. (  67.98 % of names can be moved)
ABC: Node pairs (same polarity)                   =    2045. (  50.49 % of names can be moved)
ABC: Total runtime =     0.44 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

9.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     4048
ABC RESULTS:        internal signals:     7771
ABC RESULTS:           input signals:     2299
ABC RESULTS:          output signals:     1668
Removing temp directory.

9.43. Executing TECHMAP pass (map to technology primitives).

9.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

9.43.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110 for cells of type $__ICE40_CARRY_WRAPPER.
No more expansions possible.
<suppressed ~1073 debug messages>
Removed 300 unused cells and 12839 unused wires.

9.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4853
  1-LUT              305
  2-LUT              648
  3-LUT             1945
  4-LUT             1955
  with \SB_CARRY     765

Eliminating LUTs.
Number of LUTs:     4853
  1-LUT              305
  2-LUT              648
  3-LUT             1945
  4-LUT             1955
  with \SB_CARRY     765

Combining LUTs.
Number of LUTs:     4771
  1-LUT              302
  2-LUT              572
  3-LUT             1871
  4-LUT             2026
  with \SB_CARRY     765

Eliminated 0 LUTs.
Combined 82 LUTs.
<suppressed ~28488 debug messages>

9.45. Executing TECHMAP pass (map to technology primitives).

9.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

9.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110010100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111101110110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000001100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010110111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111010111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111100000101 for cells of type $lut.
No more expansions possible.
<suppressed ~7279 debug messages>
Removed 0 unused cells and 9623 unused wires.

9.46. Executing HIERARCHY pass (managing design hierarchy).

9.46.1. Analyzing design hierarchy..
Top module:  \hardware

9.46.2. Analyzing design hierarchy..
Top module:  \hardware
Removed 0 unused modules.

9.47. Printing statistics.

=== hardware ===

   Number of wires:               4841
   Number of wire bits:           9933
   Number of public wires:         404
   Number of public wire bits:    3954
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7527
     SB_CARRY                     1020
     SB_DFF                        159
     SB_DFFE                       658
     SB_DFFESR                     575
     SB_DFFESS                      62
     SB_DFFNSR                       4
     SB_DFFSR                      248
     SB_DFFSS                        6
     SB_IO                           4
     SB_LUT4                      4771
     SB_RAM40_4K                    20

9.48. Executing CHECK pass (checking for obvious problems).
checking module hardware..
found and reported 0 problems.

9.49. Executing BLIF backend.

End of script. Logfile hash: 51ce19fcd5
CPU: user 14.93s system 0.03s, MEM: 130.45 MB total, 96.92 MB resident
Yosys 0.9+36 (git sha1 4a7bc8c7, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 26% 29x opt_expr (3 sec), 20% 23x opt_merge (3 sec), 20% 27x opt_clean (3 sec), ...
